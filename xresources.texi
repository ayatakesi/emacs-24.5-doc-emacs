@c ===========================================================================
@c
@c This file was generated with po4a. Translate the source file.
@c
@c ===========================================================================
@c This is part of the Emacs manual.
@c Copyright (C) 1987, 1993-1995, 1997, 2001-2015 Free Software
@c Foundation, Inc.
@c See file emacs.texi for copying conditions.
@node X Resources
@appendix Xのオプションとリソース

  Xを使用するプログラムにたいして通常行なうように、Xリソースを使用してEmacsのXに関連する外観をカスタマイズできます。

  EmacsがGTK+サポートつきでコンパイルされている場合、メニューバー、スクロールバー、ダイアログボックスなどの、さまざまなグラフィカルウィジェットの外観は
@ifnottex
``GTKリソース''で決定されるので、これについても説明します。
@end ifnottex
@iftex
``GTKリソース''で決定されます。
@end iftex
EmacsがGTK+のサポートなしでビルドされた場合、これらのウィジェットの外観は追加のXリソースにより決定されます。

  MS-Windowsでは、システムレジストリー(@ref{MS-Windows
Registry}を参照してください)を使用して、いくつかの外観を同じようにカスタマイズできます。

@menu
* Resources::                EmacsでXリソースを使用する(概説)。
* Table of Resources::       Emacsに影響する特定のXリソースの表。
* Lucid Resources::          LucidメニューにたいするXリソース。
* Motif Resources::          MotifおよびLessTifメニューにたいするXリソース。
* GTK resources::            GTKウィジェットにたいするリソース。
@end menu

@node Resources
@appendixsec Xリソース
@cindex resources
@cindex X resources
@cindex @file{~/.Xdefaults} file
@cindex @file{~/.Xresources} file

  Xウィンドウシステムの下で実行されているプログラムは、クラスとリソースの階層の下にユーザーオプションを組織化します。これらのオプションにたいして、@dfn{Xリソースファイル(X
resource
file)}でデフォルト値を指定できます。Xリソースファイルは、通常@file{~/.Xdefaults}または@file{~/.Xresources}という名前です。このファイルの内容を変更しても、変更は即座に効果をもちません。これはXサーバーが独自にリソースのリストを保持しているからです。これを更新するには、たとえば@samp{xrdb
~/.Xdefaults}のように、コマンド@command{xrdb}を使用します。

@cindex registry, setting resources (MS-Windows)
  (MS-WindowsシステムはXリソースファイルをサポートしません。そのようなシステムでは、EmacsはWindowsレジストリーの中からXリソースを探します。最初にキー@samp{HKEY_CURRENT_USER\SOFTWARE\GNU\Emacs}の下を探します。これはカレントユーザーだけに影響し、システムワイドなセッティングをオーバーライドします。次にキー@samp{HKEY_LOCAL_MACHINE\SOFTWARE\GNU\Emacs}の下を探します。これはシステムのすべてのユーザーに影響します。メニューとスクロールバーは、MS-Windowsのネイティブなウィジェットなので、Display
Control
Panelのシステムワイドなセッティングからしかカスタマイズできません。以下で説明するように、コマンドラインオプション@samp{-xrm}を使用して、リソースをセットすることもできます。)

  Xリソースファイルの各行は、1つのオプション、または関連するオプションのコレクションにたいして値を指定します。ファイル内で行が出現する順番に意味はありません。各リソース指定は、@dfn{プログラム名(program
name)}と@dfn{リソース名(resource name)}から構成されます。これらの名前の大文字小文字は区別されます。以下は例です:

@example
emacs.cursorColor: dark green
@end example

  プログラム名は、そのリソースが適用される実行可能ファイルの名前です。Emacsでは通常、@samp{emacs}です。Emacsの実行可能ファイル名の如何にかかわらずに、Emacsのすべてのインスタンスに適用される定義を指定するには、@samp{Emacs}を使用します。

  リソース名はプログラムセッティングの名前です。たとえばEmacsは、@samp{cursorColor}リソースを、テキストカーソルのカラーを制御するリソースと認識します。

  リソースは、名前のついたクラスにグループ化されます。たとえば@samp{Foreground}クラスには、リソース@samp{cursorColor}、@samp{foreground}、@samp{pointerColor}が含まれます(@ref{Table
of
Resources}を参照してください)。以下のように、リソース名を使用するかわりに、クラス内のすべてのリソースにたいしてデフォルト値を指定するのに、クラス名を使用できます:

@example
emacs.Foreground: dark green
@end example

  変数@code{inhibit-x-resources}を非@code{nil}値にセットした場合、EmacsはXリソースを処理しません。コマンドラインオプション@samp{-Q}
(または@samp{--quick})でEmacsを呼び出した場合、@code{inhibit-x-resources}は自動的に@code{t}にセットされます(@ref{Initial
Options}を参照してください)。

@ifnottex
  これに加えて、Xリソースファイルをオーバーライドするために、以下のコマンドラインオプションが使用できます:

@table @samp
@item -name @var{name}
@opindex --name
@itemx --name=@var{name}
@cindex resource name, command-line argument
このオプションは初期Emacsフレームのプログラム名を@var{name}にセットします。これは初期フレームのタイトルも@var{name}にセットします。このオプションは、それ以降のフレームには影響しません。

このオプションを指定しない場合、プログラム名としてEmacs実行可能ファイル名をデフォルトとして使用されます。

整合性のため、@samp{-name}は、特定のフレームに属さない、他のリソース値にたいして使用する名前も指定します。

Emacs呼び出しの名前がつくリソースは、@samp{Emacs}という名前のクラスにも所属します。@samp{emacs}のかわりに@samp{Emacs}と記述した場合、実行可能ファイル名にかかわらず、そのリソースは、すべてのEmacsジョブのすべてのフレームに適用されます。

@item -xrm @var{resource-values}
@opindex --xrm
@itemx --xrm=@var{resource-values}
@cindex resource values, command-line argument
このオプションは、現在のEmacsジョブにたいして、Xリソース値を指定します。

@var{resource-values}は、Xリソースファイルの内部で使用するのと同じ形式をもつ必要があります。@var{resource-values}に複数のリソース指定を含めるには、ファイルに記述するときのように、リソース間に改行を置きます。ファイルのリソース指定をすべてインクルードするために、@samp{#include
"@var{filename}"}を使用することもできます。@samp{-xrm}で指定されたリソース値は、他のすべてのリソース指定に優先します。
@end table
@end ifnottex

@node Table of Resources
@appendixsec EmacsにたいするXリソースの表

  以下の表は、メニューバーのようなグラフィカルなウィジェットの外観を制御するものを除いた、Emacsが認識するXリソース名です:

@table @asis
@item @code{background} (class @code{Background})
バックグラウンドカラーです(@ref{Colors}を参照してください)。

@item @code{bitmapIcon} (class @code{BitmapIcon})
@samp{on}のときはEmacsアイコンを表示し、@samp{off}のときは表示しないように、ウィンドウマネージャーに指示します。アイコンの説明は、@ref{Icons
X}を参照してください。

@ifnottex
@item @code{borderColor} (class @code{BorderColor})
フレームの外枠ボーダーのカラーです。EmacsがGTK+サポートつきでコンパイルされている場合、効果はありません。

@item @code{borderWidth} (class @code{BorderWidth})
フレームの外枠ボーダーの幅(ピクセル)です。EmacsがGTK+サポートつきでコンパイルされている場合、効果はありません。
@end ifnottex

@item @code{cursorColor} (class @code{Foreground})
テキストカーソルのカラーです。Emacs開始時にこのリソースが指定されている場合、Emacsはその値を@code{cursor}フェイス(@ref{Faces}を参照してください)のバックグラウンドカラーとしてセットします。

@item @code{cursorBlink} (class @code{CursorBlink})
開始時に、このリソースの値が@samp{off}、@samp{false}、@samp{0}の場合、EmacsはBlink
Cursorモードを無効にします(@ref{Cursor Display}を参照してください)。

@item @code{font} (class @code{Font})
@code{default}フェイスにたいするフォント名です(@ref{Fonts}を参照してください)。フォントセット名(@ref{Fontsets}を参照してください)を指定することもできます。

@item @code{fontBackend} (class @code{FontBackend})
フォントの描画に使用するバックエンドを、優先順にカンマ区切りで記述したリストです。たとえば値@samp{x,xft}は、EmacsにXコアフォントドライバー(X
core font driver)を使用してフォントを描画し、それに失敗したときはXftフォントドライバー(Xft font
driver)にフォールバックするよう指示します。このリソースは通常、セットしないでおくべきです。その場合、Emacsは利用可能なすべてのバックエンドの使用を試みます。

@item @code{foreground} (class @code{Foreground})
Default foreground color for text.

@item @code{geometry} (class @code{Geometry})
ウィンドウのサイズと位置です。値にはコマンドラインオプション@samp{-g}または@samp{--geometry}と同じ形式で、サイズと位置を指定します。

サイズはEmacsセッションのすべてのフレームに適用されますが、位置は初期フレーム(特定のフレームにたいするリソースの場合は、そのフレーム)だけに適用されます。


このリソースを、@samp{emacs*geometry}のように指定しないように気をつけてください。これはEmacsのメインのフレームと同じように、個別のメニューにも影響します。

@item @code{fullscreen} (class @code{Fullscreen})
望ましいフルスクリーンサイズを指定します。値は@code{fullboth}、@code{maximized}、@code{fullwidth}、@code{fullheight}のうちどれか1つを指定でき、これらはコマンドラインオプションの@samp{-fs}、@samp{-mm}、@samp{-fw}、@samp{-fh}に相当します(@ref{Window
Size X}を参照してください)。これは初期フレームだけに適用されることに注意してください。

@ifnottex
@item @code{iconName} (class @code{Title})
アイコンに表示する名前です。

@item @code{internalBorder} (class @code{BorderWidth})
フレームの内枠ボーダーの幅(ピクセル)です。
@end ifnottex

@item @code{lineSpacing} (class @code{LineSpacing})
@cindex line spacing
行間の追加のスペース(ピクセル)です。

@item @code{menuBar} (class @code{MenuBar})
@cindex menu bar
このリソースの値が@samp{off}、@samp{false}、@samp{0}の場合、Emacsは開始時にMenu
Barモードを無効にします(@ref{Menu Bars}を参照してください)。

@ifnottex
@item @code{minibuffer} (class @code{Minibuffer})
@samp{none}の場合、Emacsはこのフレームにミニバッファーを作成しません。かわりに別のミニバッファーフレームを使用します。

@item @code{paneFont} (class @code{Font})
@cindex font for menus
ツールキット版ではない、Emacsのメニューのタイトルのフォント名です。
@end ifnottex

@item @code{pointerColor} (class @code{Foreground})
マウスカーソルのカラーです。多くのグラフィカルなデスクトップ環境では、この方法でEmacsがマウスカーソルを変更するのを許さないので、効果はありません。

@ifnottex
@item @code{privateColormap} (class @code{PrivateColormap})
@samp{on}の場合、Emacsが使用するクラスPseudoColorの``default
visual''が使用されている場所で、プライベートなカラーマップを使用します。

@item @code{reverseVideo} (class @code{ReverseVideo})
@samp{on}の場合はデフォルトのフォア九ラウンドカラーとバックグラウンドカラーを切り替え、@samp{off}の場合は指定されたカラーを使用します。

@item @code{screenGamma} (class @code{ScreenGamma})
@cindex gamma correction
カラーのガンマ補正で、フレームパラメーターの@code{screen-gamma}と等価です。

@item @code{scrollBarWidth} (class @code{ScrollBarWidth})
@cindex scrollbar width
スクロールバーの幅(ピクセル)で、フレームパラメーターの@code{scroll-bar-width}と等価です。EmacsがGTK+サポートつきでコンパイルされている場合は、このリソースをセットしないでください。
@end ifnottex

@ifnottex
@item @code{selectionFont} (class @code{SelectionFont})
ツールキット版でないEmacsの、ポップアップメニューのフォント名です(ツールキット版の場合は@ref{Lucid
Resources}と@ref{Motif Resources}を参照してください)。

@item @code{selectionTimeout} (class @code{SelectionTimeout})
選択にたいする応答を待つ時間(ミリ秒)です。選択したオーナーが、この時間内に応答しない場合は諦めます。値0は必要なだけ待つことを意味します。

@item @code{synchronous} (class @code{Synchronous})
@cindex debugging X problems
@cindex synchronous X mode
@samp{on}の場合、Emacsを同期モード(synchronous mode)で実行します。同期モードはXに関する問題のデバッグに有用です。
@end ifnottex

@item @code{title} (class @code{Title})
初期Emacsフレームのタイトルバーに表示する名前です。

@item @code{toolBar} (class @code{ToolBar})
@cindex tool bar
このリソースの値が@samp{off}、@samp{false}、@samp{0}の場合、Emacsは開始時にTool
Barモードを無効にします(@ref{Tool Bars}を参照してください)。

@item @code{useXIM} (class @code{UseXIM})
@cindex XIM
@cindex X input methods
@cindex input methods, X
@samp{false}または@samp{off}の場合、X入力メソッド(XIM: X input
methods)の使用を無効にします。これはEmacsがXIMサポートつきでビルドされた場合だけ関係があります。Xのクライアント/サーバーのリンクが遅いときは、XIMをオフにするのが便利かもしれません。

@item @code{verticalScrollBars} (class @code{ScrollBars})
@samp{on}の場合はフレームはスクロールバーをもち、@samp{off}のときはスクロールバーをもちません。

@ifnottex
@item @code{visualClass} (class @code{VisualClass})
Xカラーディスプレーの@dfn{visual
class}です。指定する場合、値は@samp{TrueColor}、@samp{PseudoColor}、@samp{DirectColor}、@samp{StaticColor}、@samp{GrayScale}、@samp{StaticGray}で始まり、その後に@samp{-@var{depth}}が続きます。ここで@var{depth}は色平面の数です。
@end ifnottex
@end table

  特定のEmacsフェイスのカスタマイズに、Xリソースを使用することもできます(@ref{Faces}を参照してください)。たとえば@samp{@var{face}.attributeForeground}をセットするのは、フェイス@var{face}の@samp{foreground}属性をカスタマイズするのと等価です。しかし、わたしたちはXリソースを使用してフェイスのカスタマイズするかわりに、Emacs内でフェイスをカスタマイズする方法を推奨します。@ref{Face
Customization}を参照してください。

@ifnottex
@node Lucid Resources
@appendixsec Lucidのメニューとダイアログ
@cindex Menu X Resources (Lucid widgets)
@cindex Dialog X Resources (Lucid widgets)
@cindex Lucid Widget X Resources

  EmacsがLucidウィジェットを使用したXツールキットサポートつきでコンパイルされた場合、メニューバー、ポップアップメニュー、ダイアログボックスの外観をカスタマイズするために、Xリソースを使用できます。メニューバーにたいするリソースは、@samp{pane.menubar}クラスの中に集められています(例のごとくEmacs実行可能ファイル名または、すべてのEmacs呼び出しに対応する@samp{Emacs}の後に続けて記述します)。ポップアップメニューにたいするリソースは、@samp{menu*}クラスの中です。ダイアログボックスにたいするリソースは、@samp{dialog*}クラスの中です。

  たとえばメニューバーエントリーを@samp{Courier-12}フォントで表示するには、以下のように記述します:

@example
Emacs.pane.menubar.font: Courier-12
@end example

@noindent
Lucidウィジェットは、あなたのlocaleで他国語テキストを表示できます。これを有効にするには、@code{font}リソースのかわりに、@code{fontSet}リソースを指定します。@code{font}と@code{fontSet}の両方のリソースが指定された場合は、@code{fontSet}リソースが使用されます。

以下はメニューバー、ポップアップメニュー、ダイアログにたいするリソースのリストです:

@table @code
@item font
メニューアイテムのテキストにたいするフォントです。
@item fontSet
メニューアイテムのテキストにたいするフォントセットです。
@item foreground
フォアグラウンドカラーです。
@item background
バックグラウンドカラーです。
@item buttonForeground
選択されたアイテムのフォアグラウンドカラーです。
@ifnottex
@item horizontalSpacing
アイテム間の水平間隔(ピクセル)です。デフォルトは3です。
@item verticalSpacing
アイテム間の垂直間隔(ピクセル)です。デフォルトは2です。
@item arrowSpacing
(サブメニューを示す)矢印と、それに付随するテキストの間の水平間隔です。デフォルトは10です。
@item shadowThickness
3Dのボタン、矢印、その他グラフィカルな要素の陰線(shadow lines)の厚さです。デフォルトは1です。
@end ifnottex
@item margin
メニューバーの余白(文字数)です。デフォルトは1です。
@end table

@node Motif Resources
@appendixsec MotifメニューのXリソース
@cindex Menu X Resources (Motif widgets)
@cindex Motif Widget X Resources

  EmacsがMotifまたはLessTifのウィジェットを使用するXツールキットサポートつきでコンパイルされた場合、メニューバー、ポップアップメニュー、ダイアログボックスの外観をカスタマイズするために、Xリソースを使用できます。しかし、これらのリソースは、Lucidウィジェットとは組織方法が異なります。

  メニューバーにたいするリソース名は@samp{pane.menubar}クラスの中にあり、それらは以下の形式で指定しなければなりません:

@smallexample
Emacs.pane.menubar.@var{subwidget}.@var{resource}:  @var{value}
@end smallexample

@noindent
ポップアップメニューにたいするリソースは、@samp{pane.menubar}ではなく、@samp{menu*}クラスの中にあります。ダイアログボックスにたいするリソースは@samp{dialog}クラスの中です。どの場合でも、それぞれのメニュー文字列がサブウィジェットです。サブウィジェットの名前は、メニューアイテム文字列と同じです。たとえば、メニューバーの中の@samp{File}メニューは、@samp{emacs.pane.menubar.File}という名前のサブウィジェットです。

  通常は、メニューバー全体に同じリソースを指定したいでしょう。これを行なうには、特定のウィジェット名のかわりに@samp{*}を使用します。たとえば、サブメニューを含むすべてのメニューバーアイテムに、フォント@samp{8x16}を指定するには、以下のように記述します:

@smallexample
Emacs.pane.menubar.*.fontList:  8x16
@end smallexample

  サブメニューの中の各アイテムは、Xリソースにたいする独自の名前をもちます。たとえば@samp{File}サブメニューは、@samp{Save
(current buffer)}という名前のアイテムをもちます。サブメニューアイテムにたいするリソース指定は以下のようになります:

@smallexample
Emacs.pane.menubar.popup_*.@var{menu}.@var{item}.@var{resource}: @var{value}
@end smallexample

@noindent
たとえば、以下は@samp{Save (current buffer)}アイテムにフォントを指定する方法です:

@smallexample
Emacs.pane.menubar.popup_*.File.Save (current buffer).fontList: 8x16
@end smallexample

@noindent
@samp{Tools}の下の、@samp{Spell Checking}の下の@samp{Complete
Word}のような、第2レベルのアイテムには、以下のテンプレートが当てはまります:

@smallexample
Emacs.pane.menubar.popup_*.popup_*.@var{menu}.@var{resource}: @var{value}
@end smallexample

@noindent
たとえば、

@smallexample
Emacs.pane.menubar.popup_*.popup_*.Spell Checking.Complete Word: @var{value}
@end smallexample

@noindent
(これは長い1行で記述する必要があります。)

  サブメニューアイテムにメニューバー自体とは異なる外観を与えたい場合、最初にすべてにたいしてリソースを指定してから、そのサブメニューにたいする値をオーバーライドしなければなりません。以下は例です:

@smallexample
Emacs.pane.menubar.*.fontList:  8x16
Emacs.pane.menubar.popup_*.fontList: 8x16
@end smallexample

  LessTifのファイル選択ボックスにたいしてリソースを指定するには、以下のように@samp{fsb*}を使用します:

@example
Emacs.fsb*.fontList: 8x16
@end example

  以下はLessTifのメニューバーとポップアップメニューにたいするリソースのリストです:

@table @code
@item armColor
アームドボタン(armed button: 押されてまだ離されていないボタン)を表示するカラーです。
@item fontList
使用するフォントです。
@item marginBottom
@itemx marginHeight
@itemx marginLeft
@itemx marginRight
@itemx marginTop
@itemx marginWidth
アイテムの周囲に残すスペースの量を、ボーダーも含めて指定します。
@item borderWidth
メニューアイテムの各辺のボーダーの幅です。
@item shadowThickness
ボーダーの影の幅です。
@item bottomShadowColor
ボーダーの影の底辺と右辺のカラーです。
@item topShadowColor
ボーダーの影の上辺と左辺のカラーです。
@end table
@end ifnottex

@node GTK resources
@appendixsec GTKリソース
@cindex GTK+ resources
@cindex resource files for GTK
@cindex @file{~/.gtkrc-2.0} file
@cindex @file{~/.emacs.d/gtkrc} file

  EmacsがGTK+サポートつきでコンパイルされた場合、EmacsのGTK+ウィジェット(例:
メニュー、ダイアログ、ツールバー、スクロールバー)をカスタマイズする一番簡単な方法は、たとえばGNOME theme
selectorなどで適切なGTK+テーマを選択する方法です。

  GTK+バージョン2では、Emacsで使用されるGTK+ウィジェットの外観をカスタマイズするために、@dfn{GTK+リソース}も使用できます。これらのリソースは、ファイル@file{~/.emacs.d/gtkrc}(Emacs固有のGTK+リソース用)、またはファイル@file{~/.gtkrc-2.0}(一般的なGTK+リソース用)のどちらかで指定されます。GTK+は、GNOMEでGConfを実行するとき@file{~/.gtkrc-2.0}を無視するように思われるため、わたしたちは@file{~/.emacs.d/gtkrc}の使用を推奨します。しかし@file{~/.emacs.d/gtkrc}によるカスタマイズをオーバーライドするGTKテーマがあることに注意してください。これにたいして、わたしたちができることはありません。GTK+リソースは、EmacsのGTK+ウィジェットと関係のない側面、たとえばEmacsのメインウィンドウのフォントやカラーにたいしては影響しません。これらは通常のXリソースに管理されます(@ref{Resources}を参照してください)。

  以下のセクションでは、EmacsにたいしてGTK+リソースをカスタマイズする方法を説明します。GTK+リソースについての詳細は、@uref{http://developer.gnome.org/gtk2/stable/gtk2-Resource-Files.html}のGTK+
APIドキュメントを参照してください。

  GTK+バージョン3では、GTK+リソースは完全に異なるシステムに置き換えられました。GTK+ウィジェットの外観は、今やCSS-likeなスタイルのファイル、すなわちGTK+をインストールしたディレクトリーの@file{gtk-3.0/gtk.css}、およびローカルなスタイルセッティングにたいしては@file{~/.themes/@var{theme}/gtk-3.0/gtk.css}で決定されます(@var{theme}はカレントGTK+テーマの名前です)。したがってこのセクションのGTK+リソースの説明は、GTK+3に適合しません。GTK+3スタイリングシステムについての詳細は、@uref{http://developer.gnome.org/gtk3/3.0/GtkCssProvider.html}を参照してください。

@menu
* GTK Resource Basics::      GTK+リソースの基本的な使い方。
* GTK Widget Names::         GTK+ウィジェットの命名方法。
* GTK Names in Emacs::       Emacsが使用するGTK+ウィジェット。
* GTK styles::               GTK+ウィジェットの何がカスタマイズできるか。
@end menu

@node GTK Resource Basics
@appendixsubsec GTKリソースの基本

  GTK+2リソースファイル(通常は@file{~/.emacs.d/gtkrc})で、リソースをセットする一番簡単な方法は、単に変数に値を割り当てる方法です。たとえば以下の行を利ソースファイルに置くことにより、すべてのGTK+ウィジェットのフォントが@samp{courier-12}に変更されます:

@smallexample
gtk-font-name = "courier 12"
@end smallexample

@noindent
この場合、フォント名はFontconfigスタイルのフォント名やXLFDではなく、GTKフォントパターン(@dfn{Pangoフォント名}とも呼ばれます)で記述しなければなりません。@ref{Fonts}を参照してください。

  ウィジェットをカスタマイズするには、最初に@dfn{スタイル}を定義して、そのスタイルをウィジェットに適用します。以下はメニューにたいしてフォントをセットする例です(文字@samp{#}はコメントを示します):

@smallexample
# @r{Define the style @samp{my_style}.}
style "my_style"
@{
  font_name = "helvetica bold 14"
@}

# @r{Specify that widget type @samp{*emacs-menuitem*} uses @samp{my_style}.}
widget "*emacs-menuitem*" style "my_style"
@end smallexample

@noindent
この例のウィジェット名にはワイルドカードが含まれるので、このスタイルは@samp{*emacs-menuitem*}にマッチするすべてのウィジェットに適用されます。ウィジェットは、外側のウィジェットから内側のウィジェットへと、それが含まれる方法により、名前がつけられます。以下はEmacsメニューバーに@samp{my_style}を指定して適用する例です:

@smallexample
widget "Emacs.pane.menubar.*" style "my_style"
@end smallexample

  以下はスクロールバーを部分的に変更する方法を示す、より複雑な例です:

@smallexample
style "scroll"
@{
  fg[NORMAL] = "red"@ @ @ @ @ # @r{Arrow color.}
  bg[NORMAL] = "yellow"@ @ # @r{Thumb and background around arrow.}
  bg[ACTIVE] = "blue"@ @ @ @ # @r{Trough color.}
  bg[PRELIGHT] = "white"@ # @r{Thumb color when the mouse is over it.}
@}

widget "*verticalScrollBar*" style "scroll"
@end smallexample

@node GTK Widget Names
@appendixsubsec GTKウィジェット名
@cindex GTK widget names

  GTK+ウィジェットは@dfn{ウィジェット名(widget name)}と@dfn{ウィジェットクラス(widget
class)}により指定されます。ウィジェット名は特定のウィジェット(たとえば@samp{emacs-menuitem})を参照し、ウィジェットクラスは似通ったウィジェット(たとえば@samp{GtkMenuItem})のコレクションを参照します。ウィジェットは常にクラスをもちますが、名前をもつ必要はありません。

  @dfn{絶対名(absolute
names)}とは、一連のウィジェット名またはウィジェットクラスで、他のウィジェットに埋め込まれたウィジェットの階層に対応します。たとえば、@code{top}という名前の@code{GtkWindow}が、@code{box}という名前の@code{GtkVBox}を含み、それがさらに@code{menubar}という名前の@code{GtkMenuBar}を含む場合、メニューバーウィジェットの完全クラス名は@code{GtkWindow.GtkVBox.GtkMenuBar}で、完全ウィジェット名は@code{top.box.menubar}になります。

  GTK+リソースファイルには、ウィジェットの外観を指定する2種類のコマンドを含めることができます:

@table @code
@item widget
クラス名または単にクラスにもとづいてウィジェットのスタイルを指定します。

@item widget_class
クラス名にもとづいてウィジェットのスタイルを指定します。
@end table

@noindent
@code{widget}コマンドを使用する例は、前のセクションを参照してください。@code{widget_class}コマンドも同じように使用されます。ウィジェット名/ウィジェットクラスとスタイルはダブルクォートで囲わなければならないこと、そしてこれらのコマンドはGTK+リソースファイルのトップレベルに記述しなければならないことに注意してください。

  前に記したように、ウィジェット名とウィジェットクラスはシェルのワイルドカード構文で指定することができます。@samp{*}は0文字以上にマッチし、@samp{?}は1文字にマッチします。以下はすべてのウィジェットにスタイルを割り当てる例です:

@smallexample
widget "*" style "my_style"
@end smallexample

@node GTK Names in Emacs
@appendixsubsec EmacsでのGTKウィジェット名
@cindex GTK widget names
@cindex GTK widget classes

  Emacsフレームが使用するGTK+ウィジェットを以下にリストします:

@table @asis
@item @code{Emacs} (class @code{GtkWindow})
@table @asis
@item @code{pane} (class @code{GtkVBox})
@table @asis
@item @code{menubar} (class @code{GtkMenuBar})
@table @asis
@item [menu item widgets]
@end table
@item [unnamed widget] (class @code{GtkHandleBox})
@table @asis
@item @code{emacs-toolbar} (class @code{GtkToolbar})
@table @asis
@item [tool bar item widgets]
@end table
@end table
@item @code{emacs} (class @code{GtkFixed})
@table @asis
@item @code{verticalScrollBar} (class @code{GtkVScrollbar})
@end table
@end table
@end table
@end table

@noindent
Emacsウィンドウの内容は、@code{emacs}ウィジェットにより描画されます。複数のEmacsウィンドウがある場合でも、それぞれのスクロールバーウィジェットの名前は@code{verticalScrollBar}であることに注意してください。

  たとえば、以下はメニューバーのスタイルをセットする、2つの異なる方法の例です:

@smallexample
widget "Emacs.pane.menubar.*" style "my_style"
widget_class "GtkWindow.GtkVBox.GtkMenuBar.*" style "my_style"
@end smallexample

  GTK+ダイアログにたいしては、Emacsはクラス@code{GtkDialog}の、@code{emacs-dialog}という名前のウィジェットを使用します。ファイル選択にたいしては、Emacsはクラス@code{GtkFileSelection}の、@code{emacs-filedialog}という名前のウィジェットを使用します。

  ポップアップメニューとダイアログのウィジェットは独立したウィンドウであり、@code{Emacs}ウィジェットに``含まれ''ていないので、それらのGTK+完全名は@samp{Emacs}で始まりません。これらのウィジェットをカスタマイズするには、以下のようにワイルドカードを使用します:

@smallexample
widget "*emacs-dialog*" style "my_dialog_style"
widget "*emacs-filedialog* style "my_file_style"
widget "*emacs-menuitem* style "my_menu_style"
@end smallexample

  Emacsのすべてのメニューにスタイルを適用したい場合は、以下を使用します:

@smallexample
widget_class "*Menu*" style "my_menu_style"
@end smallexample

@node GTK styles
@appendixsubsec GTKスタイル
@cindex GTK styles

  以下は2つのGTK+スタイル宣言の例です:

@smallexample
pixmap_path "/usr/share/pixmaps:/usr/include/X11/pixmaps"

style "default"
@{
  font_name = "helvetica 12"

  bg[NORMAL] = @{ 0.83, 0.80, 0.73 @}
  bg[SELECTED] = @{ 0.0, 0.55, 0.55 @}
  bg[INSENSITIVE] = @{ 0.77, 0.77, 0.66 @}
  bg[ACTIVE] = @{ 0.0, 0.55, 0.55 @}
  bg[PRELIGHT] = @{ 0.0, 0.55, 0.55 @}

  fg[NORMAL] = "black"
  fg[SELECTED] = @{ 0.9, 0.9, 0.9 @}
  fg[ACTIVE] = "black"
  fg[PRELIGHT] = @{ 0.9, 0.9, 0.9 @}

  base[INSENSITIVE] = "#777766"
  text[INSENSITIVE] = @{ 0.60, 0.65, 0.57 @}

  bg_pixmap[NORMAL] = "background.xpm"
  bg_pixmap[INSENSITIVE] = "background.xpm"
  bg_pixmap[ACTIVE] = "background.xpm"
  bg_pixmap[PRELIGHT] = "<none>"

@}

style "ruler" = "default"
@{
  font_name = "helvetica 8"
@}

@end smallexample

  スタイル@samp{ruler}は@samp{default}を継承します。この方法により、既存のスタイルを元にすることができます。フォントとカラーの構文は以下に記述されています。

  この例が示すように、ウィジェットの@dfn{状態}にもとづいてフォアグラウンドとバックグラウンドのカラーに複数の値を指定することが可能です。以下の状態が利用できます:

@table @code
@item NORMAL
ウィジェットのフォルトの状態です。
@item ACTIVE
ウィジェットが何かを行なう準備ができた状態です。これはスクロールバーの溝(trough)にも適用できます。たとえば@code{bg[ACTIVE] =
"red"}はスクロールバーの溝を赤にセットします。ボタンが押されてまだ離されていない状態(``armed'')も、この状態です。
@item PRELIGHT
マウスポインターがその上にきたとき、ウィジェットが操作可能な状態です ---
たとえばマウスがスクロールバーのハンドルの上やメニューアイテムの上にきたときの状態です。押されていないボタンの上にマウスがくると、そのボタンはこの状態になります。
@item SELECTED
ユーザーにより選択されたデータにたいする状態です。それは選択されたテキストやリストの選択されたアイテムの場合もあります。この状態はEmacsでは使用されません。
@item INSENSITIVE
ウィジェットが可視だが通常の方法では操作できない状態 ---
たとえば押せないボタンや、無効なメニューアイテムなどです。無効なメニューアイテムを黄色で表示するには、@code{fg[INSENSITIVE] =
"yellow"}を使用します。
@end table

  以下をスタイル宣言に記述できます:

@table @code
@item bg[@var{state}] = @var{color}
ウィジェットのバックグラウンドカラーを指定します。編集可能なテキストは@code{bg}ではなく@code{base}を使用することに注意してください。

@item base[@var{state}] = @var{color}
編集可能なテキストのバックグラウンドカラーを指定します。Emacsでは、ファイルダイアログのテキストフィールドのバックグラウンドに、このカラーが使用されます。

@item bg_pixmap[@var{state}] = "@var{pixmap}"
(バックグラウンドカラーのかわりに)バックグラウンドイメージを指定します。@var{pixmap}はイメージファイル名です。GTKはXPM、XBM、GIF、JPEG、PNGヲ含む、いくつかのイメージファイルを使用することができます。親ウィジェットと同じイメージをウィジェットに使用したい場合は、@samp{<parent>}を使用します。イメージを使わない場合は、@samp{<none>}を使用します。@samp{<none>}で、親スタイルから継承されたバックグラウンドイメージをキャンセルできます。

ファイル名は絶対ファイル名で指定できません。GTKは@code{pixmap_path}で指定されたディレクトリーのpixmapファイルを探します。@code{pixmap_path}は、ダブルクォートされたファイルをコロンで区切ったリストで、@file{gtkrc}ファイルのトップレベルで指定します(スタイル定義の中ではありません。上記の例を参照してください)。

@smallexample
pixmap_path "/usr/share/pixmaps:/usr/include/X11/pixmaps"
@end smallexample

@item fg[@var{state}] = @var{color}
使用するウィジェットのフォアグラウンドカラーを指定します。これはメニューやボタンのテキストのカラー、スクロールバーの矢印のカラーです。編集可能なテキストにたいしては、@code{text}を使用します。

@item text[@var{state}] = @var{color}
編集可能なテキストのカラーです。Emacsでは、ファイルダイアログのテキストフィールドに使用されるカラーです。

@item font_name = "@var{font}"
ウィジェット内のテキストのフォントを指定します。@var{font}は、@samp{Sans Italic
10}のような、GTK(Pango)スタイルのフォント名です。@ref{Fonts}を参照してください。名前は大文字小文字を区別しません。
@end table

  カラーを指定する3つの方法があります。それはカラーネーム、RGBトリプレット、GTKスタイルRGBトリプレットです。カラーネームとRGBトリプレットについては、@ref{Colors}を参照してください。カラーネームは@samp{"red"}のように、ダブルクォートで囲む必要があります。RGBトリプレットは@samp{#ff0000}のように、ダブルクォートで囲う必要がありません。GTKスタイルRGBトリプレットは@w{@code{@{
@var{r}, @var{g}, @var{b}
@}}}という形式をもち、@var{r}、@var{g}、@var{b}は、0から65535の整数か、0.0から1.0の浮動小数点数です。
