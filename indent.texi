@c ===========================================================================
@c
@c This file was generated with po4a. Translate the source file.
@c
@c ===========================================================================
@c This is part of the Emacs manual.
@c Copyright (C) 1985-1987, 1993-1995, 1997, 2001-2015 Free Software
@c Foundation, Inc.
@c See file emacs.texi for copying conditions.
@node Indentation
@chapter インデント
@cindex indentation
@cindex tabs
@cindex columns (indentation)

@cindex whitespace character
  @dfn{インデント(Indentation)}とは、@dfn{空白文字}(スペースやタブ文字)を行のテキストの先頭に挿入したり調整することを指します。このチャプターでは、インデントコマンドと、Textモードやそれに関連するモード、同様にプログラミング言語のモードでの一般的なオプションを記します。プログラミング用のモードでのインデントに関する追加のドキュメントは、@ref{Program
Indent}を参照してください。

@findex indent-for-tab-command
@kindex TAB @r{(indentation)}
  インデントを行うもっとも簡単な方法は、@key{TAB}キーです。ほとんどのメジャーモードでは、これによりコマンド@code{indent-for-tab-command}が実行されます(Cおよびそれに関連するモードでは、@key{TAB}は同じように振る舞うコマンド@code{c-indent-line-or-region}を実行します)。

@table @key
@item TAB
空白文字を挿入、またはモードに適した方法でカレント行をインデントします(@code{indent-for-tab-command})。リージョンがアクティブのときは、リージョンのすべての行をインデントします。
@end table

  @key{TAB}の正確な動作は、メジャーモードに依存します。Textモードおよびそれに関連するモードでは、@key{TAB}は通常、空白とタブ文字を組み合わせたものを挿入して、ポイントを次のタブストップに進めます。このために、先行する行の最初の空白以外の文字の位置は、追加のタブストップとして扱われるので、@key{TAB}を使って先行する行にポイントを``揃える''ことができます。リージョンがアクティブ(@ref{Using
Region}を参照してください)な場合、@key{TAB}は特別な動作をします。これはリージョンの各行をインデントするので、各行の最初の空白以外の文字は、先行する行に揃えられます。

  プログラミング関連のモードでは、@key{TAB}はコードのカレント行にたいして、前の行のコードの意味を理解してインデントします。リージョンがアクティブな場合、リージョンのすべての行はこの方法でインデントされます。ポイントが最初にカレント行のインデント領域にあった場合、その行の最初の空白以外の文字に再配置されます。

  単にタブ文字をバッファーに挿入したいときは、@kbd{C-q @key{TAB}}とタイプします(@ref{Inserting
Text}を参照してください)。

@menu
* Indentation Commands::     インデントを処理するほかのコマンド。
* Tab Stops::                Textモードのインデントのストップポイント。
* Just Spaces::              インデントにスペース文字だけを使用する。
* Indent Convenience::       インデントのオプション機能。
@end menu

@node Indentation Commands
@section インデントコマンド

@key{TAB}
(@code{indent-for-tab-command})コマンドとは別に、Emacsは他の方法でインデントを処理する、さまざまなコマンドを提供します。

@table @kbd
@item C-M-o
@kindex C-M-o
@findex split-line
カレント行をポイント位置で分割します(@code{split-line})。その行のポイントの後にあるテキストは新しい行となり、ポイントがあった位置と同じ列にインデントされます。このコマンドは、最初にポイントを複数のスペースまたはタブを飛び越えて移動させます。その後、ポイントは挿入された行の前に配されます。

@kindex M-m
@findex back-to-indentation
@item M-m
カレント行の最初の空白以外の文字に移動(前方または後方)します(@code{back-to-indentation})。その行に空白文字しかない場合は、その行の行末に移動します。

@item M-i
@kindex M-i
@findex tab-to-tab-stop
ポイント位置の空白文字を次のタブストップまでインデントします(@code{tab-to-tab-stop})。@ref{Tab
Stops}を参照してください。

@findex indent-relative
@item M-x indent-relative
ポイントが前の行(実際には最後の空行以外の行)の、最初の空白以外の文字に揃うように、ポイント位置に空白文字を挿入します。ポイントがすでにその位置より右にある場合は、かわりに@code{tab-to-tab-stop}を実行します
--- ただし数引数を指定した場合は何もしません。

@item M-^
@kindex M-^
@findex delete-indentation
前の行とカレント行をマージします(@code{delete-indentation})。このコマンドはカレント行の前にある任意のインデントと、行の境界を1つのスペースで置き換えて、2つの行を明解に``結合''します。

特別なケースとして、結合された文字が連続する開きカッコまたは閉じカッコの場合、または他の改行が続く場合、1つのスペースは省略されます(Lispコードにたいして有用)。

fillプレフィクスが存在して、それが改行の後ろにあった場合、@kbd{M-^}はfillプレフィクスを削除します。@ref{Fill
Prefix}を参照してください。

@item C-M-\
@kindex C-M-\
@findex indent-region
リージョンのすべての行にたいして、各行の先頭で@key{TAB}をタイプしたかのようにインデントします(@code{indent-region})。

数引数が与えられた場合、その列番号までリージョンのすべての行をインデントします。

@item C-x @key{TAB}
@kindex C-x TAB
@findex indent-rigidly
@cindex remove indentation
このコマンドは、リージョン内で開始されるすべての行のインデントを変更するのに使用されます。インデントの変更は、影響を受ける行を``厳格な(rigid)''単位として移動することにより行われます。

引数を指定しないで呼び出されたとき、このコマンドは影響を受ける行のインデントを対話的に調整するために、transientモードをアクティブにします。transientモードがアクティブの間は、@key{LEFT}または@key{RIGHT}により、スペース1文字単位で左または右にインデントします。@kbd{S-@key{LEFT}}または@kbd{S-@key{RIGHT}}とタイプすることにより、タブストップ単位で左または右にインデントすることもできます。他のキーをタイプするとtransientモードは無効になり、通常の編集を再開します。

プレフィクス引数@var{n}を指定して呼び出すと、このコマンドは行を@var{n}個のスペースでインデントします(transientモードは有効になりません)。@var{n}に値を与えると後方にインデントするので、リージョン内の行のすべてのインデントを除去したいときは、以下のように充分に大きい負の引数を与えます。

@smallexample
C-u -999 C-x @key{TAB}
@end smallexample
@end table

@node Tab Stops
@section タブストップ
@cindex tab stops

@vindex tab-stop-list
  Emacsは、特定の列番号が@dfn{タブストップ}になるよう定義しています。これらはTextモードおよびそれに関連するモードで、@key{TAB}および@kbd{M-i}のようなコマンドにより、空白文字が挿入されるときのストップポイントとして使用されます。変数@code{tab-stop-list}は、これらの位置を制御します。デフォルト値は@code{nil}で、これはタブストップが8列ごとという意味です。値には、タブストップの列番号を、0基準の列番号のリスト(昇順)で指定することもできます。Emacsは最後の要素と、その1つ前の要素の差分を繰り返すことにより、リストを無限に拡張します。

@findex edit-tab-stops
@kindex C-c C-c @r{(Edit Tab Stops)}
  変数@code{tab-stop-list}を直接カスタマイズするかわりに、コマンド@kbd{M-x
edit-tab-stops}を通じて、タブストップを視認しながらセットする便利な方法があります。このコマンドは、以下のようなタブストップの説明を含んだバッファーに切り替えます。

@example
        :       :       :       :       :       :
0         1         2         3         4
0123456789012345678901234567890123456789012345678
To install changes, type C-c C-c
@end example

@noindent
最初の行は各タブストップ位置にコロンを示します。その後の2行はコロンが示す位置を表示します。@code{tab-stop-list}の値が@code{nil}(デフォルト)の場合、最初はコロンが表示されません。

  異なるタブストップを置きたい列に、コロンを配して指定するために、このバッファーを編集できます。このバッファーはOverwriteモードを使用します(@ref{Minor
Modes}を参照してください)。Emacsは、最後に明示した2つのストップの差分を繰り返すことにより、タブストップのリストを無限に拡張することを思い出してください。編集が終わったら、新しいタブストップを有効にするために、@kbd{C-c
C-c}とタイプします。通常、新しいタブストップのセッティングは、すべてのバッファーに適用されます。しかし@kbd{M-x
edit-tab-stops}を呼び出したバッファーにたいして、ローカルな変数@code{tab-stop-list}を作成していた場合(@ref{Locals}を参照してください)、新しいタブストップのセッティングは、そのバッファーだけに適用されます。将来のEmacsセッションのためにタブストップのセッティングを保存するには、Customizeインターフェースを使用して@code{tab-stop-list}の値を保存します(@ref{Easy
Customization}を参照してください)。

  このセクションで議論したタブストップは、バッファーでタブ文字が表示される方法には影響しないことに注意してください。タブ文字は常に次の@dfn{タブストップ表示(display
tab stop)}まで拡張される、空のスペースとして表示されます。@ref{Text Display}を参照してください。

@node Just Spaces
@section タブ vs. スペース

@vindex tab-width
  インデントコマンドは通常、スペース文字とタブ文字を最適にミックスした文字列を挿入(または削除)することにより、望む列に行を揃えます。タブ文字は次の@dfn{タブストップ表示(display
tab
stop)}まで伸長された、空のスペースとして表示されます。デフォルトでは、@code{tab-width}列ごと(デフォルトは8)に、1つのタブストップ表示があります。@ref{Text
Display}を参照してください。

@vindex indent-tabs-mode
  もし望むなら、すべてのインデントをスペースだけで行うこともできます。これを要求するには、バッファーローカルな変数@code{indent-tabs-mode}を@code{nil}にセットします。バッファーローカルな変数についての情報は、@ref{Locals}を参照してください。しかし@kbd{C-q
@key{TAB}}は、@code{indent-tabs-mode}の値とは無関係に、常にタブ文字を挿入することに注意してください。

  @code{indent-tabs-mode}を@code{nil}にセットする1つの理由は、すべてのエディターがタブ文字を同じ方法で表示するわけではないという理由です。Emacsユーザーも同様で、彼らはカスタマイズされた@code{tab-width}により、異なる値をもつかもしれません。スペースだけを使うことにより、ファイルが常に同じように見えることを保証できます。Emacsでどのように見えるかだけに関心がある場合、この問題に取り組む他の方法は、ファイルローカルな変数@code{tab-width}をセットする方法です(@ref{File
Variables}を参照してください)。

@findex tabify
@findex untabify
  空白以外の文字の列を常に保ちながら、スペースをタブに、またはその逆の変換を行うコマンドも存在します。@kbd{M-x
tabify}は、リージョンの連続するスペースをスキャンして、インデントを変更せずに、少なくとも2文字の連続するスペースをタブに変換します。@kbd{M-x
untabify}は、リージョンのすべてのタブを適正な数のスペースに変更します。

@node Indent Convenience
@section インデントの便利な機能

@vindex tab-always-indent
  変数@code{tab-always-indent}は、@key{TAB}
(@code{indent-for-tab-command})コマンドの動作を微調整します。デフォルト値は@code{t}で、これは@ref{Indentation}で説明した動作を与えます。値をシンボル@code{complete}に変更すると、@key{TAB}は最初にカレント行のインデントを試みます、すでにその行がインデントされている場合、このコマンドはポイント位置のテキストの補完を試みます(@ref{Symbol
Completion}を参照してください)。値が@code{nil}の場合、@key{TAB}はポイントが行の左端かインデント位置にあるときだけインデントを行い、それ以外はタブ文字を挿入します。

@cindex Electric Indent mode
@cindex mode, Electric Indent
@findex electric-indent-mode
  Electric
Indentモードはグローバルなマイナーモードで、これは@key{RET}をタイプしたあと自動的にインデントを行います。このモードはデフォルトで有効です。このマイナーモードを切り替えるには、@kbd{M-x
electric-indent-mode}とタイプします。1つのバッファーにたいしてモードを切り替えるには、@kbd{M-x
electric-indent-local-mode}を使用してください。
