\input texinfo  @c -*- coding: utf-8 -*-
@c ===========================================================================
@c
@c This file was generated with po4a. Translate the source file.
@c
@c ===========================================================================

@setfilename ../../info/emacs
@settitle GNU Emacs Manual(Japanese Translation)

@c The edition number appears in more than one place in this file
@c I don't really know what it means...
@c For example, it has said "Sixteenth" since sometime in the Emacs 22
@c series, all through 23, and into 24.  So it is not very useful IMO,
@c and offers nothing that EMACSVER does not.  I guess it relates
@c mainly to the published book sold by the FSF.  Hence no longer
@c bother including it except iftex.  Really, I think it should not be
@c here at all (since anyone can make a pdf version), but should just
@c be something added by the FSF during the publishing process.
@c Also, the lispref uses a float (3.0), whereas this uses an ordinal,
@c so the format is not even consistent.
@set EDITION   Seventeenth
@include emacsver.texi

@copying
@iftex
This is the @value{EDITION} edition of the @cite{GNU Emacs Manual},@*
@end iftex
@ifnottex
This is the @cite{GNU Emacs Manual},
@end ifnottex
updated for Emacs version @value{EMACSVER}.

@w{Copyright @copyright{} 2015--2016 Ayanokoji Takesi
<ayanokoji.takesi@@gmail.com>}@*Copyright @copyright{} 1985--1987,
1993--2015 Free Software Foundation, Inc.

@quotation
Permission is granted to copy, distribute and/or modify this document under
the terms of the GNU Free Documentation License, Version 1.3 or any later
version published by the Free Software Foundation; with the Invariant
Sections being ``The GNU Manifesto,'' ``Distribution'' and ``GNU GENERAL
PUBLIC LICENSE,'' with the Front-Cover Texts being ``A GNU Manual,'' and
with the Back-Cover Texts as in (a) below.  A copy of the license is
included in the section entitled ``GNU Free Documentation License.''

(a) The FSF's Back-Cover Text is: ``You have the freedom to copy and modify
this GNU manual.  Buying copies from the FSF supports it in developing GNU
and promoting software freedom.''
@end quotation
@end copying

@documentencoding UTF-8

@dircategory Emacs
@direntry
* Emacs: (emacs).            拡張可能なセルフドキュメント形式のテキストエディター。
@end direntry

@c in general, keep the following line commented out, unless doing a
@c copy of this manual that will be published.  The manual should go
@c onto the distribution in the full, 8.5 x 11" size.
@c @set smallbook

@ifset smallbook
@smallbook
@end ifset

@c per rms and peterb, use 10pt fonts for the main text, mostly to
@c save on paper cost.
@c Do this inside @tex for now, so current makeinfo does not complain.
@tex
@ifset smallbook
@fonttextsize 10
@end ifset
\global\hbadness=6666 % don't worry about not-too-underfull boxes
@end tex

@defcodeindex op
@synindex pg cp

@iftex
@kbdinputstyle code

@shorttitlepage GNU Emacs Manual(Japanese Translation)
@end iftex

@titlepage
@sp 6
@center @titlefont{GNU Emacs Manual(Japanese Translation)}
@sp 4
@center @value{EDITION} Edition, Updated for Emacs Version @value{EMACSVER}.
@sp 5
@center Richard Stallman et al.
@page
@vskip 0pt plus 1filll
@insertcopying

@sp 2
Published by the Free Software Foundation @* 51 Franklin Street, Fifth Floor
@* Boston, MA 02110-1301 USA @* ISBN 978-0-9831592-4-7

@sp 2
Cover art by Etienne Suvasa; cover design by Matt Lee.

@end titlepage


@summarycontents
@contents


@ifnottex
@node Top
@top The Emacs Editor

Emacsは、拡張可能で、カスタマイズ可能な、セルフドキュメント方式のリアルタイム画面エディターです。このinfoファイルでは、Emacsでの編集方法や
Emacsのカスタマイズ方法について説明します。GNU Emacs @value{EMACSVER}に対応します。

@c See `manual-html-mono' and `manual-html-node' in admin/admin.el.
@ifset WWW_GNU_ORG
@html The homepage for GNU Emacs is at <a
href="/software/emacs/">http://www.gnu.org/software/emacs/</a>.<br> To view
this manual in other formats, click <a
href="/software/emacs/manual/emacs.html">here</a>.<br> You can also purchase
a printed copy from the <a
href="http://shop.fsf.org/product/emacs-manual/">FSF store</a>.
@end html
@end ifset

@ifinfo
これをEmacsで読んでいる場合、Infoドキュメントシステムの基本的な手引きを読むには、@kbd{h}とタイプします。
@end ifinfo

Emacsの拡張に関しては、@ref{Top, Emacs Lisp,, elisp, The Emacs Lisp Reference
Manual}を参照してください。

@insertcopying
@end ifnottex

@c Note that the TeX version generates its own TOC, so the ifnottex's
@c here are not really necessary.
@menu
* Distrib::                  最新のEmacsディストリビューションを入手する方法。
* Intro::                    Emacsの概念についてのイントロダクション

重要な一般的概念
* Screen::                   スクリーンで目にするものの使い方。
* User Input::               さまざまな入力イベント（文字、ボタン、ファンクションキー）
* Keys::                     キーシーケンス: 
                               編集アクションをリクエストするための入力。
* Commands::                 編集を行うキーシーケンスにより実行される名前付きの関数。
* Entering Emacs::           シェルからのEmacsの起動。
* Exiting::                  Emacsの停止と終了。

基本的な編集コマンド
* Basic::                    もっとも基本的な編集コマンド。
* Minibuffer::               入力プロンプトにたいして引数を入力する。
* M-x::                      コマンドを名前で呼び出す。
* Help::                     コマンドについてEmacsに尋ねるコマンド。

テキストを変更する重要コマンド
* Mark::                     mark: 
                               どうやってテキストの"region"を区切るか。
* Killing::                  テキストのkill(切り取り)とyank(コピー)。
* Registers::                バッファーのテキストや位置の保存。
* Display::                  テキストの表示の制御。
* Search::                   文字列の検索と置換。
* Fixit::                    タイプミスを訂正するのに特に有用なコマンド。
* Keyboard Macros::          再生するためにキーストロークのシーケンスを記録する。

Emacsの主要な構造
* Files::                    ファイルの処理に関するすべて。
* Buffers::                  複数バッファー --- 
                               1度に複数のファイルを編集する。
* Windows::                  1つのフレームでの複数のテキスト片の閲覧。
* Frames::                   ディスプレーで複数のウィンドウを使用する。
* International::            非@acronym{ASCII}文字セットの使用。

上級の機能
* Modes::                    Emacsの基本動作を変更するメジャーモードとマイナーモード。
* Indentation::              行の先頭にある空白スペースの編集。
* Text::                     人間の言語のためのコマンドとモード。
* Programs::                 プログラム編集のためのコマンドとモード。
* Building::                 プログラムのコンパイル、実行、デバッグ。
* Maintaining::              大きなプログラムを保守するための機能。
* Abbrevs::                  タイプ量を減らすための略語の定義。
* Dired::                    ディレクトリー・ファイルマネージャー。
* Calendar/Diary::           カレンダーおよびダイアリー機能。
* Sending Mail::             Emacsでのメールの送信。
* Rmail::                    Emacsでのメールの閲覧。
* Gnus::                     柔軟なメール・ニュースリーダー。
* Document View::            PDF、PS、DVIファイルの閲覧。
* EWW::                      Emacsのウェブブラウザー。
* Shell::                    Emacsからのシェルコマンドの実行。
* Emacs Server::             Emacsを編集サーバーとして使用する。
* Printing::                 バッファーまたはリージョンのハードコピーの印刷。
* Sorting::                  Emacsでの行、パラグラフ、ページのソート。
@ifnottex
* Picture Mode:: テキスト文字で作られたピクチャーの編集。
@end ifnottex
* Editing Binary Files::     Hexlモードでのバイナリーファイルの編集。
* Saving Emacs Sessions::    あるセッションから次のセッションへ、Emacsの状態を保存する。
* Recursive Edit::           他のコマンドを実行中に編集を行なう。
* Hyperlinking::             バッファー内のリンクをフォローする。
* Amusements::               さまざまなゲームとhack。
* Packages::                 追加機能のインストール。
* Customization::            Emacsの動作を変更する。

問題からのリカバリー
* Quitting::                 中止(quit)と中断(abort)。
* Lossage::                  Emacsがハングしたり誤動作するとき何を行なうか。
* Bugs::                     バグを報告すべきとき、そしてその方法について。
* Contributing::             Emacsの改良に貢献する方法。
* Service::                  あなた独自のEmacsのニーズにたいして助けを得る方法。

Appendices
* Copying::                  GNU General Public 
                               Licenseは特定の条件に置いてGNU 
                               Emacsを再配布する許可をあなたに与えます。そして保証がないことも説明します。
* GNU Free Documentation License::  このドキュメントのライセンス。
* Emacs Invocation::         hairy(身の毛もよだつ、恐ろしい、困難な、難しい、危険な、やばい)な開始オプション。
* X Resources::              EmacsをカスタマイズするためのXリソース。
* Antinews::                 Emacsバージョン23についての情報。
* Mac OS / GNUstep::         Mac OSおよびGNUstepでのEmacsの使用。
* Microsoft Windows::        Microsoft 
                               WindowsおよびMS-DOSでのEmacsの使用。
* Manifesto::                What's GNU? Gnu's Not Unix! --- 
                               GNUとはなんだ? => Gnu's Not 
                               Unix!(GNUはUnixではない!)。

* Glossary::                 このマニュアルで使用されている用語。
@ifnottex
* Acknowledgments:: GNU Emacsの主要な貢献者。
@end ifnottex


インデックス(各インデックスは大きなメニューを含みます)
* Key Index::                標準的なEmacsキーシーケンス。
* Option Index::             コマンドラインオプション。
* Command Index::            コマンド名。
* Variable Index::           ドキュメントされた変数。
* Concept Index::            概念。

@c Do NOT modify the following 3 lines!  They must have this form to
@c be correctly identified by `texinfo-multiple-files-update'.  In
@c particular, the detailed menu header line MUST be identical to the
@c value of `texinfo-master-menu-header'.  See texnfo-upd.el.


@detailmenu
 --- 詳細なボード一覧 --- -------------------------------------------



以下は実際にはすでにリストされたノードのサブノードです。それらをここで記述するので、1ステップで移動できます:



スクリーンの構成



* Point::                    テキスト内で編集コマンドが作用する場所
* Echo Area::                スクリーンのいちばん下で、短いメッセージが表示されます
* Mode Line::                モードを説明するライン
* Menu Bar::                 メニューバーの使い方

基本的な編集コマンド。



* Inserting Text::           単純に入力してテキストを挿入する。
* Moving Point::             何か修正したい場所にカーソルを移動する。
* Erasing::                  テキストの削除とkill。
* Basic Undo::               テキストの最近の変更を取り消す。
* Basic Files::              ファイルの読み込み、作成、保存。
* Basic Help::               文字が何を行うか尋ねる。
* Blank Lines::              空行の作成と削除
* Continuation Lines::       Emacsがスクリーンに収まりきれない行を表示する方法。
* Position Info::            ポイントのある場所の行と列は何か?
* Arguments::                コマンドをN回繰り返すための数引数。
* Repeating::                素早く前のコマンドを繰り返す。

ミニバッファー



* Basic Minibuffer::         ミニバッファーの基本的な使い方。
* Minibuffer File::          ミニバッファーでファイル名を入力する。
* Minibuffer Edit::          ミニバッファーで編集する方法。
* Completion::               ミニバッファーでの入力のための略記機能。
* Minibuffer History::       最近のミニバッファー引数の再使用。
* Repetition::               ミニバッファーを使ったコマンドの再実行。
* Passwords::                エコーエリアでパスワードを入力する。
* Yes or No Prompts::        エコーエリアでyes/noにこたえる。

Completion



* Completion Example::       補完の使い方の例。
* Completion Commands::      補完コマンドの一覧。
* Completion Exit::          補完とミニバッファーでのテキストのsubmit。
* Completion Styles::        補完の一致が選ばれる方法。
* Completion Options::       補完のオプション。

Help



* Help Summary::             すべてのヘルプコマンドの要約リスト。
* Key Help::                 Emacsでキーが何を行うか尋ねる。
* Name Help::                コマンド、変数、関数名を尋ねる。
* Apropos::                  与えられたトピックに関係があるものを尋ねる。
* Help Mode::                へルポモードとヘルプバッファーの特別な機能。
* Package Keywords::         キーワード(トピック)でLispライブラリーを探す。
* Language Help::            国際的な言語サポートに関するヘルプ。
* Misc Help::                その他のヘルプコマンド。
* Help Files::               追加のヘルプファイルを表示するコマンド。
* Help Echo::                アクティブなテキストのヘルプとツールチップ("バルーンヘルプ")。

マークとリージョン



* Setting Mark::             マークをセットするコマンド。
* Marking Objects::          テキスト的な単位の周辺にリージョンをセットするコマンド。
* Using Region::             リージョンの内容を操作する方法の要約。
* Mark Ring::                後で戻れるように保存された以前のマーク位置。
* Global Mark Ring::         さまざまなバッファーの以前のマーク位置。
* Shift Selection::          シフトを押してカーソル移動キーを使う。
* Disabled Transient Mark::  デフォルトでリージョンをハイライトせずにおく。

テキストのkillと移動



* Deletion and Killing::     テキストを除去するコマンド。
* Yanking::                  テキストを挿入するコマンド。
* Cut and Paste::            グラフィカルなディスプレーにおけるクリップボードと選択。
* Accumulating Text::        バッファーにテキストを追加する他の手法。
* Rectangles::               矩形領域のテキストの操作。
* CUA Bindings::             killとyankで@kbd{C-x}/@kbd{C-c}/@kbd{C-v}を使う。

Deletion and Killing



* Deletion::                 少量のテキストや空の領域を削除するコマンド。
* Killing by Lines::         テキスト行を一度にkillする方法。
* Other Kill Commands::      大きなリージョンや単語やセンテンスのような構文単位をkillするコマンド。
* Kill Options::             killに影響のあるオプション。

Yanking



* Kill Ring::                killされたテキストが格納される場所。
* Earlier Kills::            もっと前にkillしたものをyankする。
* Appending Kills::          数回のkillを一緒にまとめてyankする。

グラフィカルなディスプレーでのカットアンドペースト操作



* Clipboard::                Emacsがシステムクリップボードを使う方法。
* Primary Selection::        一時的に選択されたテキストの選択。
* Secondary Selection::      ポイントとマークを変化させずに切り取る。

Registers



* Position Registers::       位置をレジスターに保存する。
* Text Registers::           テキストをレジスターに保存する。
* Rectangle Registers::      矩形領域をレジスターに保存する。
* Configuration Registers::  ウィンドウの設定をレジスターに保存する。
* Number Registers::         レジスターの中の数字。
* File Registers::           レジスターの中のファイル名。
* Keyboard Macro Registers::  レジスターの中のキーボードマクロ。
* Bookmarks::                ブックマーク、レジスターと似ているが永続性がある。

ディスプレーの制御



* Scrolling::                ウィンドウのテキストを上下に移動させるコマンド。
* Recentering::              現在行を中央するスクロールコマンド。
* Auto Scrolling::           必要なときテキストをスクロールして再表示する。
* Horizontal Scrolling::     ウィンドウの左右にテキストを移動させる。
* Narrowing::                表示を制限してバッファーの一部を編集する。
* View Mode::                読み取り専用バッファーの表示。
* Follow Mode::              Follow 
                               modeで2つのウィンドウを1つとしてスクロールさせる。
* Faces::                    フェイスを使って表示スタイルを変更する方法。
* Colors::                   フェイスのカラーを指定する。
* Standard Faces::           主要な既定のフェイス。
* Text Scale::               バッファーのテキストサイズの拡大と縮小。
* Font Lock::                フェイスを使って文法をハイライトするマイナーモード。
* Highlight Interactively::  Emacsにハイライトするテキストを指示する。
* Fringes::                  ウィンドウフリンジの有効と無効。
* Displaying Boundaries::    バッファーの先頭と最後を表示する。
* Useless Whitespace::       不要な行末の空白文字の表示。
* Selective Display::        大きなインデントの行を隠す。
* Optional Mode Line::       モードラインの表示機能のオプション。
* Text Display::             テキスト文字が通常表示される方法。
* Cursor Display::           カーソル表示の機能。
* Line Truncation::          複数のスクリーン行で継続表示させずにスクリーン幅に行を切り詰める。
* Visual Line Mode::         単語の折り返しとスクリーン行にもとづく編集。
* Display Custom::           ディスプレーをカスタマイズする変数の情報。

検索と置換



* Incremental Search::       文字列をタイプすることにより始まる検索。
* Nonincremental Search::    文字列全体を指定してから検索する。
* Word Search::              単語の並びを検索する。
* Symbol Search::            ソースコードのシンボルを検索する。
* Regexp Search::            正規表現にマッチする検索。
* Regexps::                  正規表現の文法。
* Regexp Backslash::         `\'で開始される正規表現の構築。
* Regexp Example::           複雑な正規表現の解説。
* Search Case::              検索で大文字小文字を無視または区別するには。
* Replace::                  一部またはすべてのマッチを検索または置換する。
* Other Repeating Search::   いくつかの正規表現にマッチするすべてを処理する。

Incremental Search



* Basic Isearch::            基本的なインクリメンタル検索コマンド。
* Repeat Isearch::           同じ文字列を再度検索する。
* Error in Isearch::         文字列が見つからなかったとき。
* Special Isearch::          インクリメンタル検索での特別な入力。
* Isearch Yank::             検索文字列にテキストを取り込んだり、検索文字列を編集するコマンド。
* Not Exiting Isearch::      プレフィクス引数とスクロールコマンド。
* Isearch Minibuffer::       ミニバッファー履歴のインクリメンタル検索。

置換コマンド



* Unconditional Replace::    マッチする文字列をすべて置換する。
* Regexp Replace::           regexpにマッチするすべてを置換する。
* Replacement and Case::     置換が大文字小文字を保持する方法。
* Query Replace::            問い合わせを使う方法。

タイプミス訂正のためのコマンド



* Undo::                     Undoコマンド。
* Transpose::                2つの文字、単語、行、リスト、...の交換。
* Fixing Case::              最後に入力した文字の大文字小文字を訂正する。
* Spelling::                 単語またはファイル全体へのスペルチェッカーの適用。

Keyboard Macros



* Basic Keyboard Macro::     キーボードマクロの定義と実行。
* Keyboard Macro Ring::      以前のキーボードマクロが保存される場所。
* Keyboard Macro Counter::   マクロに増加する番号を挿入する。
* Keyboard Macro Query::     毎回違うことを行うマクロの作成。
* Save Keyboard Macro::      キーボードマクロの命名とファイルへの保存。
* Edit Keyboard Macro::      キーボードマクロを編集するには。
* Keyboard Macro Step-Edit::  キーボードマクロの対話的な実行と編集。

ファイル処理



* File Names::               ファイル名引数をタイプ、編集する方法。
* Visiting::                 ファイルをvisitしてEmacsが編集する準備をする。
* Saving::                   保存して変更を永続化する。
* Reverting::                保存されていないすべての変更を取り消して前の状態に戻す。
@ifnottex
* Autorevert:: 非ファイルバッファーの自動リバートについて。
@end ifnottex
* Auto Save::                定期的な自動保存によりデータを失うことから守る。
* File Aliases::             1つのファイルにたいする複数の名前を処理する。
* Directories::              ファイルディレクトリーの削除、作成、一覧。
* Comparing Files::          2つのファイルの異なる部分を探す。
* Diff Mode::                ファイルの異なる部分を編集するモード。
* Misc File Ops::            ファイルにたいして行うその他のコマンド。
* Compressed Files::         圧縮されたファイルへのアクセス。
* File Archives::            tar、zip、jar、...などのアーカイブファイルにたいする操作。
* Remote Files::             他のマシンにあるファイルへのアクセス。
* Quoted File Names::        ファイル名に含まれる特別な文字のクォート。
* File Name Cache::          補完のための、ときどき使うファイルの一覧。
* File Conveniences::        ファイルを探すための便利な機能。
* Filesets::                 複数ファイルの処理。

Saving Files



* Save Commands::            ファイルを保存するコマンドについて。
* Backup::                   Emacsがファイルの古いバージョンを保存する方法。
* Customize Save::           ファイルの保存のカスタマイズ。
* Interlocking::             Emacsが2人のユーザーによる1つのファイルへの同時編集から保護する方法。
* File Shadowing::           ファイルを自動的に"shadows"コピーする。
* Time Stamps::              Emacsによる保存されたファイルのタイムスタンプの更新。

バックアップファイル



* Backup Names::             バックアップファイルの命名方法。
* Backup Deletion::          Emacsによる余分な番号つきバックアップの削除。
* Backup Copying::           コピーとリネームによるバックアップの作成。

@ifnottex
非ファイルバッファーの自動リバート

* Auto Reverting the Buffer Menu:: バッファーメニューの自動リバート。
@end ifnottex


自動保存 --- 災害にたいする保護



* Auto Save Files::          ファイルを保存するまでの間、自動保存された変更が実際に保存されるファイル。
* Auto Save Control::        自動保存をいつ、どのような間隔で行うかの制御。
* Recover::                  auto-saveファイルからのテキストの復旧。

複数バッファーの使用



* Select Buffer::            新しいバッファーの作成と既存のバッファーの再選択。
* List Buffers::             既存のバッファーリストの取得。
* Misc Buffer::              リネーム、読み取り専用属性の変更、テキストのコピー。
* Kill Buffer::              不必要なバッファーのkill。
* Several Buffers::          すべてのバッファーリストの操作と、それらへのさまざまな操作。
* Indirect Buffers::         他のバッファーのテキストを共有するインダイレクトバッファー。
* Buffer Convenience::       バッファー操作のための便利な機能とカスタマイズ。

バッファー処理の便利な機能とカスタマイズ



* Uniquify::                 ディレクトリー部分でバッファー名を一意にする。
* Icomplete::                素早いミニバッファーの選択について。
* Buffer Menus::             バッファーメニューの設定。

複数ウィンドウ



* Basic Window::             Emacsウィンドウの紹介。
* Split Window::             既存のウィンドウを分割して新しいウィンドウを作る。
* Other Window::             他のウィンドウへの移動と操作。
* Pop Up Window::            他のウィンドウのファイルまたはバッファーの検索。
* Change Window::            ウィンドウの削除とサイズ変更。
* Displaying Buffers::       Emacsがバッファーを表示するためにウィンドウを選択する方法。
* Window Convenience::       ウィンドウ処理の便利な機能。

ウィンドウでのバッファーの表示



* Window Choice::            @code{display-buffer}が機能する方法

フレームとグラフィカルなディスプレー



* Mouse Commands::           マウスによる移動、切り取り、貼り付け。
* Word and Line Mouse::      単語または凝然体を選択するマウスコマンド。
* Mouse References::         リストからアイテムを選択するのにマウスを使う。
* Menu Mouse Clicks::        メニューを表示させるマウスクリック。
* Mode Line Mouse::          モードライン上でのマウスクリック。
* Creating Frames::          さまざまな内容とともに追加のEmacsフレームを作成する。
* Frame Commands::           フレームのアイコン化とフレームの切り替え。
* Fonts::                    フレームフォントの変更。
* Speedbar::                 スピードバーフレームの作り方と使い方。
* Multiple Displays::        1つのEmacsインスタンスが複数ディスプレーと通信する方法。
* Frame Parameters::         フレームの色や他のモードの変更。
* Scroll Bars::              スクロールバーの有効と無効、および使い方。
* Drag and Drop::            ファイルを開いたりテキストを挿入するのにドラッグアンドドロップを使う。
* Menu Bars::                メニューバーの有効と無効。
* Tool Bars::                ツールバーの有効と無効。
* Dialog Boxes::             ダイアログボックス使用の制御。
* Tooltips::                 マウスの現在位置の情報の表示。
* Mouse Avoidance::          マウスポインターがテキストを隠すのを防ぐ。
* Non-Window Terminals::     フレームを1つだけ表示する端末での複数フレーム。
* Text-Only Mouse::          テキスト端末でのマウスの使用について。

国際化文字セットのサポート



* International Chars::      マルチバイト文字の基本的な概念。
* Language Environments::    使用する言語のためのセットアップ事項。
* Input Methods::            キーボード似ないテキスト文字の入力。
* Select Input Method::      インプットメソッドの選択を指定する。
* Coding Systems::           ファイルを読み書きしたりするときの文字セット変換。
* Recognize Coding::         どの変換が使われたのかEmacsが解決する方法。
* Specify Coding::           ファイルのコーディングシステムの明示的な指定。
* Output Coding::            出力のためのコーディングシステムの選択について。
* Text Coding::              ファイルのテキストに使う変換の選択。
* Communication Coding::     プロセス間通信のためのコーディングシステム。
* File Name Coding::         @emph{ファイル名}のコーディングシステム。
* Terminal Coding::          端末の入出力の変換のためのコーディングシステムの指定。
* Fontsets::                 フォントセット、それは文字の全範囲をカバーするフォントのコレクション。
* Defining Fontsets::        新しいフォントセットの定義。
* Modifying Fontsets::       既存のフォントセットの修正。
* Undisplayable Characters::文字が表示されないとき。
* Unibyte Mode::             マルチバイト文字を使わずに1つの英文字セットを選択する。
* Charsets::                 Emacsが内部の文字コードをグループ化する方法。
* Bidirectional Editing::    右から左に記述する言語のサポート。

メジャーモードとマイナーモード



* Major Modes::              Textモード vs. Lispモード 
                               vs. Cモード...
* Minor Modes::              マイナーモードは他と独立して有効にできる機能です。
* Choosing Modes::           ファイルをvisitしたときにモードが選択される方法。

Indentation



* Indentation Commands::     インデントを処理するほかのコマンド。
* Tab Stops::                Textモードのインデントのストップポイント。
* Just Spaces::              インデントにスペース文字だけを使用する。
* Indent Convenience::       インデントのオプション機能。

人間の言語にたいするコマンド



* Words::                    単語単位の移動とkill。
* Sentences::                センテンス単位の移動とkill。
* Paragraphs::               パラグラフ単位の移動。
* Pages::                    ページ単位の移動。
* Filling::                  テキストのフィルと調整。
* Case::                     テキストの大文字小文字の変更。
* Text Mode::                テキストファイルを編集するためのメジャーモード。
* Outline Mode::             アウトラインの編集。
* Org Mode::                 Emacsオーガナイザー。
* TeX Mode::                 TeXおよびLaTeXファイルの編集。
* HTML Mode::                HTMLおよびSGMLファイルの編集。
* Nroff Mode::               nroffフォーマッターへの入力の編集。
* Enriched Text::            フォント、色などでenrichedテキストを編集する。
* Text Based Tables::        テキストベースのテーブルを編集するためのコマンド。
* Two-Column::               テキスト列を分割して別のウィンドウに表示する。

テキストのフィル



* Auto Fill::                Auto 
                               Fillモードは長い行を自動的に分割します。
* Fill Commands::            パラグラフの再フィルと行の中央揃えコマンド。
* Fill Prefix::              インデントされていたり、コメントであるパラグラフのフィル。
* Adaptive Fill::            Emacsがフィルプレフィクスを自動的に決定する方法。

Outline Mode



* Outline Format::           アウトラインのテキストがどのように見えるか。
* Outline Motion::           アウトラインを移動するための特別なコマンド。
* Outline Visibility::       なにを表示するか制御するコマンド。
* Outline Views::            アウトラインと複数ビュー。
* Foldout::                  アウトラインをズームする折り畳み。

Org Mode



* Org Organizer::            TODOリストとアジェンダの管理。
* Org Authoring::            Orgバッファーをさまざまなフォーマットでエクスポートする。

@TeX{}モード



* TeX Editing::              TeXモードで編集するための特別なコマンド。
* LaTeX Editing::            LaTeX入力ファイルのための追加のコマンド。
* TeX Print::                ファイルの一部をTeXで印刷するコマンド。
* TeX Misc::                 TeXモードのカスタマイズと関連する機能。

Enriched Text



* Enriched Mode::            Enrichedモードの開始と終了。
* Hard and Soft Newlines::   改行には2つの種類があります。
* Editing Format Info::      テキストプロパティーの編集方法。
* Enriched Faces::           太字、斜体、下線、など。
* Enriched Indentation::     左余白と右余白の変更。
* Enriched Justification::   テキストの中央揃え、左揃え、右揃え、など。
* Enriched Properties::      特別なテキストプロパティーサブメニュー。

@c The automatic texinfo menu update inserts some duplicate items here
@c (faces, colors, indentation, justification, properties), because
@c they are listed in two menus.  But we already have them above, no
@c need to list them twice.


テキストベースの表の編集



* Table Definition::         テキストベースのテーブルとは何か。
* Table Creation::           テーブルを作成する方法。
* Table Recognition::        テーブルをアクティブまたは非アクティブにする方法。
* Cell Commands::            テーブルのセル指向のコマンド。
* Cell Justification::       セル内容の位置調整。
* Table Rows and Columns::   行と列の追加と削除。
* Table Conversion::         プレーンテキストとテーブルの変換について。
* Table Misc::               テーブル、その他について。

プログラムの編集



* Program Modes::            プログラムを編集するためのメジャーモード。
* Defuns::                   プログラムの主要なトップレベル要素を操作するためのコマンド。
* Program Indent::           ネスティングを示すためのインデントの調整。
* Parentheses::              カッコを操作するコマンド。
* Comments::                 コメントの挿入、kill、位置揃え。
* Documentation::            関数ドキュメントの取得。
* Hideshow::                 ブロックの選択的な表示。
* Symbol Completion::        プログラムまたは言語でのシンボルの補完。
* MixedCase Words::          identifiersLikeThisのような識別子の処理。
* Semantic::                 ソースコードのパースにもとづいた編集ツール。
* Misc for Programs::        その他、プログラムを編集するための便利なEmacs機能。
* C Modes::                  C、C++、Objective-C、Java、IDL、Pike、AWKモードの特別なコマンド。
* Asm Mode::                 Asmモードと特別な機能。
@ifnottex
* Fortran:: Fortranモードと特別な機能。
@end ifnottex


トップレベルの定義とdefun



* Left Margin Paren::        開きカッコまたは同様の開始を意味する区切りは、それが左端にある場合はdefunの開始です。
* Moving by Defuns::         主要な定義を移動したりマークするコマンド。
* Imenu::                    バッファーのインデックスをメニューにする。
* Which Function::           Which 
                               Functionモードはどの関数にいるか表示します。

プログラムのインデント



* Basic Indent::             1行のインデント。
* Multi-line Indent::        複数行を一度に再インデントするコマンド。
* Lisp Indent::              Lisp関数がどのようにインデントされるべきか指定する。
* C Indent::                 Cおよび関連するモードのインデントのための追加機能。
* Custom C Indent::          Cおよび関連するモードのインデントスタイルの制御。

カッコの編集にたいするコマンド



* Expressions::              対応が取れたカッコの式。
* Moving by Parens::         カッコ構造を上、下、横断して移動するコマンド。
* Matching::                 終了区切りの挿入による、マッチする開始区切りのフラッシュ表示。

コメントの操作



* Comment Commands::         コメントの挿入、kill、位置揃え。
* Multi-Line Comments::      複数行のコメントを追加・編集するコマンド。
* Options for Comments::コメント機能のカスタマイズ。



ドキュメントのルックアップ



* Info Lookup::              Infoファイルからライブラリー関数やコマンドを探す。
* Man Page::                 manからライブラリー関数やコマンドを探す。
* Lisp Doc::                 Emacs関数を探す、その他。

Cモードと関連するモード



* Motion in C::              Cステートメント単位での移動など。
* Electric C::               コロンおよび他の文字による自動的な再インデント。
* Hungry Delete::            より強力なDELコマンド。
* Other C Commands::         コメントのフィル、マクロ展開の閲覧、その他のクールな機能。

@ifnottex
Fortranモード

* Fortran Motion:: 命令文またはサブプログラムごとにポイントを移動する。
* Fortran Indent:: Fortranのためのインデントコマンド。
* Fortran Comments:: コメントの挿入と位置揃え。
* Fortran Autofill:: FortranをサポートするAuto Fill。
* Fortran Columns:: 有効なFortranのための列の計算。
* Fortran Abbrev:: Fortranキーワードのためのビルトインのabbrevs。

Fortranのインデント

* ForIndent Commands:: Fortranをインデントおよびフィルするコマンド。
* ForIndent Cont:: 継続行がインデントされる方法。
* ForIndent Num:: 行番号が自動インデントされる方法。
* ForIndent Conv:: トラブル防止のためにしたがわなければならない慣習。
* ForIndent Vars:: Fortranのインデントスタイルを制御する変数。
@end ifnottex


プログラムのコンパイルとテスト



* Compilation::              Lisp以外の言語(C、Pascal、など)のプログラムのコンパイル。
* Compilation Mode::         コンパイラーエラーをvisitするモード。
* Compilation Shell::        compilationバッファーで使えるようにシェルを適切にカスタマイズする。
* Grep Searching::           grepでの検索。
* Flymake::                  オンザフライでの構文エラーの検索。
* Debuggers::                非Lispプログラムのためのシンボルデバッガーの実行。
* Executing Lisp::           Lispプログラムを編集するためのさまざまなモードと、Lispプログラムを実行する異なる機能。
* Lisp Libraries::           LispプログラムがEmacsにロードされる方法。
* Lisp Eval::                Emacsでの1つのLisp式の実行。
* Lisp Interaction::         EmacsバッファーでのLispの実行。
* External Lisp::            Emacsを通じた別のLispとの対話。

Emacsの下でデバッガーを実行する



* Starting GUD::             デバッガーサブプロセスを開始する方法。
* Debugger Operation::       デバッガーとソースバッファーの関係。
* Commands of GUD::          一般的なコマンドのキーバインディング。
* GUD Customization::        GUDにたいして独自のコマンドを定義する。
* GDB Graphical Interface::  GDB機能を使用してグラフィカルなデバッグ環境を実装する拡張モード。

GDB Graphical Interface



* GDB User Interface Layout::  複数表示されたバッファーの制御。
* Source Buffers::           プログラムを制御するためにフリンジ・余白でマウスを使う。
* Breakpoints Buffer::       ブレークポイントのコントロールパネル。
* Threads Buffer::           スレッドの表示。
* Stack Buffer::             callスタックからのフレームの選択。
* Other GDB Buffers::        GDBの状態を制御するその他のバッファー。
* Watch Expressions::        speedbarで変数の値をモニターする。
* Multithreaded Debugging::  複数スレッドのプログラムのデバッグ。

大きなプログラムの保守



* Version Control::          バージョンコントロールシステムの使用。
* Change Log::               プログラムの変更履歴をメンテナンスする。
* Tags::                     1つのコマンドでプログラムの任意の関数に直接移動する。Tagsはそれがどのファイルにあるか記憶する。
* EDE::                      Emacsのための統合開発環境。
@ifnottex
* Emerge:: 2つのバージョンのプログラムをマージする便利な方法。
@end ifnottex


Version Control



* Introduction to VC::       一般的にバージョンコントロールが機能する方法。
* VC Mode Line::             モードラインがバージョンコントロールの状態を表示する方法。
* Basic VC Editing::         バージョンコントロール下のファイルの編集方法。
* Log Buffer::               logエントリーバッファーで利用可能な機能。
* Registering::              バージョンコントロール下にファイルを置く。
* Old Revisions::            古いバージョンの調査と比較。
* VC Change Log::            VC Change Logの閲覧。
* VC Undo::                  コミット前後の変更の取り消し。
* VC Ignore::                バージョンコントロール下のファイルの無視。
* VC Directory Mode::        バージョンコントロールで管理されたファイルの一覧。
* Branches::                 開発における複数行。
@ifnottex
* Miscellaneous VC:: その他のVCのさまざまなコマンドと機能。
* Customizing VC:: VCの動作を変更する変数。
@end ifnottex


バージョンコントロールの紹介



* Why Version Control?::     問題が示すところを理解するには。
* Version Control Systems::  バックエンドシステムとしてサポートされるバージョンコントロール。
* VCS Concepts::             バージョンコントロールに関連する単語と概念。
* VCS Merging::              ファイルの衝突を処理する方法。
* VCS Changesets::           変更がグループ化される方法。
* VCS Repositories::         バージョンコントロールのリポジトリーが格納される場所。
* Types of Log File::        VCS logとChangeLogの違い。

バージョンコントロール下での基本的な編集



* VC With A Merging VCS::    ロックしない: 
                               CVSのデフォルトモード。
* VC With A Locking VCS::    RCSのデフォルトモード、SCCS、オプションでCVS。
* Advanced C-x v v::         プレフィクス引数で利用可能な上級機能。

VC Directory Mode



* VC Directory Buffer::      バッファーの外観と意味。
* VC Directory Commands::    VC 
                               directoryバッファーで使用するコマンド。

ブランチのバージョンコントロール



* Switching Branches::       既存のブランチを取得する方法。
* VC Pull::                  ブランチの内容の更新。
* Merging::                  ブランチ間での変更の転送。
* Creating Branches::        新しいブランチを開始する方法。

@ifnottex
VCのその他の機能とコマンド

* Change Logs and VC:: logエントリーからChangeLogファイルを生成する。
* VC Delete/Rename:: バージョンコントロールされたファイルの削除とリネームとは
* Revision Tags:: リビジョンにたいするシンボリック名。
* Version Headers:: 作業ファイルへのバージョンコントロールヘッダーの挿入。

VCのカスタマイズ

* General VC Options:: 複数のバックエンドに適用されるオプション。
* RCS and SCCS:: RCSとSCCSのためのオプションについて。
* CVS Options:: CVSにたいするオプションについて。
@end ifnottex


変更ログ(ChangeLog)



* Change Log Commands::      変更ログファイルを編集するためのコマンド。
* Format of ChangeLog::      変更ログファイルがどのように見えるか。

Tagsテーブル



* Tag Syntax::               さまざまなタイプのコードおよびテキストファイルにたいするタグ構文。
* Create Tags Table::        @command{etags}によるタグテーブルの作成。
* Etags Regexps::            正規表現を使用した不定タグの作成。
* Select Tags Table::        タグテーブルをvisitする方法。
* Find Tag::                 特定のタグの定義を見つけるコマンド。
* Tags Search::              検索と置換にたいしてタグテーブルを使う。
* List Tags::                補完および補完候補の一覧にタグを使う。

@ifnottex
Emergeでのファイルのマージ

* Overview of Emerge:: Emergeを開始する方法と基本的な概念。
* Submodes of Emerge:: Fastモード vs. Editモード。Skip PrefersモードとAuto Advanceモード。
* State of Difference:: 各相違にたいしてAまたはBの状態を指定することによりマージを行う。
* Merge Commands:: 相違を選択したり相違の状態を変更するコマンドなど。
* Exiting Emerge:: マージを終えた後に行うこと。
* Combining in Emerge:: 相違にたいする両方の候補を維持する方法。
* Fine Points of Emerge:: その他の問題。
@end ifnottex


Abbrevs



* Abbrev Concepts::          定義されたabbrevsの基本。
* Defining Abbrevs::         abbrevを定義することによりタイプしたとき展開されるようになります。
* Expanding Abbrevs::        展開の制御 --- 
                               プレフィクス、展開の取り消し。
* Editing Abbrevs::          定義されたabbrevsのリスト全体の閲覧と編集。
* Saving Abbrevs::           他のセッションのためにabbrevsのリスト全体を保存する。
* Dynamic Abbrevs::          すでにバッファーにある単語にたいする略語。
* Dabbrev Customization::    動的abbrevsのための単語とは何か。ケースごとの処理。

@ifnottex
ピクチャーの編集

* Basic Picture:: Pictureモードの基本概念と簡単なコマンド。
* Insert in Picture:: 自己挿入文字の後のカーソル移動方向の制御。
* Tabs in Picture:: タブストップとインデントにたいするさまざまな機能。
* Rectangles in Picture:: 矩形領域のクリアーと重ね合わせ。
@end ifnottex


ディレクトリーエディターDired



* Dired Enter::              Diredの呼び出し方。
* Dired Navigation::         Diredバッファーでの特別な移動コマンド。
* Dired Deletion::           Diredでのファイルの削除。
* Flagging Many Files::      ファイル名にもとづくファイルへのフラグ付け。
* Dired Visiting::           Diredによるその他のファイル操作。
* Marks vs Flags::           削除のためのフラグとマーク。
* Operating on Files::       1つまたは複数ファイルにたいするコピー、リネーム、プリント、圧縮など。
* Shell Commands in Dired::  マークしたファイルにたいするシェルコマンドの実行。
* Transforming File Names::  複数ファイルのリネームにパターンを使う。
* Comparison in Dired::      Diredのやり方で@code{diff}を実行する。
* Subdirectories in Dired::  Diredバッファーにたいするサブディレクトリーの追加。
@ifnottex
* Subdir Switches:: Diredでのサブディレクトリースイッチ
@end ifnottex
* Subdirectory Motion::      サブディレクトリー間の移動、上下への移動。
* Hiding Subdirectories::    サブディレクトリーの表示・非表示。
* Dired Updating::           重要でないファイル行の削除。
* Dired and Find::           Diredでファイルを選択するために@code{find}を使う。
* Wdired::                   Diredバッファーの編集によりファイルを操作する。
* Image-Dired::              Diredでのイメージサムネイルの閲覧。
* Misc Dired Features::      その他のさまざまな機能。

カレンダーとダイアリー



* Calendar Motion::          カレンダー内の移動、日付の選択。
* Scroll Calendar::          過去または将来の月をスクリーンに表示する。
* Counting Days::            2つの日付の間の日数は?
* General Calendar::         カレンダーの終了と再計算。
* Writing Calendar Files::   さまざまなフォーマットでカレンダーをファイルに記述する。
* Holidays::                 休日の日付を表示する。
* Sunrise/Sunset::           日の出と日の入りの時間を地方時間で表示する。
* Lunar Phases::             月の位相の表示。
* Other Calendars::          他のカレンダーシステムへの日付の変換。
* Diary::                    ダイアリーからイベントを表示する。
* Appointments::             何かを行なう時刻のためのリマインダー。
* Importing Diary::          ダイアリーのイベントと他のフォーマットの変換。
* Daylight Saving::          夏時間がアクティブなときを指定する方法。
* Time Intervals::           時間間隔の追跡。
@ifnottex
* Advanced Calendar/Diary Usage:: カレンダーとダイアリーの上級のカスタマイズ。
@end ifnottex


カレンダー内での移動



* Calendar Unit Motion::     日、週、月、年単位での移動。
* Move to Beginning or End::  週、月、年の開始と終了への移動。
* Specified Dates::          今日の日付や、特定の日付への移動。

他のカレンダーへ/からの変換



* Calendar Systems::         (グレゴリオ歴以外の)Emacsが理解するカレンだ。
* To Other Calendar::        選択された日付をさまざまなカレンダーに変換する。
* From Other Calendar::      他のカレンダーで指定された日付に移動する。

ダイアリー



* Displaying the Diary::     ダイアリーのエントリーと、それに関連するカレンダーの日付を閲覧する。
* Format of Diary File::     ダイアリーにイベントを入力する。
* Date Formats::             日付を指定するさまざまな方法。
* Adding to Diary::          ダイアリーのエントリーを作成するコマンド。
* Special Diary Entries::    記念日、日付ブロック、周期的なエントリーなど。

@ifnottex
カレンダーとダイアリーのさらに上級の機能

* Calendar Customizing:: カレンダーのレイアウトとフック。
* Holiday Customizing:: 独自の休日を定義する。
* Mayan Calendar:: マヤ暦で指定された日付への移動。
* Date Display Format:: フォーマットの変更。
* Time Display Format:: フォーマットの変更。
* Diary Customizing:: セットできるデフォルト。
* Non-Gregorian Diary:: 他のカレンダーにもとづくダイアリーエントリー。
* Diary Display:: ダイアリーを表示する方法の選択。
* Fancy Diary Display:: インクルードされたダイアリーファイルを使ったダイアリーエントリーのソート。
* Sexp Diary Entries:: より柔軟なダイアリーエントリー。
@end ifnottex


Sending Mail



* Mail Format::              メールメッセージのフォーマット。
* Mail Headers::             いくつかの標準的なメールヘッダーフィールドの詳細。
* Mail Aliases::             メールアドレスの短縮とグループ化。
* Mail Commands::            作成するメールを編集するための特別なコマンド。
* Mail Signature::           各メッセージに署名を追加する。
* Mail Amusements::          NSAを混乱させるキーワードや、fortuneのメッセージを累加する。
* Mail Methods::             他のメール作成方法を使用する。

Mail Commands



* Mail Sending::             メッセージを送信するコマンド。
* Header Editing::           ヘッダーフィールドに移動して編集するコマンド。
* Citing Mail::              返信するメッセージのクォート。
* Mail Misc::                ファイル添付、スペルチェックなど。

Rmailでメールを読む



* Rmail Basics::             Rmailの基本的な概念と簡単な使い方。
* Rmail Scrolling::          メッセージをスクロールする。
* Rmail Motion::             他のメッセージへの移動。
* Rmail Deletion::           メッセージの削除と完全な削除。
* Rmail Inbox::              メールがRmailファイルに取り込まれる方法。
* Rmail Files::              複数のRmailファイルの使用。
* Rmail Output::             メッセージを外部ファイルにコピーする。
* Rmail Labels::             メッセージにラベルをつけて分類する。
* Rmail Attributes::         属性と呼ばれる標準的なラベル。
* Rmail Reply::              閲覧しているメッセージにたいして返信する。
* Rmail Summary::            多くのメッセージの簡単な情報の要約。
* Rmail Sorting::            Rmailでのメッセージのソート。
* Rmail Display::            Rmailがメッセージを表示する方法とカスタマイズ。
* Rmail Coding::             Rmailがデコードされた文字セットを扱う方法。
* Rmail Editing::            Rmailでのメッセージのテキストとヘッダーの編集。
* Rmail Digest::             メッセージのダイジェストからメッセージを抽出する。
* Rmail Rot13::              rot13コードでエンコードされたメッセージの閲覧。
* Movemail::                 新たなメールのフェッチに関する詳細。
* Remote Mailboxes::         リモートmailboxからのメールの取得について。
* Other Mailbox Formats::    さまざまなフォーマットのローカルmailboxからのメールの取得。

Rmailのサマリー



* Rmail Make Summary::       さまざまな種類のサマリーの作成。
* Rmail Summary Edit::       サマリーからのメッセージの操作。

Gnus



* Buffers of Gnus::          グループ、サマリー、アーティクルバッファー。
* Gnus Startup::             Gnusの開始するにあたって知っておくべきこと。
* Gnus Group Buffer::        Gnusグループコマンドの短い説明。
* Gnus Summary Buffer::      Gnusサマリーコマンドの短い説明。

ドキュメントの閲覧



* DocView Navigation::       DocViewバッファーの操作。
* DocView Searching::        ドキュメント内の検索。
* DocView Slicing::          ページのどの部分を表示するか指定する。
* DocView Conversion::       変換に影響を与えたり、それを誘因するもの。

Emacsからシェルコマンドを実行する



* Single Shell::             シェルコマンドを実行して戻る方法。
* Interactive Shell::        Emacsを通じて入力を行なう永続的なシェル。
* Shell Mode::               永続的なシェルで使用される特別なEmacsコマンド。
* Shell Prompts::            シェルプロンプトを認識する2つの方法。
* Shell History::            シェルバッファーで前のコマンドを繰り返す。
* Directory Tracking::       サブシェルでのディレクトリーの変更の追跡。
* Shell Options::            Shellモードをカスタマイズするオプション。
* Terminal emulator::        端末エミュレーターとしてのEmacsウィンドウ。
* Term Mode::                Termモードで使用される特別なEmacsコマンド。
* Remote Host::              他のコンピューターへの接続。
* Serial Terminal::          シリアルポートへの接続。

シェルコマンドヒストリー



* Shell Ring::               ヒストリーリストからコマンドを取り出す。
* Shell History Copying::コマンドに移動してそれをコピーする。
* History References::       @samp{!}スタイルのヒストリー参照の展開。

サーバーとしてのEmacsの使用



* Invoking emacsclient::     Emacsサーバーでの接続。
* emacsclient Options::      Emacsクライアントの開始オプション。

ハードコピーの印刷



* PostScript::               バッファーまたはリージョンをPostScriptとして印刷する。
* PostScript Variables::     PostScript印刷コマンドのカスタマイズ。
* Printing Package::         オプションの上級向け印刷インターフェース。

ハイパーリンクとナビゲーション機能



* Browse-URL::               URLを辿るには。
* Goto Address mode::        URLのアクティブ化について。
* FFAP::                     ポイント位置のファイルを探す、など。

Emacs Lispパッケージ



* Package Menu::             パッケージを閲覧・管理するためのバッファー。
* Package Installation::     パッケージのインストールにたいするオプション。
* Package Files::            パッケージがインストールされる場所。

Customization



* Easy Customization::       設定を閲覧したり変更する便利な方法。
* Variables::                多くのEmacsコマンドは何を行なうか決定するためにEmacs変数を調べるので、変数をセットすることによりこれらの機能を制御できます。
* Key Bindings::             keymapには各キーが実行するコマンドが記述されています。それを変更することによりキーを再定義できます。
* Init File::                初期化ファイルで一般的なカスタマイズを記述する方法。

Easy Customizationインターフェース



* Customization Groups::     セッティングがクラス化される方法。
* Browsing Custom::          セッティングのブラウズとサーチ。
* Changing a Variable::      オプション値の編集、およびオプションをセットする方法。
* Saving Customizations::    将来のEmacsセッションのためにカスタマイズを保存する。
* Face Customization::       フェイスの属性を編集する方法。
* Specific Customization::   グループの特定のセッティングのカスタマイズ。
* Custom Themes::            カスタマイズセッティングのコレクション。
* Creating Custom Themes::   新しいカスタムテーマを作成する方法。

Variables



* Examining::                変数の値の検証とセッティング。
* Hooks::                    フック変数によりEmacsの一部にたいして特定の機会に実行するプログラムを指定できます。
* Locals::                   変数のバッファーごとの値。
* File Variables::           ファイルが変数の値を指定する方法。
* Directory Variables::      ディレクトリーにより変数の値を指定する方法。

ファイル内のローカル変数



* Specifying File Variables::  ファイルローカル変数の指定。
* Safe File Variables::      ファイルローカル変数が安全であることを確認する。

キーバインドのカスタマイズ



* Keymaps::                  一般的な考え方。グローバルキーマップ。
* Prefix Keymaps::           プレフィクスキーにたいするキーマップ。
* Local Keymaps::            キーマップをもつメジャーモードとマイナーモード。
* Minibuffer Maps::          ミニバッファーが使用する独自のキーマップ。
* Rebinding::                あるキー意味を再定義する便利な方法。
* Init Rebinding::           初期化ファイルでのキーのリバインド。
* Modifier Keys::            キーバインドでの修飾キーの使用。
* Function Keys::            端末のファンクションキーのリバインド。
* Named ASCII Chars::        @key{TAB}と@kbd{C-i}などを区別する方法。
* Mouse Buttons::            Emacsでのマウスボタンのリバインド。
* Disabling::                コマンドを無効にするとは、それを実行出きるようにする前に確認が要求されることを意味します。これはビギナーを戸惑わせないようにするために行なわれます。

Emacsの初期化ファイル



* Init Syntax::              Emacs Lispでの定数の構文。
* Init Examples::            initファイルで何かを行なう方法。
* Terminal Init::            端末タイプごとのinitファイル。
* Find Init::                Emacsがinitファイルを探す方法。
* Init Non-ASCII::           initファイルでの非@acronym{ASCII}文字の使用。

Emacsでトラブルに対処する



* DEL Does Not Delete::      @key{DEL}で削除できないとき何を行なうか。
* Stuck Recursive::          モードラインのカッコの周囲の`[...]'。
* Screen Garbled::           画面上のゴミ。
* Text Garbled::             テキスト内のゴミ。
* Memory Full::              メモリー不足に対処する方法。
* Crashing::                 クラッシュ時にEmacsが何を行なうか。
* After a Crash::            クラッシュしたEmacsセッションの編集のリカバリー。
* Emergency Escape::         Emacsが応答しなくなったとき何を行なうか。

バグの報告



* Known Problems::           既知の問題とバグについて読む方法。
* Bug Criteria::             本当にバグを見つけたのか?
* Understanding Bug Reporting::  バグを報告する効果的な方法。
* Checklist::                良いバグレポートのためにしたがうべきステップ。
* Sending Patches::          GNU Emacsにパッチを送る方法。

Emacs呼び出しにたいするコマンドライン引数



* Action Arguments::         ファイルのvisit、ライブラリーのロード、関数を呼び出す引数。
* Initial Options::          Emacsの開始に影響する引数。
* Command Example::          コマンドライン引数の使用例。
* Environment::              Emacsが使用する環境変数。
* Display X::                デフォルトディスプレーの変更と、リモートログインの使用。
* Font X::                   Xでのテキストのフォント選択。
* Colors X::                 ディスプレーカラーの選択。
* Window Size X::            Xでのスタートアップウィンドウのサイズ。
* Borders X::                Xでの内枠ボーダーと外枠ボーダー。
* Title X::                  初期フレームのタイトルの指定。
* Icons X::                  Xで使用するアイコンの選択。
* Misc X::                   その他のディスプレーオプション。

環境変数



* General Variables::        すべてのバージョンのEmacsが使用する環境変数。
* Misc Variables::           システム固有の変数。
* MS-Windows Registry::      MS-Windowsでの環境の代用。

Xオプションとリソース



* Resources::                EmacsでXリソースを使用する(一般論として)。
* Table of Resources::       Emacsに影響する特定のXリソースの表。
* Lucid Resources::          LucidメニューにたいするXリソース。
* Motif Resources::          MotifおよびLessTifメニューにたいするXリソース。
* GTK resources::            GTKウィジェットにたいするリソース。

GTK resources



* GTK Resource Basics::      GTK+リソースの基本的な使い方。
* GTK Widget Names::         GTK+ウィジェットの命名方法。
* GTK Names in Emacs::       Emacsが使用するGTK+ウィジェット。
* GTK styles::               GTK+ウィジェットの何がカスタマイズできるか。

EmacsとMac OS、GNUstep



* Mac / GNUstep Basics::     GNUstepまたはMac 
                               OSでのEmacsの基本的な使用方法。
* Mac / GNUstep Customization::  GNUstepまたはMac 
                                   OSでのカスタマイズ。
* Mac / GNUstep Events::     ウィンドウシステムイベントが処理される方法。
* GNUstep Support::          GNUstepサポート状態の詳細。

EmacsとMicrosoft Windows/MS-DOS



* Windows Startup::          WindowsでEmacsを開始する方法。
* Text and Binary::          行末にCRLFを使用するテキストファイル。
* Windows Files::            Windowsのファイル名の慣習。
* ls in Lisp::               Diredにたいする@code{ls}のエミュレーション。
* Windows HOME::             開始時にEmacsが@file{.emacs}を探す場所。
* Windows Keyboard::         Windows特有のキーボード機能。
* Windows Mouse::            Windows特有のマウス機能。
* Windows Processes::        Windowsでのサブプロセスの実行。
* Windows Printing::         MS-Windowsでプリンターを指定する方法。
* Windows Fonts::            MS-Windowsでのフォントの指定。
* Windows Misc::             その他のWindowsの機能。
@ifnottex
* MS-DOS:: MS-DOSでのEmacsの使用。

EmacsとMS-DOS

* MS-DOS Keyboard:: MS-DOSでのキーボードの慣習。
* MS-DOS Mouse:: MS-DOSでのマウスの慣習。
* MS-DOS Display:: MS-DOSでのフォント、フレーム、ディスプレーのサイズ。
* MS-DOS File Names:: MS-DOSでのファイル名の慣習。
* MS-DOS Printing:: MS-DOSでの印刷の特性。
* MS-DOS and MULE:: MS-DOSでの国際化のサポート。
* MS-DOS Processes:: MS-DOSでのサブプロセスの実行。
@end ifnottex


@end detailmenu
@end menu

@iftex
@unnumbered 前書き

  このマニュアルは、Emacsエディターの使い方と、簡単なカスタマイズについて記述します。あなたがプログラマーではなくても、Emacsを簡単にカスタマイズできますが、カスタマイズに興味がない場合、カスタマイズのヒントを無視できます。

  これは主にリファレンスマニュアルですが、入門書としても使用できます。Emacsに馴染みがない場合は、このマニュアルを読む前に、総合的で、learn-by-doing形式のチュートリアルから始めることを推奨します。チュートリアルを実行するには、Emacsを開始して@kbd{C-h
t}とタイプします。そのチュートリアルでは、コマンドについて、それを実行するときと、その結果について説明されています。このチュートリアルは複数の言語で利用できます。

  最初に読むときは、チャプター1と2はざっと目を通してください。これらのチャプターでは、このマニュアルの表記規約と、Emacs表示スクリーンの一般的な外観を説明しています。このチャプターで説明されている疑問については注記してあるので、あとで参照することができます。チャプター4を読み終えたら、そこで示されたコマンドを練習してみましょう。続くいくつかのチャプターでは、頻繁に使用される基本的なテクニックと概念について説明します。これらは充分に理解する必要があるので、納得するまで試してください。

  チャプター14から19では、多くの種類の編集に置いて便利な、中間レベルの機能について説明します。チャプター20以降ではオプションですが便利な機能について説明します。必要になったらこれらのチャプターを読んでください。

  Emacsが正しく動作していないように見えるときは、一般的な問題に関するチャプターを読んでください。いくつかの一般的な問題に対処する方法(@pxref{Lossage,,
Dealing with Emacs Trouble})、同様にEmacsのバグを報告する方法(@pxref{Bugs})について説明されています。

  特定のコマンドについてのドキュメントを探すには、インデックスを参照してください。キー(文字によるコマンド)と、コマンド名は、別のインデックスをもっています。用語ごとにクロスリファレンスがついたglossary(用語集)もあります。

  このマニュアルは印刷された書籍、Infoファイルとしても利用できます。InfoファイルはEmacs自身から読むか、Infoプラグラムで読むためのものです。InfoファイルはGNUシステムの中では主要なドキュメント形式です。Infoファイルと印刷された書籍は、ほぼ同じテキストを含んでおり、GNU
Emacsと共にが畏怖される同じソースファイルから生成されます。

  GNU
EmacsはEmacsエディターファミリーの1つです。多くのEmacsエディターがあり、それらは一般的な原理と構成を共有します。Emacsの背後にある主義と、Emacsの開発から得られる教訓についての情報は、@cite{Emacs,
the Extensible, Customizable Self-Documenting Display
Editor}を参照してください。これは@url{ftp://publications.ai.mit.edu/ai-publications/pdf/AIM-519A.pdf}から入手できます。

このバージョンのマニュアルは、主にGNUおよびUnixシステムにインストールされたGNU Emacsの使用を意図しています。GNU
EmacsはMS-DOS、Microsoft
Windows、Macintoshシステムでも使用できます。このマニュアルのInfoファイル版には、それらのシステムでのEmacsの使用についての、追加情報が含まれています。これらのシステムは異なるファイル名の構文を使用します。それに加えてMS-DOSではすべてのGNU
Emacs機能をサポートしません。WindowsでのEmacsの使用については、@xref{Microsoft
Windows}.Macintosh(およびGNUstep)でのEmacsの使用については、@xref{Mac OS / GNUstep}.
@end iftex

@node Distrib
@unnumbered ディストリビューション

GNU Emacsは@dfn{free
software(フリーソフトウェアー、自由なソフトウェアー)}です。これはすべての人が自由に使用でき、特定の条件の元に自由に再配布できることを意味します。GNU
Emacsはパブリックドメイン(public domain:
特許権の消滅状態)ではありません。copyright(版権)されており、配布については制限があります。しかし、それらの制限は良き共同的な市民(good
cooperating
citizen)が行ないたいと欲するであろう、すべてのことを許すようデザインされています。なにが許されていないか、それはあなたから取得するかもしれないGNU
Emacsの任意のバージョンの更なる共有を妨げる試みです。これの正確な条件はEmacsのGNU General Public
Licenseで見ることができ、このマニュアルにも記載されています@footnote{このマニュアル自身はGNU Free Documentation
Licenseにより保護されています。このライセンスの精神はGeneral Public
Licenseと同様ですが、よりドキュメントに適したものです。@ref{GNU Free Documentation
License}を参照してください。}。 @ref{Copying}を参照してください。

GNU
Emacsのコピーを入手する1つの方法は、それを所有する他の誰かから入手する方法です。これを行なうための許可を求めたり、他の誰かに告げる必要はありません。ただコピーするだけです。インターネットへアクセスできるなら、匿名FTPからGNU
NEmacsの最新のディストリビューションバージョンを入手できます。わたしたちのウェブサイトについての詳細は、@url{http://www.gnu.org/software/emacs}を参照してください。

コンピューターを購入したときに、GNU
Emacsを入手するかもしれません。コンピューター業者は、他のすべての人に適用されるのと同じ条件で、コピーを自由に配布できます。これらの条件は、コンピューター業者がソースにたいして行なった変更を含む完全なソースをあなたに与えることと、General
Public Licenseの通常の条件の下に、入手したGNU
Emacsをあなたが再配布できることを要求します。言い換えると、そのプログラムはあなたが入手したときはフリーでなければならず、業者にとっては単にフリーという訳ではありません。

GNU Emacsが有用だと思ったら、わたしたちの作業をサポートするために、どうかFree Software
Foundationに@strong{寄付を送ってください}。合衆国ではFree Software
Foundationへの寄付は、税金が控除されます。職場でGNU
Emacsを使用している場合は、どうかその企業に寄付を行なうよう提案してください。寄付をするには、@url{https://my.fsf.org/donate/}を参照してください。あなたが手助けできる他の方法については、@url{http://www.gnu.org/help/help.html}を参照してください。

@c The command view-order-manuals uses this anchor.
@anchor{Printed Books}
わたしたちは、このマニュアルと、Robert J. Chassellによる@cite{An Introduction to Programming in
Emacs
Lisp}のハードコピーも販売しています。あなたは、わたしたちのオンラインショップ@url{http://shop.fsf.org/}を訪れることができます。販売による収益は、Free
Software Foundationの目的 --- すなわち新しいソフトウェアーの開発、GNU
Emacsを含む既存のプログラムの改良をサポートします。

Free Software
Foundationに連絡する必要がある場合は、@url{http://www.fsf.org/about/contact/}を参照するか、下記に手紙を送ってください

@display
Free Software Foundation
51 Franklin Street, Fifth Floor
Boston, MA 02110-1301
USA
@end display

@iftex
@node Acknowledgments
@unnumberedsec Acknowledgments

@c It's hard to update this fairly.
@c I wonder if it would be better to drop it in favor of AUTHORS?
Contributors to GNU Emacs include Jari Aalto, Per Abrahamsen, Tomas
Abrahamsson, Jay K. Adams, Alon Albert, Michael Albinus, Nagy Andras,
Benjamin Andresen, Ralf Angeli, Dmitry Antipov, Joe Arceneaux, Emil Åström,
Miles Bader, David Bakhash, Juanma Barranquero, Eli Barzilay, Thomas
Baumann, Steven L. Baur, Jay Belanger, Alexander L. Belikoff, Thomas
Bellman, Scott Bender, Boaz Ben-Zvi, Sergey Berezin, Stephen Berman, Karl
Berry, Anna M. Bigatti, Ray Blaak, Martin Blais, Jim Blandy, Johan Bockgård,
Jan Böcker, Joel Boehland, Lennart Borgman, Per Bothner, Terrence Brannon,
Frank Bresz, Peter Breton, Emmanuel Briot, Kevin Broadey, Vincent Broman,
Michael Brouwer, David M. Brown, Stefan Bruda, Georges Brun-Cottan, Joe
Buehler, Scott Byer, Włodek Bzyl, Bill Carpenter, Per Cederqvist, Hans
Chalupsky, Chris Chase, Bob Chassell, Andrew Choi, Chong Yidong, Sacha Chua,
Stewart Clamen, James Clark, Mike Clarkson, Glynn Clements, Andrew Cohen,
Daniel Colascione, Christoph Conrad, Ludovic Courtès, Andrew Csillag, Toby
Cubitt, Baoqiu Cui, Doug Cutting, Mathias Dahl, Julien Danjou, Satyaki Das,
Vivek Dasmohapatra, Dan Davison, Michael DeCorte, Gary Delp, Nachum
Dershowitz, Dave Detlefs, Matthieu Devin, Christophe de Dinechin, Eri Ding,
Jan Djärv, Lawrence R. Dodd, Carsten Dominik, Scott Draves, Benjamin Drieu,
Viktor Dukhovni, Jacques Duthen, Dmitry Dzhus, John Eaton, Rolf Ebert, Carl
Edman, David Edmondson, Paul Eggert, Stephen Eglen, Christian Egli, Torbjörn
Einarsson, Tsugutomo Enami, David Engster, Hans Henrik Eriksen, Michael
Ernst, Ata Etemadi, Frederick Farnbach, Oscar Figueiredo, Fred Fish, Steve
Fisk, Karl Fogel, Gary Foster, Eric S. Fraga, Romain Francoise, Noah
Friedman, Andreas Fuchs, Shigeru Fukaya, Xue Fuqiao, Hallvard Furuseth,
Keith Gabryelski, Peter S.  Galbraith, Kevin Gallagher, Fabián E. Gallina,
Kevin Gallo, Juan León Lahoz García, Howard Gayle, Daniel German, Stephen
Gildea, Julien Gilles, David Gillespie, Bob Glickstein, Deepak Goel, David
De La Harpe Golden, Boris Goldowsky, David Goodger, Chris Gray, Kevin
Greiner, Michelangelo Grigni, Odd Gripenstam, Kai Großjohann, Michael
Gschwind, Bastien Guerry, Henry Guillaume, Dmitry Gutov, Doug Gwyn, Bruno
Haible, Ken'ichi Handa, Lars Hansen, Chris Hanson, Jesper Harder, Alexandru
Harsanyi, K. Shane Hartman, John Heidemann, Jon K. Hellan, Magnus Henoch,
Markus Heritsch, Dirk Herrmann, Karl Heuer, Manabu Higashida, Konrad Hinsen,
Anders Holst, Jeffrey C. Honig, Tassilo Horn, Kurt Hornik, Tom Houlder,
Joakim Hove, Denis Howe, Lars Ingebrigtsen, Andrew Innes, Seiichiro Inoue,
Philip Jackson, Martyn Jago, Pavel Janik, Paul Jarc, Ulf Jasper, Thorsten
Jolitz, Michael K. Johnson, Kyle Jones, Terry Jones, Simon Josefsson,
Alexandre Julliard, Arne Jørgensen, Tomoji Kagatani, Brewster Kahle, Tokuya
Kameshima, Lute Kamstra, Ivan Kanis, David Kastrup, David Kaufman, Henry
Kautz, Taichi Kawabata, Taro Kawagishi, Howard Kaye, Michael Kifer, Richard
King, Peter Kleiweg, Karel Klíč, Shuhei Kobayashi, Pavel Kobyakov, Larry
K. Kolodney, David M. Koppelman, Koseki Yoshinori, Robert Krawitz, Sebastian
Kremer, Ryszard Kubiak, Igor Kuzmin, David Kågedal, Daniel LaLiberte, Karl
Landstrom, Mario Lang, Aaron Larson, James R. Larus, Vinicius Jose Latorre,
Werner Lemberg, Frederic Lepied, Peter Liljenberg, Christian Limpach, Lars
Lindberg, Chris Lindblad, Anders Lindgren, Thomas Link, Juri Linkov, Francis
Litterio, Sergey Litvinov, Leo Liu, Emilio C. Lopes, Martin Lorentzon, Dave
Love, Eric Ludlam, Károly Lőrentey, Sascha Lüdecke, Greg McGary, Roland
McGrath, Michael McNamara, Alan Mackenzie, Christopher J. Madsen, Neil
M. Mager, Ken Manheimer, Bill Mann, Brian Marick, Simon Marshall, Bengt
Martensson, Charlie Martin, Yukihiro Matsumoto, Tomohiro Matsuyama, David
Maus, Thomas May, Will Mengarini, David Megginson, Stefan Merten, Ben
A. Mesander, Wayne Mesard, Brad Miller, Lawrence Mitchell, Richard Mlynarik,
Gerd Möllmann, Dani Moncayo, Stefan Monnier, Keith Moore, Jan Moringen,
Morioka Tomohiko, Glenn Morris, Don Morrison, Diane Murray, Riccardo Murri,
Sen Nagata, Erik Naggum, Gergely Nagy, Nobuyoshi Nakada, Thomas Neumann,
Mike Newton, Thien-Thi Nguyen, Jurgen Nickelsen, Dan Nicolaescu, Hrvoje
Nikšić, Jeff Norden, Andrew Norman, Edward O'Connor, Kentaro Ohkouchi,
Christian Ohler, Kenichi Okada, Alexandre Oliva, Bob Olson, Michael Olson,
Takaaki Ota, Pieter E. J. Pareit, Ross Patterson, David Pearson, Juan
Pechiar, Jeff Peck, Damon Anton Permezel, Tom Perrine, William M. Perry, Per
Persson, Jens Petersen, Daniel Pfeiffer, Justus Piater, Richard L.  Pieri,
Fred Pierresteguy, François Pinard, Daniel Pittman, Christian Plaunt,
Alexander Pohoyda, David Ponce, Francesco A. Potortì, Michael D. Prange,
Mukesh Prasad, Ken Raeburn, Marko Rahamaa, Ashwin Ram, Eric S. Raymond, Paul
Reilly, Edward M. Reingold, David Reitter, Alex Rezinsky, Rob Riepel, Lara
Rios, Adrian Robert, Nick Roberts, Roland B. Roberts, John Robinson, Denis
B. Roegel, Danny Roozendaal, Sebastian Rose, William Rosenblatt, Markus
Rost, Guillermo J. Rozas, Martin Rudalics, Ivar Rummelhoff, Jason Rumney,
Wolfgang Rupprecht, Benjamin Rutt, Kevin Ryde, James B. Salem, Masahiko
Sato, Timo Savola, Jorgen Schäfer, Holger Schauer, William Schelter, Ralph
Schleicher, Gregor Schmid, Michael Schmidt, Ronald S. Schnell, Philippe
Schnoebelen, Jan Schormann, Alex Schroeder, Stefan Schoef, Rainer Schöpf,
Raymond Scholz, Eric Schulte, Andreas Schwab, Randal Schwartz, Oliver
Seidel, Manuel Serrano, Paul Sexton, Hovav Shacham, Stanislav Shalunov, Marc
Shapiro, Richard Sharman, Olin Shivers, Tibor Šimko, Espen Skoglund, Rick
Sladkey, Lynn Slater, Chris Smith, David Smith, Paul D. Smith, Wilson
Snyder, William Sommerfeld, Simon South, Andre Spiegel, Michael Staats,
Thomas Steffen, Ulf Stegemann, Reiner Steib, Sam Steingold, Ake Stenhoff,
Peter Stephenson, Ken Stevens, Andy Stewart, Jonathan Stigelman, Martin
Stjernholm, Kim F.  Storm, Steve Strassmann, Christopher Suckling, Olaf
Sylvester, Naoto Takahashi, Steven Tamm, Jan Tatarik, Luc Teirlinck,
Jean-Philippe Theberge, Jens T. Berger Thielemann, Spencer Thomas, Jim
Thompson, Toru Tomabechi, David O'Toole, Markus Triska, Tom Tromey, Enami
Tsugutomo, Eli Tziperman, Daiki Ueno, Masanobu Umeda, Rajesh Vaidheeswarran,
Neil W. Van Dyke, Didier Verna, Joakim Verona, Ulrik Vieth, Geoffrey
Voelker, Johan Vromans, Inge Wallin, John Paul Wallington, Colin Walters,
Barry Warsaw, Christoph Wedler, Ilja Weis, Zhang Weize, Morten Welinder,
Joseph Brian Wells, Rodney Whitby, John Wiegley, Sascha Wilde, Ed Wilkinson,
Mike Williams, Roland Winkler, Bill Wohler, Steven A. Wood, Dale R. Worley,
Francis J. Wright, Felix S. T. Wu, Tom Wurgler, Yamamoto Mitsuharu, Katsumi
Yamaoka, Masatake Yamato, Jonathan Yavner, Ryan Yeske, Ilya Zakharevich,
Milan Zamazal, Victor Zandy, Eli Zaretskii, Jamie Zawinski, Andrew Zhilin,
Shenghuo Zhu, Piotr Zieliński, Ian T. Zimmermann, Reto Zimmermann, Neal
Ziring, Teodor Zlatanov, and Detlev Zundel.
@end iftex

@node Intro
@unnumbered イントロダクション

@c Workaround makeinfo 4 bug.
@c http://lists.gnu.org/archive/html/bug-texinfo/2004-08/msg00009.html
  あなたはEmacsのマニュアル読んでいるところです。Emacsは、セルフドキュメント方式で、カスタマイズ可能で、拡張可能エディターであり、GNUの先進性を具現化したものです(
@iftex
@acronym{GNU, @acronym{GNU}'s Not Unix}
@end iftex
@ifnottex
@acronym{GNU, GNU's Not Unix}
@end ifnottex
の@samp{G}は発音します)。

  Emacsは@dfn{先進的(advanced)}であるというのは、単純な挿入と削除だけでなく、プロセスの制御、プログラムのインデントの自動化、複数ファイルの同時表示、整形済みテキストの編集、文字、単語、行、文、段落、ページを扱うのと同様に、異なるプログラミム言語の式やコメントを扱う機能なども提供するからです。

  @dfn{セルフドキュメント方式(Self-documenting)}とは、いつでも@dfn{ヘルプコマンド}として知られる、特別なコマンドを使うことができることです。これはどのようなオプションがあるのか、コマンドが何をするのかを見つけたり、与えられたトピックと関連するすべてのコマンドを見つけることができるコマンドです。@ref{Help}を参照してください。

  @dfn{カスタマイズ可能(Customizable)}とは、シンプルな方法でEmacsコマンドの動作を簡単に変更できるということです。たとえば、@samp{<**}で始まり@samp{**>}で終わるようなコメントのプログラム言語を使っている場合は、Emacsのコメント操作コマンドに、これらの文字列を使うように指示できます(@ref{Comments}を参照してください)。別の例としては、カーソル動作(上下左右)を再編成して使いやすくカスタマイズできます。@ref{Customization}を参照してください。

  @dfn{拡張可能(Extensible)}とは、単純なカスタマイズではなく、まったく新しいコマンドを作成できるということです。新しいコマンドは、Emacs自身のLisp処理系で動作する、Lisp言語でプログラムを記述されます。既存のコマンドは、編集を行なっている最中でさえ、Emacsを再起動することなく再定義できます。Emacsのほとんどの編集コマンドはLispで記述されています。Lispで記述することも可能ですが、効率のためにCで記述されているものもあります。拡張機能の記述はプログラミングですが、プログラマーでない人も後でそれを使うことができます。もしあなたがEmacs
Lispを学びたければ、@ref{Top, Emacs Lisp Intro, Preface, eintr, An Introduction to
Programming in Emacs Lisp}を参照してください。

@include screen.texi
@include commands.texi
@include entering.texi
@include basic.texi
@include mini.texi
@include m-x.texi
@include help.texi
@include mark.texi
@include killing.texi
@include regs.texi
@include display.texi
@include search.texi
@include fixit.texi
@include kmacro.texi
@c Includes arevert-xtra.
@include files.texi
@include buffers.texi
@include windows.texi
@include frames.texi
@include mule.texi
@include modes.texi
@include indent.texi
@include text.texi
@c Includes fortran-xtra.
@include programs.texi
@include building.texi
@c Includes vc1-xtra, emerge-xtra.
@include maintaining.texi
@include abbrevs.texi
@c Includes dired-xtra.
@include dired.texi
@c Includes cal-xtra.
@include calendar.texi
@include sending.texi
@include rmail.texi
@c Includes picture-xtra.texi
@include misc.texi
@include package.texi
@include custom.texi
@include trouble.texi

@node Copying
@appendix GNU GENERAL PUBLIC LICENSE
@include gpl.texi

@node GNU Free Documentation License
@appendix GNU Free Documentation License
@include doclicense.texi

@include cmdargs.texi
@include xresources.texi

@include anti.texi
@include macos.texi
@c Includes msdog-xtra.
@include msdog.texi
@include gnu.texi
@include glossary.texi
@ifnottex
@include ack.texi
@end ifnottex

@c The Option Index is produced only in the on-line version,
@c because the index entries related to command-line options
@c tend to point to the same pages and all begin with a dash.

@node Key Index
@unnumbered Key (Character) Index
@printindex ky

@ifnottex
@node Option Index
@unnumbered Command-Line Options Index
@printindex op
@end ifnottex

@node Command Index
@unnumbered Command and Function Index
@printindex fn

@node Variable Index
@unnumbered Variable Index
@printindex vr

@node Concept Index
@unnumbered Concept Index
@printindex cp

@bye
