# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2016-06-25 01:15+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: node
#: modes.texi.orig:5
#, no-wrap
msgid "Modes"
msgstr ""

#. type: chapter
#: modes.texi.orig:6
#, no-wrap
msgid "Major and Minor Modes"
msgstr ""

#. type: Plain text
#: modes.texi.orig:11
msgid ""
"Emacs contains many @dfn{editing modes} that alter its basic behavior in "
"useful ways.  These are divided into @dfn{major modes} and @dfn{minor "
"modes}."
msgstr ""

#. type: Plain text
#: modes.texi.orig:17
msgid ""
"Major modes provide specialized facilities for working on a particular file "
"type, such as a C source file (@pxref{Programs}), or a particular type of "
"non-file buffer, such as a shell buffer (@pxref{Shell}).  Major modes are "
"mutually exclusive; each buffer has one and only one major mode at any time."
msgstr ""

#. type: Plain text
#: modes.texi.orig:23
msgid ""
"Minor modes are optional features which you can turn on or off, not "
"necessarily specific to a type of file or buffer.  For example, Auto Fill "
"mode is a minor mode in which @key{SPC} breaks lines between words as you "
"type (@pxref{Auto Fill}).  Minor modes are independent of one another, and "
"of the selected major mode."
msgstr ""

#. type: section
#: modes.texi.orig:29 modes.texi.orig:31 modes.texi.orig:32
#, no-wrap
msgid "Major Modes"
msgstr ""

#. type: menuentry
#: modes.texi.orig:29
msgid "Text mode vs. Lisp mode vs. C mode..."
msgstr ""

#. type: section
#: modes.texi.orig:29 modes.texi.orig:131 modes.texi.orig:132
#, no-wrap
msgid "Minor Modes"
msgstr ""

#. type: menuentry
#: modes.texi.orig:29
msgid "Each minor mode is a feature you can turn on independently of any others."
msgstr ""

#. type: node
#: modes.texi.orig:29 modes.texi.orig:292
#, no-wrap
msgid "Choosing Modes"
msgstr ""

#. type: menuentry
#: modes.texi.orig:29
msgid "How modes are chosen when visiting files."
msgstr ""

#. type: cindex
#: modes.texi.orig:33
#, no-wrap
msgid "major modes"
msgstr ""

#. type: cindex
#: modes.texi.orig:34
#, no-wrap
msgid "mode, major"
msgstr ""

#. type: kindex
#: modes.texi.orig:35
#, no-wrap
msgid "TAB @r{(and major modes)}"
msgstr ""

#. type: kindex
#: modes.texi.orig:36
#, no-wrap
msgid "DEL @r{(and major modes)}"
msgstr ""

#. type: kindex
#: modes.texi.orig:37
#, no-wrap
msgid "C-j @r{(and major modes)}"
msgstr ""

#. type: Plain text
#: modes.texi.orig:43
msgid ""
"Every buffer possesses a major mode, which determines the editing behavior "
"of Emacs while that buffer is current.  The mode line normally shows the "
"name of the current major mode, in parentheses (@pxref{Mode Line})."
msgstr ""

#. type: Plain text
#: modes.texi.orig:48
msgid ""
"The least specialized major mode is called @dfn{Fundamental mode}.  This "
"mode has no mode-specific redefinitions or variable settings, so that each "
"Emacs command behaves in its most general manner, and each user option "
"variable is in its default state."
msgstr ""

#. type: Plain text
#: modes.texi.orig:63
msgid ""
"For editing text of a specific type that Emacs knows about, such as Lisp "
"code or English text, you typically use a more specialized major mode, such "
"as Lisp mode or Text mode.  Most major modes fall into three major groups.  "
"The first group contains modes for normal text, either plain or with "
"mark-up.  It includes Text mode, HTML mode, SGML mode, @TeX{} mode and "
"Outline mode.  The second group contains modes for specific programming "
"languages.  These include Lisp mode (which has several variants), C mode, "
"Fortran mode, and others.  The third group consists of major modes that are "
"not associated directly with files; they are used in buffers created for "
"specific purposes by Emacs, such as Dired mode for buffers made by Dired "
"(@pxref{Dired}), Message mode for buffers made by @kbd{C-x m} "
"(@pxref{Sending Mail}), and Shell mode for buffers used to communicate with "
"an inferior shell process (@pxref{Interactive Shell})."
msgstr ""

#. type: Plain text
#: modes.texi.orig:69
msgid ""
"Usually, the major mode is automatically set by Emacs, when you first visit "
"a file or create a buffer (@pxref{Choosing Modes}).  You can explicitly "
"select a new major mode by using an @kbd{M-x} command.  Take the name of the "
"mode and add @code{-mode} to get the name of the command to select that mode "
"(e.g., @kbd{M-x lisp-mode} enters Lisp mode)."
msgstr ""

#. type: vindex
#: modes.texi.orig:70
#, no-wrap
msgid "major-mode"
msgstr ""

#. type: Plain text
#: modes.texi.orig:74
msgid ""
"The value of the buffer-local variable @code{major-mode} is a symbol with "
"the same name as the major mode command (e.g., @code{lisp-mode}).  This "
"variable is set automatically; you should not change it yourself."
msgstr ""

#. type: Plain text
#: modes.texi.orig:82
msgid ""
"The default value of @code{major-mode} determines the major mode to use for "
"files that do not specify a major mode, and for new buffers created with "
"@kbd{C-x b}.  Normally, this default value is the symbol "
"@code{fundamental-mode}, which specifies Fundamental mode.  You can change "
"this default value via the Customization interface (@pxref{Easy "
"Customization}), or by adding a line like this to your init file "
"(@pxref{Init File}):"
msgstr ""

#. type: example
#: modes.texi.orig:85
#, no-wrap
msgid "(setq-default major-mode 'text-mode)\n"
msgstr ""

#. type: Plain text
#: modes.texi.orig:90
msgid ""
"If the default value of @code{major-mode} is @code{nil}, the major mode is "
"taken from the previously current buffer."
msgstr ""

#. type: Plain text
#: modes.texi.orig:101
msgid ""
"Specialized major modes often change the meanings of certain keys to do "
"something more suitable for the mode.  For instance, programming language "
"modes bind @key{TAB} to indent the current line according to the rules of "
"the language (@pxref{Indentation}).  The keys that are commonly changed are "
"@key{TAB}, @key{DEL}, and @kbd{C-j}.  Many modes also define special "
"commands of their own, usually bound in the prefix key @kbd{C-c}.  Major "
"modes can also alter user options and variables; for instance, programming "
"language modes typically set a buffer-local value for the variable "
"@code{comment-start}, which determines how source code comments are "
"delimited (@pxref{Comments})."
msgstr ""

#. type: findex
#: modes.texi.orig:102
#, no-wrap
msgid "describe-mode"
msgstr ""

#. type: kindex
#: modes.texi.orig:103
#, no-wrap
msgid "C-h m"
msgstr ""

#. type: Plain text
#: modes.texi.orig:106
msgid ""
"To view the documentation for the current major mode, including a list of "
"its key bindings, type @code{C-h m} (@code{describe-mode})."
msgstr ""

#. type: cindex
#: modes.texi.orig:107
#, no-wrap
msgid "mode hook"
msgstr ""

#. type: vindex
#: modes.texi.orig:108
#, no-wrap
msgid "text-mode-hook"
msgstr ""

#. type: vindex
#: modes.texi.orig:109
#, no-wrap
msgid "prog-mode-hook"
msgstr ""

#. type: Plain text
#: modes.texi.orig:119
msgid ""
"Every major mode, apart from Fundamental mode, defines a @dfn{mode hook}, a "
"customizable list of Lisp functions to run each time the mode is enabled in "
"a buffer.  @xref{Hooks}, for more information about hooks.  Each mode hook "
"is named after its major mode, e.g., Fortran mode has "
"@code{fortran-mode-hook}.  Furthermore, all text-based major modes run "
"@code{text-mode-hook}, and all programming language modes run "
"@code{prog-mode-hook}, prior to running their own mode hooks.  Hook "
"functions can look at the value of the variable @code{major-mode} to see "
"which mode is actually being entered."
msgstr ""

#. type: Plain text
#: modes.texi.orig:125
msgid ""
"Mode hooks are commonly used to enable minor modes (@pxref{Minor Modes}).  "
"For example, you can put the following lines in your init file to enable "
"Flyspell minor mode in all text-based major modes (@pxref{Spelling}), and "
"Eldoc minor mode in Emacs Lisp mode (@pxref{Lisp Doc}):"
msgstr ""

#. type: example
#: modes.texi.orig:129
#, no-wrap
msgid ""
"(add-hook 'text-mode-hook 'flyspell-mode)\n"
"(add-hook 'emacs-lisp-mode-hook 'eldoc-mode)\n"
msgstr ""

#. type: cindex
#: modes.texi.orig:133
#, no-wrap
msgid "minor modes"
msgstr ""

#. type: cindex
#: modes.texi.orig:134
#, no-wrap
msgid "mode, minor"
msgstr ""

#. type: Plain text
#: modes.texi.orig:144
msgid ""
"A minor mode is an optional editing mode that alters the behavior of Emacs "
"in some well-defined way.  Unlike major modes, any number of minor modes can "
"be in effect at any time.  Some minor modes are @dfn{buffer-local}, and can "
"be turned on (enabled) in certain buffers and off (disabled) in others.  "
"Other minor modes are @dfn{global}: while enabled, they affect everything "
"you do in the Emacs session, in all buffers.  Most minor modes are disabled "
"by default, but a few are enabled by default."
msgstr ""

#. type: Plain text
#: modes.texi.orig:149
msgid ""
"Most buffer-local minor modes say in the mode line when they are enabled, "
"just after the major mode indicator.  For example, @samp{Fill} in the mode "
"line means that Auto Fill mode is enabled.  @xref{Mode Line}."
msgstr ""

#. type: cindex
#: modes.texi.orig:150
#, no-wrap
msgid "mode commands for minor modes"
msgstr ""

#. type: Plain text
#: modes.texi.orig:157
msgid ""
"Like major modes, each minor mode is associated with a @dfn{mode command}, "
"whose name consists of the mode name followed by @samp{-mode}.  For "
"instance, the mode command for Auto Fill mode is @code{auto-fill-mode}.  But "
"unlike a major mode command, which simply enables the mode, the mode command "
"for a minor mode can either enable or disable it:"
msgstr ""

#. type: itemize
#: modes.texi.orig:164
msgid ""
"If you invoke the mode command directly with no prefix argument (either via "
"@kbd{M-x}, or by binding it to a key and typing that key; @pxref{Key "
"Bindings}), that @dfn{toggles} the minor mode.  The minor mode is turned on "
"if it was off, and turned off if it was on."
msgstr ""

#. type: itemize
#: modes.texi.orig:169
msgid ""
"If you invoke the mode command with a prefix argument, the minor mode is "
"unconditionally turned off if that argument is zero or negative; otherwise, "
"it is unconditionally turned on."
msgstr ""

#. type: itemize
#: modes.texi.orig:176
msgid ""
"If the mode command is called via Lisp, the minor mode is unconditionally "
"turned on if the argument is omitted or @code{nil}.  This makes it easy to "
"turn on a minor mode from a major mode's mode hook (@pxref{Major Modes}).  A "
"non-@code{nil} argument is handled like an interactive prefix argument, as "
"described above."
msgstr ""

#. type: Plain text
#: modes.texi.orig:186
msgid ""
"Most minor modes also have a @dfn{mode variable}, with the same name as the "
"mode command.  Its value is non-@code{nil} if the mode is enabled, and "
"@code{nil} if it is disabled.  In general, you should not try to enable or "
"disable the mode by changing the value of the mode variable directly in "
"Lisp; you should run the mode command instead.  However, setting the mode "
"variable through the Customize interface (@pxref{Easy Customization}) will "
"always properly enable or disable the mode, since Customize automatically "
"runs the mode command for you."
msgstr ""

#. type: Plain text
#: modes.texi.orig:188
msgid "The following is a list of some buffer-local minor modes:"
msgstr ""

#. type: itemize
#: modes.texi.orig:193
msgid ""
"Abbrev mode automatically expands text based on pre-defined abbreviation "
"definitions.  @xref{Abbrevs}."
msgstr ""

#. type: itemize
#: modes.texi.orig:197
msgid ""
"Auto Fill mode inserts newlines as you type to prevent lines from becoming "
"too long.  @xref{Filling}."
msgstr ""

#. type: itemize
#: modes.texi.orig:201
msgid ""
"Auto Save mode saves the buffer contents periodically to reduce the amount "
"of work you can lose in case of a crash.  @xref{Auto Save}."
msgstr ""

#. type: itemize
#: modes.texi.orig:205
msgid ""
"Enriched mode enables editing and saving of formatted text.  @xref{Enriched "
"Text}."
msgstr ""

#. type: itemize
#: modes.texi.orig:209
msgid "Flyspell mode automatically highlights misspelled words.  @xref{Spelling}."
msgstr ""

#. type: itemize
#: modes.texi.orig:214
msgid ""
"Font-Lock mode automatically highlights certain textual units found in "
"programs.  It is enabled globally by default, but you can disable it in "
"individual buffers.  @xref{Faces}."
msgstr ""

#. type: findex
#: modes.texi.orig:215
#, no-wrap
msgid "linum-mode"
msgstr ""

#. type: cindex
#: modes.texi.orig:216
#, no-wrap
msgid "Linum mode"
msgstr ""

#. type: itemize
#: modes.texi.orig:219
msgid "Linum mode displays each line's line number in the window's left margin."
msgstr ""

#. type: itemize
#: modes.texi.orig:223
msgid ""
"Outline minor mode provides similar facilities to the major mode called "
"Outline mode.  @xref{Outline Mode}."
msgstr ""

#. type: cindex
#: modes.texi.orig:224
#, no-wrap
msgid "Overwrite mode"
msgstr ""

#. type: cindex
#: modes.texi.orig:225
#, no-wrap
msgid "mode, Overwrite"
msgstr ""

#. type: findex
#: modes.texi.orig:226
#, no-wrap
msgid "overwrite-mode"
msgstr ""

#. type: kindex
#: modes.texi.orig:227
#, no-wrap
msgid "INSERT"
msgstr ""

#. type: itemize
#: modes.texi.orig:238
msgid ""
"Overwrite mode causes ordinary printing characters to replace existing text "
"instead of shoving it to the right.  For example, if point is in front of "
"the @samp{B} in @samp{FOOBAR}, then in Overwrite mode typing a @kbd{G} "
"changes it to @samp{FOOGAR}, instead of producing @samp{FOOGBAR} as usual.  "
"In Overwrite mode, the command @kbd{C-q} inserts the next character whatever "
"it may be, even if it is a digit---this gives you a way to insert a "
"character instead of replacing an existing character.  The mode command, "
"@code{overwrite-mode}, is bound to the @key{Insert} key."
msgstr ""

#. type: findex
#: modes.texi.orig:239
#, no-wrap
msgid "binary-overwrite-mode"
msgstr ""

#. type: itemize
#: modes.texi.orig:246
msgid ""
"Binary Overwrite mode is a variant of Overwrite mode for editing binary "
"files; it treats newlines and tabs like other characters, so that they "
"overwrite other characters and can be overwritten by them.  In Binary "
"Overwrite mode, digits after @kbd{C-q} specify an octal character code, as "
"usual."
msgstr ""

#. type: itemize
#: modes.texi.orig:250
msgid ""
"Visual Line mode performs ``word wrapping'', causing long lines to be "
"wrapped at word boundaries.  @xref{Visual Line Mode}."
msgstr ""

#. type: Plain text
#: modes.texi.orig:254
msgid "And here are some useful global minor modes:"
msgstr ""

#. type: itemize
#: modes.texi.orig:259
msgid ""
"Column Number mode enables display of the current column number in the mode "
"line.  @xref{Mode Line}."
msgstr ""

#. type: itemize
#: modes.texi.orig:263
msgid ""
"Delete Selection mode causes text insertion to first delete the text in the "
"region, if the region is active.  @xref{Using Region}."
msgstr ""

#. type: itemize
#: modes.texi.orig:267
msgid ""
"Icomplete mode displays an indication of available completions when you are "
"in the minibuffer and completion is active.  @xref{Icomplete}."
msgstr ""

#. type: itemize
#: modes.texi.orig:271
msgid ""
"Line Number mode enables display of the current line number in the mode "
"line.  It is enabled by default.  @xref{Mode Line}."
msgstr ""

#. type: itemize
#: modes.texi.orig:275
msgid ""
"Menu Bar mode gives each frame a menu bar.  It is enabled by default.  "
"@xref{Menu Bars}."
msgstr ""

#. type: itemize
#: modes.texi.orig:280
msgid ""
"Scroll Bar mode gives each window a scroll bar.  It is enabled by default, "
"but the scroll bar is only displayed on graphical terminals.  @xref{Scroll "
"Bars}."
msgstr ""

#. type: itemize
#: modes.texi.orig:285
msgid ""
"Tool Bar mode gives each frame a tool bar.  It is enabled by default, but "
"the tool bar is only displayed on graphical terminals.  @xref{Tool Bars}."
msgstr ""

#. type: itemize
#: modes.texi.orig:290
msgid ""
"Transient Mark mode highlights the region, and makes many Emacs commands "
"operate on the region when the mark is active.  It is enabled by default.  "
"@xref{Mark}."
msgstr ""

#. type: section
#: modes.texi.orig:293
#, no-wrap
msgid "Choosing File Modes"
msgstr ""

#. type: cindex
#: modes.texi.orig:295
#, no-wrap
msgid "choosing a major mode"
msgstr ""

#. type: cindex
#: modes.texi.orig:296
#, no-wrap
msgid "choosing a minor mode"
msgstr ""

#. type: vindex
#: modes.texi.orig:297
#, no-wrap
msgid "auto-mode-alist"
msgstr ""

#. type: Plain text
#: modes.texi.orig:303
msgid ""
"When you visit a file, Emacs chooses a major mode automatically.  Normally, "
"it makes the choice based on the file name---for example, files whose names "
"end in @samp{.c} are normally edited in C mode---but sometimes it chooses "
"the major mode based on special text in the file.  This special text can "
"also be used to enable buffer-local minor modes."
msgstr ""

#. type: Plain text
#: modes.texi.orig:305
msgid "Here is the exact procedure:"
msgstr ""

#. type: Plain text
#: modes.texi.orig:313
msgid ""
"First, Emacs checks whether the file contains file-local mode variables.  "
"@xref{File Variables}.  If there is a file-local variable that specifies a "
"major mode, then Emacs uses that major mode, ignoring all other criteria.  "
"There are several methods to specify a major mode using a file-local "
"variable; the simplest is to put the mode name in the first nonblank line, "
"preceded and followed by @samp{-*-}.  Other text may appear on the line as "
"well.  For example,"
msgstr ""

#. type: example
#: modes.texi.orig:316
#, no-wrap
msgid "; -*-Lisp-*-\n"
msgstr ""

#. type: Plain text
#: modes.texi.orig:321
msgid ""
"tells Emacs to use Lisp mode.  Note how the semicolon is used to make Lisp "
"treat this line as a comment.  You could equivalently write"
msgstr ""

#. type: example
#: modes.texi.orig:324
#, no-wrap
msgid "; -*- mode: Lisp;-*-\n"
msgstr ""

#. type: Plain text
#: modes.texi.orig:330
msgid ""
"You can also use file-local variables to specify buffer-local minor modes, "
"by using @code{eval} specifications.  For example, this first nonblank line "
"puts the buffer in Lisp mode and enables Auto-Fill mode:"
msgstr ""

#. type: example
#: modes.texi.orig:333
#, no-wrap
msgid "; -*- mode: Lisp; eval: (auto-fill-mode 1); -*-\n"
msgstr ""

#. type: Plain text
#: modes.texi.orig:341
msgid ""
"Note, however, that it is usually inappropriate to enable minor modes this "
"way, since most minor modes represent individual user preferences.  If you "
"personally want to use a minor mode for a particular file type, it is better "
"to enable the minor mode via a major mode hook (@pxref{Major Modes})."
msgstr ""

#. type: vindex
#: modes.texi.orig:342
#, no-wrap
msgid "interpreter-mode-alist"
msgstr ""

#. type: Plain text
#: modes.texi.orig:352
msgid ""
"Second, if there is no file variable specifying a major mode, Emacs checks "
"whether the file's contents begin with @samp{#!}.  If so, that indicates "
"that the file can serve as an executable shell command, which works by "
"running an interpreter named on the file's first line (the rest of the file "
"is used as input to the interpreter).  Therefore, Emacs tries to use the "
"interpreter name to choose a mode.  For instance, a file that begins with "
"@samp{#!/usr/bin/perl} is opened in Perl mode.  The variable "
"@code{interpreter-mode-alist} specifies the correspondence between "
"interpreter program names and major modes."
msgstr ""

#. type: Plain text
#: modes.texi.orig:359
msgid ""
"When the first line starts with @samp{#!}, you usually cannot use the "
"@samp{-*-} feature on the first line, because the system would get confused "
"when running the interpreter.  So Emacs looks for @samp{-*-} on the second "
"line in such files as well as on the first line.  The same is true for man "
"pages which start with the magic string @samp{'\\\"} to specify a list of "
"troff preprocessors."
msgstr ""

#. type: vindex
#: modes.texi.orig:360
#, no-wrap
msgid "magic-mode-alist"
msgstr ""

#. type: Plain text
#: modes.texi.orig:367
msgid ""
"Third, Emacs tries to determine the major mode by looking at the text at the "
"start of the buffer, based on the variable @code{magic-mode-alist}.  By "
"default, this variable is @code{nil} (an empty list), so Emacs skips this "
"step; however, you can customize it in your init file (@pxref{Init File}).  "
"The value should be a list of elements of the form"
msgstr ""

#. type: example
#: modes.texi.orig:370 modes.texi.orig:396
#, no-wrap
msgid "(@var{regexp} . @var{mode-function})\n"
msgstr ""

#. type: Plain text
#: modes.texi.orig:377
msgid ""
"where @var{regexp} is a regular expression (@pxref{Regexps}), and "
"@var{mode-function} is a major mode command.  If the text at the beginning "
"of the file matches @var{regexp}, Emacs chooses the major mode specified by "
"@var{mode-function}."
msgstr ""

#. type: Plain text
#: modes.texi.orig:379
msgid "Alternatively, an element of @code{magic-mode-alist} may have the form"
msgstr ""

#. type: example
#: modes.texi.orig:382
#, no-wrap
msgid "(@var{match-function} . @var{mode-function})\n"
msgstr ""

#. type: Plain text
#: modes.texi.orig:388
msgid ""
"where @var{match-function} is a Lisp function that is called at the "
"beginning of the buffer; if the function returns non-@code{nil}, Emacs set "
"the major mode with @var{mode-function}."
msgstr ""

#. type: Plain text
#: modes.texi.orig:393
msgid ""
"Fourth---if Emacs still hasn't found a suitable major mode---it looks at the "
"file's name.  The correspondence between file names and major modes is "
"controlled by the variable @code{auto-mode-alist}.  Its value is a list in "
"which each element has this form,"
msgstr ""

#. type: Plain text
#: modes.texi.orig:400
msgid "or this form,"
msgstr ""

#. type: example
#: modes.texi.orig:403
#, no-wrap
msgid "(@var{regexp} @var{mode-function} @var{flag})\n"
msgstr ""

#. type: Plain text
#: modes.texi.orig:415
msgid ""
"For example, one element normally found in the list has the form "
"@code{(@t{\"\\\\.c\\\\'\"} . c-mode)}, and it is responsible for selecting C "
"mode for files whose names end in @file{.c}.  (Note that @samp{\\\\} is "
"needed in Lisp syntax to include a @samp{\\} in the string, which must be "
"used to suppress the special meaning of @samp{.} in regexps.)  If the "
"element has the form @code{(@var{regexp} @var{mode-function} @var{flag})} "
"and @var{flag} is non-@code{nil}, then after calling @var{mode-function}, "
"Emacs discards the suffix that matched @var{regexp} and searches the list "
"again for another match."
msgstr ""

#. type: vindex
#: modes.texi.orig:416
#, no-wrap
msgid "auto-mode-case-fold"
msgstr ""

#. type: Plain text
#: modes.texi.orig:424
msgid ""
"On GNU/Linux and other systems with case-sensitive file names, Emacs "
"performs a case-sensitive search through @code{auto-mode-alist}; if this "
"search fails, it performs a second case-insensitive search through the "
"alist.  To suppress the second search, change the variable "
"@code{auto-mode-case-fold} to @code{nil}.  On systems with case-insensitive "
"file names, such as Microsoft Windows, Emacs performs a single "
"case-insensitive search through @code{auto-mode-alist}."
msgstr ""

#. type: vindex
#: modes.texi.orig:425
#, no-wrap
msgid "magic-fallback-mode-alist"
msgstr ""

#. type: Plain text
#: modes.texi.orig:433
msgid ""
"Finally, if Emacs @emph{still} hasn't found a major mode to use, it compares "
"the text at the start of the buffer to the variable "
"@code{magic-fallback-mode-alist}.  This variable works like "
"@code{magic-mode-alist}, described above, except that is consulted only "
"after @code{auto-mode-alist}.  By default, @code{magic-fallback-mode-alist} "
"contains forms that check for image files, HTML/XML/SGML files, and "
"PostScript files."
msgstr ""

#. type: findex
#: modes.texi.orig:434
#, no-wrap
msgid "normal-mode"
msgstr ""

#. type: Plain text
#: modes.texi.orig:441
msgid ""
"If you have changed the major mode of a buffer, you can return to the major "
"mode Emacs would have chosen automatically, by typing @kbd{M-x "
"normal-mode}.  This is the same function that @code{find-file} calls to "
"choose the major mode.  It also processes the file's @samp{-*-} line or "
"local variables list (if any).  @xref{File Variables}."
msgstr ""

#. type: vindex
#: modes.texi.orig:442
#, no-wrap
msgid "change-major-mode-with-file-name"
msgstr ""

#. type: Plain text
#: modes.texi.orig:449
msgid ""
"The commands @kbd{C-x C-w} and @code{set-visited-file-name} change to a new "
"major mode if the new file name implies a mode (@pxref{Saving}).  (@kbd{C-x "
"C-s} does this too, if the buffer wasn't visiting a file.)  However, this "
"does not happen if the buffer contents specify a major mode, and certain "
"``special'' major modes do not allow the mode to change.  You can turn off "
"this mode-changing feature by setting "
"@code{change-major-mode-with-file-name} to @code{nil}."
msgstr ""
