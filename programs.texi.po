# Japanese translation of Emacs-24.5 editor manual
# Copyright (C) 2015-2016 Free Software Foundation, Inc.
# This file is distributed under the same license as the Emacs package.
# Ayanokoji Takesi <ayanokoji.takesi@gmail.com>.
#
msgid ""
msgstr ""
"Project-Id-Version: Emacs-24.5\n"
"POT-Creation-Date: 2016-10-01 19:52+0900\n"
"PO-Revision-Date: 2016-10-02 01:25+0900\n"
"Last-Translator: Takeshi Ayanokoji <ayanokoji.takesi@gmail.com>\n"
"Language-Team: Japanese <h1r0p@outlook.jp>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: node
#: original_texis/programs.texi:6
#, no-wrap
msgid "Programs"
msgstr "Programs"

#. type: chapter
#: original_texis/programs.texi:7
#, no-wrap
msgid "Editing Programs"
msgstr "プログラムの編集"

#. type: cindex
#: original_texis/programs.texi:8
#, no-wrap
msgid "Lisp editing"
msgstr "Lisp editing"

#. type: cindex
#: original_texis/programs.texi:9
#, no-wrap
msgid "C editing"
msgstr "C editing"

#. type: cindex
#: original_texis/programs.texi:10
#, no-wrap
msgid "program editing"
msgstr "program editing"

#. type: Plain text
#: original_texis/programs.texi:14
msgid ""
"This chapter describes Emacs features for facilitating editing programs.  "
"Some of the things these features can do are:"
msgstr ""
"このチャプターでは、プログラムの編集を容易にするEmacsの機能を説明します。これ"
"らの機能で行えるいくつかは、以下のようなものです:"

#. type: itemize
#: original_texis/programs.texi:18
msgid "Find or move over top-level definitions (@pxref{Defuns})."
msgstr "トップレベルの定義の検索や移動(@ref{Defuns}を参照してください)。"

#. type: itemize
#: original_texis/programs.texi:21
msgid ""
"Apply the usual indentation conventions of the language (@pxref{Program "
"Indent})."
msgstr ""
"言語の通常のインデント規則の適用(@ref{Program Indent}を参照してください)。"

#. type: itemize
#: original_texis/programs.texi:23
msgid "Balance parentheses (@pxref{Parentheses})."
msgstr "カッコの対応をとります(@ref{Parentheses}を参照してください)。"

#. type: itemize
#: original_texis/programs.texi:25
msgid "Insert, kill or align comments (@pxref{Comments})."
msgstr "コメントの挿入、kill、位置揃え(@ref{Comments}を参照してください)。"

#. type: itemize
#: original_texis/programs.texi:27
msgid "Highlight program syntax (@pxref{Font Lock})."
msgstr "プログラム構文のハイライト(@ref{Font Lock}を参照してください)。"

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:50
#, no-wrap
msgid "Program Modes"
msgstr "Program Modes"

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Major modes for editing programs."
msgstr "プログラムを編集するためのメジャーモード。"

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:135
#, no-wrap
msgid "Defuns"
msgstr "Defuns"

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Commands to operate on major top-level parts of a program."
msgstr "プログラムの主要なトップレベル要素を操作するためのコマンド。"

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:338
#, no-wrap
msgid "Program Indent"
msgstr "Program Indent"

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Adjusting indentation to show the nesting."
msgstr "ネスティングを示すためのインデントの調整。"

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:613
#, no-wrap
msgid "Parentheses"
msgstr "Parentheses"

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Commands that operate on parentheses."
msgstr "カッコを操作するコマンド。"

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:875
#, no-wrap
msgid "Comments"
msgstr "Comments"

#. type: menuentry
#: original_texis/programs.texi:45 original_texis/programs.texi:905
msgid "Inserting, killing, and aligning comments."
msgstr "コメントの挿入、kill、位置揃え。"

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:1102
#, no-wrap
msgid "Documentation"
msgstr "Documentation"

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Getting documentation of functions you plan to call."
msgstr "関数ドキュメントの取得。"

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:1229
#, no-wrap
msgid "Hideshow"
msgstr "Hideshow"

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Displaying blocks selectively."
msgstr "ブロックの選択的な表示。"

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:1300
#, no-wrap
msgid "Symbol Completion"
msgstr "Symbol Completion"

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Completion on symbol names of your program or language."
msgstr "プログラムまたは言語でのシンボルの補完。"

#. type: section
#: original_texis/programs.texi:45 original_texis/programs.texi:1337
#: original_texis/programs.texi:1338
#, no-wrap
msgid "MixedCase Words"
msgstr "MixedCase Words"

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Dealing with identifiersLikeThis."
msgstr "identifiersLikeThisのような識別子の処理。"

#. type: section
#: original_texis/programs.texi:45 original_texis/programs.texi:1368
#: original_texis/programs.texi:1369
#, no-wrap
msgid "Semantic"
msgstr "Semantic"

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Suite of editing tools based on source code parsing."
msgstr "ソースコードのパースにもとづいた編集ツール。"

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:1436
#, no-wrap
msgid "Misc for Programs"
msgstr "Misc for Programs"

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Other Emacs features useful for editing programs."
msgstr "その他、プログラムを編集するための便利なEmacs機能。"

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:1494
#, no-wrap
msgid "C Modes"
msgstr "C Modes"

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Special commands of C, C++, Objective-C, Java, IDL, Pike and AWK modes."
msgstr "C、C++、Objective-C、Java、IDL、Pike、AWKモードの特別なコマンド。"

#. type: section
#: original_texis/programs.texi:45 original_texis/programs.texi:1813
#: original_texis/programs.texi:1814
#, no-wrap
msgid "Asm Mode"
msgstr "Asm Mode"

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Asm mode and its special features."
msgstr "Asmモードと特別な機能。"

#. type: ifnottex
#: original_texis/programs.texi:47
msgid "* Fortran:: Fortran mode and its special features."
msgstr "* Fortran:: Fortranモードと特別な機能。"

#. type: section
#: original_texis/programs.texi:51
#, no-wrap
msgid "Major Modes for Programming Languages"
msgstr "プログラミング言語のためのメジャーモード"

#. type: cindex
#: original_texis/programs.texi:52
#, no-wrap
msgid "modes for programming languages"
msgstr "modes for programming languages"

#. type: Plain text
#: original_texis/programs.texi:62
msgid ""
"Emacs has specialized major modes (@pxref{Major Modes}) for many programming "
"languages.  A programming language mode typically specifies the syntax of "
"expressions, the customary rules for indentation, how to do syntax "
"highlighting for the language, and how to find the beginning or end of a "
"function definition.  It often has features for compiling and debugging "
"programs as well.  The major mode for each language is named after the "
"language; for instance, the major mode for the C programming language is "
"@code{c-mode}."
msgstr ""
"Emacsには、プログラミング言語のために特化した、多くのメジャーモード"
"(@ref{Major Modes}を参照してください)があります。プログラミング言語に関連した"
"モードは通常、式の構文、インデントの慣習的ルール、言語の構文をハイライトする"
"方法、関数定義の開始と終了を検索する方法を指定します。プログラムをコンパイル"
"したり、デバッグするための機能をもつ場合もあります。各言語にたいするメジャー"
"モード名は、言語名により名づけられます。たとえばCプログラミング言語にたいする"
"メジャーモードは、@code{c-mode}です。"

#. type: cindex
#: original_texis/programs.texi:63
#, no-wrap
msgid "Perl mode"
msgstr "Perl mode"

#. type: cindex
#: original_texis/programs.texi:64
#, no-wrap
msgid "Icon mode"
msgstr "Icon mode"

#. type: cindex
#: original_texis/programs.texi:65
#, no-wrap
msgid "Makefile mode"
msgstr "Makefile mode"

#. type: cindex
#: original_texis/programs.texi:66
#, no-wrap
msgid "Tcl mode"
msgstr "Tcl mode"

#. type: cindex
#: original_texis/programs.texi:67
#, no-wrap
msgid "CPerl mode"
msgstr "CPerl mode"

#. type: cindex
#: original_texis/programs.texi:68
#, no-wrap
msgid "DSSSL mode"
msgstr "DSSSL mode"

#. type: cindex
#: original_texis/programs.texi:69
#, no-wrap
msgid "Octave mode"
msgstr "Octave mode"

#. type: cindex
#: original_texis/programs.texi:70
#, no-wrap
msgid "Metafont mode"
msgstr "Metafont mode"

#. type: cindex
#: original_texis/programs.texi:71
#, no-wrap
msgid "Modula2 mode"
msgstr "Modula2 mode"

#. type: cindex
#: original_texis/programs.texi:72
#, no-wrap
msgid "Prolog mode"
msgstr "Prolog mode"

#. type: cindex
#: original_texis/programs.texi:73
#, no-wrap
msgid "Python mode"
msgstr "Python mode"

#. type: cindex
#: original_texis/programs.texi:74
#, no-wrap
msgid "Ruby mode"
msgstr "Ruby mode"

#. type: cindex
#: original_texis/programs.texi:75
#, no-wrap
msgid "Simula mode"
msgstr "Simula mode"

#. type: cindex
#: original_texis/programs.texi:76
#, no-wrap
msgid "VHDL mode"
msgstr "VHDL mode"

#. type: cindex
#: original_texis/programs.texi:77
#, no-wrap
msgid "M4 mode"
msgstr "M4 mode"

#. type: cindex
#: original_texis/programs.texi:78
#, no-wrap
msgid "Shell-script mode"
msgstr "Shell-script mode"

#. type: cindex
#: original_texis/programs.texi:79
#, no-wrap
msgid "OPascal mode"
msgstr "OPascal mode"

#. type: cindex
#: original_texis/programs.texi:80
#, no-wrap
msgid "PostScript mode"
msgstr "PostScript mode"

#. type: cindex
#: original_texis/programs.texi:81
#, no-wrap
msgid "Conf mode"
msgstr "Conf mode"

#. type: cindex
#: original_texis/programs.texi:82
#, no-wrap
msgid "DNS mode"
msgstr "DNS mode"

#. type: cindex
#: original_texis/programs.texi:83
#, no-wrap
msgid "Javascript mode"
msgstr "Javascript mode"

#. type: Plain text
#: original_texis/programs.texi:93
msgid ""
"Emacs has programming language modes for Lisp, Scheme, the Scheme-based "
"DSSSL expression language, Ada, ASM, AWK, C, C++, Fortran, Icon, IDL "
"(CORBA), IDLWAVE, Java, Javascript, Metafont (@TeX{}'s companion for font "
"creation), Modula2, Object Pascal, Objective-C, Octave, Pascal, Perl, Pike, "
"PostScript, Prolog, Python, Ruby, Simula, Tcl, and VHDL@.  An alternative "
"mode for Perl is called CPerl mode.  Modes are also available for the "
"scripting languages of the common GNU and Unix shells, VMS DCL, and MS-DOS/"
"MS-Windows @samp{BAT} files, and for makefiles, DNS master files, and "
"various sorts of configuration files."
msgstr ""
"EmacsにはLisp、Scheme、SchemeベースのDSSSL expression言語、Ada、ASM、AWK、C、"
"C++、Fortran、Icon、IDL(CORBA)、IDLWAVE、Java、Javascript、Metafont(フォント"
"作成のための@TeX{}の仲間)、Modula2、Object Pascal、Objective-C、Octave、"
"Pascal、Perl、Pike、PostScript、Prolog、Python、Ruby、Simula、Tcl、VHDLなどの"
"プログラミング言語のためのモードがあります。Perlのための代替モードはCPerlモー"
"ドと呼ばれます。一般的なGNUおよびUnixシェルのスクリプティング言語、VMS DCL、"
"MS-DOS/MS-Windowsの@samp{BAT}ファイル、makefiles、DNS masterファイル、一連の"
"さまざまな設定ファイルのためのモードも利用可能です。"

#. type: Plain text
#: original_texis/programs.texi:98
msgid ""
"Ideally, Emacs should have a major mode for each programming language that "
"you might want to edit.  If it doesn't have a mode for your favorite "
"language, the mode might be implemented in a package not distributed with "
"Emacs (@pxref{Packages}); or you can contribute one."
msgstr ""
"理想的には、Emacsは編集したいと望むすべてのプログラミング言語のためのメジャー"
"モードをもつべきです。しかし、もしあなたのお気に入りの言語のためのモードがな"
"い場合、それはEmacsとともに配布されないパッケージで実装されているかもしれませ"
"ん(@ref{Packages}を参照してください)。または、あたたが貢献することもできま"
"す。"

#. type: kindex
#: original_texis/programs.texi:99
#, no-wrap
msgid "DEL @r{(programming modes)}"
msgstr "DEL @r{(programming modes)}"

#. type: findex
#: original_texis/programs.texi:100
#, no-wrap
msgid "c-electric-backspace"
msgstr "c-electric-backspace"

#. type: findex
#: original_texis/programs.texi:101
#, no-wrap
msgid "backward-delete-char-untabify"
msgstr "backward-delete-char-untabify"

#. type: Plain text
#: original_texis/programs.texi:110
msgid ""
"In most programming languages, indentation should vary from line to line to "
"illustrate the structure of the program.  Therefore, in most programming "
"language modes, typing @key{TAB} updates the indentation of the current line "
"(@pxref{Program Indent}).  Furthermore, @key{DEL} is usually bound to "
"@code{backward-delete-char-untabify}, which deletes backward treating each "
"tab as if it were the equivalent number of spaces, so that you can delete "
"one column of indentation without worrying whether the whitespace consists "
"of spaces or tabs."
msgstr ""
"ほとんどのプログラミング言語では、インデントはプログラム構造を示すために行ご"
"とに異なります。したがって、ほとんどのプログラミング言語のモードでは、"
"@key{TAB}とタイプすることにより、カレント行のインデントが更新されます"
"(@ref{Program Indent}を参照してください)。さらに@key{DEL}は通常、タブをあたか"
"も等価な数のスペースであるかのように扱って、後方に削除する@code{backward-"
"delete-char-untabify}にバインドされているので、空白文字がスペースなのかタブな"
"のか気にせずに、インデントを1列ずつ削除できます。"

#. type: cindex
#: original_texis/programs.texi:111
#, no-wrap
msgid "mode hook"
msgstr "mode hook"

#. type: vindex
#: original_texis/programs.texi:112
#, no-wrap
msgid "c-mode-hook"
msgstr "c-mode-hook"

#. type: vindex
#: original_texis/programs.texi:113
#, no-wrap
msgid "lisp-mode-hook"
msgstr "lisp-mode-hook"

#. type: vindex
#: original_texis/programs.texi:114
#, no-wrap
msgid "emacs-lisp-mode-hook"
msgstr "emacs-lisp-mode-hook"

#. type: vindex
#: original_texis/programs.texi:115
#, no-wrap
msgid "lisp-interaction-mode-hook"
msgstr "lisp-interaction-mode-hook"

#. type: vindex
#: original_texis/programs.texi:116
#, no-wrap
msgid "scheme-mode-hook"
msgstr "scheme-mode-hook"

#. type: Plain text
#: original_texis/programs.texi:122
msgid ""
"Entering a programming language mode runs the custom Lisp functions "
"specified in the hook variable @code{prog-mode-hook}, followed by those "
"specified in the mode's own mode hook (@pxref{Major Modes}).  For instance, "
"entering C mode runs the hooks @code{prog-mode-hook} and @code{c-mode-"
"hook}.  @xref{Hooks}, for information about hooks."
msgstr ""
"プログラミング言語のモードに入ることにより、フック変数@code{prog-mode-hook}に"
"指定されたカスタムLisp関数と、その後でモード自身のモードフックが実行されます"
"(@ref{Major Modes}を参照してください)。たとえばCモードに入ることにより、"
"@code{prog-mode-hook}と@code{c-mode-hook}が実行されます。フックについての情報"
"は、@ref{Hooks}を参照してください。"

#. type: ifnottex
#: original_texis/programs.texi:128
msgid ""
"Separate manuals are available for the modes for Ada (@pxref{Top,, Ada Mode, "
"ada-mode, Ada Mode}), C/C++/Objective C/Java/Corba IDL/Pike/AWK "
"(@pxref{Top, , CC Mode, ccmode, CC Mode}), and IDLWAVE (@pxref{Top,, "
"IDLWAVE, idlwave, IDLWAVE User Manual})."
msgstr ""
"Adaモード(@ref{Top,, Ada Mode, ada-mode, Ada Mode}を参照してください)、C/C++/"
"Objective C/Java/Corba IDL/Pike/AWKモード(@ref{Top, , CC Mode, ccmode, CC "
"Mode}を参照してください)、IDLWAVEモード(@ref{Top,, IDLWAVE, idlwave, IDLWAVE "
"User Manual}を参照してください)のマニュアルが利用可能です。"

#. type: iftex
#: original_texis/programs.texi:133
msgid ""
"The Emacs distribution contains Info manuals for the major modes for Ada, C/C"
"++/Objective C/Java/Corba IDL/Pike/AWK, and IDLWAVE@.  For Fortran mode, "
"@pxref{Fortran,,, emacs-xtra, Specialized Emacs Features}."
msgstr ""
"EmacsディストリビューションにはAda、C/C++/Objective C/Java/Corba IDL/Pike/"
"AWK、IDLWAVEのためのメジャーモードのInfoマニュアルが含まれています。Fortran"
"モードに関しては、@ref{Fortran,,, emacs-xtra, Specialized Emacs Features}を参"
"照してください。"

#. type: section
#: original_texis/programs.texi:136
#, no-wrap
msgid "Top-Level Definitions, or Defuns"
msgstr "トップレベルの定義、またはdefun"

#. type: Plain text
#: original_texis/programs.texi:141
msgid ""
"In Emacs, a major definition at the top level in the buffer, such as a "
"function, is called a @dfn{defun}.  The name comes from Lisp, but in Emacs "
"we use it for all languages."
msgstr ""
"Emacsでは関数などの、バッファーのトップレベルの主要な定義は、@dfn{defun}と呼"
"ばれます。この名前はLispが由来ですが、Emacsではすべての言語に使用します。"

#. type: node
#: original_texis/programs.texi:148 original_texis/programs.texi:150
#, no-wrap
msgid "Left Margin Paren"
msgstr "Left Margin Paren"

#. type: menuentry
#: original_texis/programs.texi:148
msgid ""
"An open-paren or similar opening delimiter starts a defun if it is at the "
"left margin."
msgstr ""
"開きカッコまたは同様の開始を意味する区切りは、それが左端にある場合はdefunの開"
"始です。"

#. type: subsection
#: original_texis/programs.texi:148 original_texis/programs.texi:206
#: original_texis/programs.texi:207
#, no-wrap
msgid "Moving by Defuns"
msgstr "Moving by Defuns"

#. type: menuentry
#: original_texis/programs.texi:148
msgid "Commands to move over or mark a major definition."
msgstr "主要な定義を移動したりマークするコマンド。"

#. type: subsection
#: original_texis/programs.texi:148 original_texis/programs.texi:267
#: original_texis/programs.texi:268
#, no-wrap
msgid "Imenu"
msgstr "Imenu"

#. type: menuentry
#: original_texis/programs.texi:148
msgid "Making buffer indexes as menus."
msgstr "バッファーのインデックスをメニューにする。"

#. type: node
#: original_texis/programs.texi:148 original_texis/programs.texi:319
#, no-wrap
msgid "Which Function"
msgstr "Which Function"

#. type: menuentry
#: original_texis/programs.texi:148
msgid "Which Function mode shows which function you are in."
msgstr "Which Functionモードはどの関数にいるか表示します。"

#. type: subsection
#: original_texis/programs.texi:151
#, no-wrap
msgid "Left Margin Convention"
msgstr "左端の慣習"

#. type: cindex
#: original_texis/programs.texi:153
#, no-wrap
msgid "open-parenthesis in leftmost column"
msgstr "open-parenthesis in leftmost column"

#. type: cindex
#: original_texis/programs.texi:154
#, no-wrap
msgid "( in leftmost column"
msgstr "( in leftmost column"

#. type: Plain text
#: original_texis/programs.texi:161
msgid ""
"Many programming-language modes assume by default that any opening delimiter "
"found at the left margin is the start of a top-level definition, or defun.  "
"Therefore, @strong{don't put an opening delimiter at the left margin unless "
"it should have that significance}.  For instance, never put an open-"
"parenthesis at the left margin in a Lisp file unless it is the start of a "
"top-level list."
msgstr ""
"プログラミング言語のモードの多くは、デフォルトでは左端で見つかった開始区切り"
"は、トップレベル定義、またはdefunの開始とみなします。したがって、@strong{その"
"ような意味をもたない場合、開始区切りを左端に配してはいけません}。たとえば、そ"
"れがトップレベルのリストの開始でない場合は、Lispファイルの左端に開きカッコを"
"記述しないでください。"

#. type: Plain text
#: original_texis/programs.texi:165
msgid ""
"The convention speeds up many Emacs operations, which would otherwise have "
"to scan back to the beginning of the buffer to analyze the syntax of the "
"code."
msgstr ""
"この慣習に従わない場合、コードの構文を解析するために、バッファーの先頭から再"
"スキャンが必要ですが、慣習に従うことにより、多くのEmacs操作をスピードアップで"
"きます。"

#. type: Plain text
#: original_texis/programs.texi:171
msgid ""
"If you don't follow this convention, not only will you have trouble when you "
"explicitly use the commands for motion by defuns; other features that use "
"them will also give you trouble.  This includes the indentation commands "
"(@pxref{Program Indent}) and Font Lock mode (@pxref{Font Lock})."
msgstr ""
"この慣習にしたがわない場合、defunにより動作するコマンドを明示的に使用する場合"
"にトラブルが起こるだけではありません。これを使用する他の機能もトラブルを起こ"
"すでしょう。これにはインデントコマンド(@ref{Program Indent}を参照してくださ"
"い)と、Font Lockモード(@ref{Font Lock}を参照してください)が含まれます。"

#. type: Plain text
#: original_texis/programs.texi:178
msgid ""
"The most likely problem case is when you want an opening delimiter at the "
"start of a line inside a string.  To avoid trouble, put an escape character "
"(@samp{\\}, in C and Emacs Lisp, @samp{/} in some other Lisp dialects) "
"before the opening delimiter.  This will not affect the contents of the "
"string, but will prevent that opening delimiter from starting a defun.  "
"Here's an example:"
msgstr ""
"同様な問題ケースのほとんどは、文字列リテラルで開始区切りを行の先頭に記述した"
"い場合です。このトラブルを避けるには、開始区切りの前にエスケープ文字(Cおよび"
"Emacs Lispでは@samp{\\}、その他のLisp方言のいくつかは@samp{/})を配します。こ"
"れは文字列の内容には影響を与えませんが、その開始区切りがdefunの開始となるのを"
"防ぎます。以下は例です:"

#. type: example
#: original_texis/programs.texi:183
#, no-wrap
msgid ""
"  (insert \"Foo:\n"
"\\(bar)\n"
"\")\n"
msgstr ""
"  (insert \"Foo:\n"
"\\(bar)\n"
"\")\n"

#. type: Plain text
#: original_texis/programs.texi:188
msgid ""
"To help you catch violations of this convention, Font Lock mode highlights "
"confusing opening delimiters (those that ought to be quoted) in bold red."
msgstr ""
"この慣習を破ったことに気づくには、Font Lockモードが助けになります。Font Lock"
"モードは混乱して、(クォートする必要がある)開始区切りを赤の太字でハイライトす"
"るからです。"

#. type: vindex
#: original_texis/programs.texi:189
#, no-wrap
msgid "open-paren-in-column-0-is-defun-start"
msgstr "open-paren-in-column-0-is-defun-start"

#. type: Plain text
#: original_texis/programs.texi:196
msgid ""
"If you need to override this convention, you can do so by setting the "
"variable @code{open-paren-in-column-0-is-defun-start}.  If this user option "
"is set to @code{t} (the default), opening parentheses or braces at column "
"zero always start defuns.  When it is @code{nil}, defuns are found by "
"searching for parens or braces at the outermost level."
msgstr ""
"この慣習をオーバーライドする必要がある場合、変数@code{open-paren-in-column-0-"
"is-defun-start}をセッティングすることにより、これを行うことができます。この"
"ユーザーオプションが@code{t}(デフォルト)にセットされている場合、列0の開きカッ"
"コまたは大カッコ(braces)は常にdefunの開始となります。@code{nil}の場合、defun"
"は最外レベルのカッコまたは大カッコを検索することにより発見されます。"

#. type: Plain text
#: original_texis/programs.texi:205
msgid ""
"Usually, you should leave this option at its default value of @code{t}.  If "
"your buffer contains parentheses or braces in column zero which don't start "
"defuns, and it is somehow impractical to remove these parentheses or braces, "
"it might be helpful to set the option to @code{nil}.  Be aware that this "
"might make scrolling and display in large buffers quite sluggish.  "
"Furthermore, the parentheses and braces must be correctly matched throughout "
"the buffer for it to work properly."
msgstr ""
"通常は、このオプションをデフォルト値の@code{t}にしておくべきです。バッファー"
"の列0にdefunの開始でないカッコまたは大カッコが含まれていて、これらのカッコま"
"たは大カッコを削除するのが何らかの理由で現実的でない場合、このオプションを"
"@code{nil}にするのが役に立つかもしれません。しかしこれは大きなバッファーのス"
"クロールや、表示の速度を著しく低下させるかもしれないことを知っておいてくださ"
"い。さらに、正しく機能させるために、バッファー全体を通じてカッコまたは大カッ"
"コが、正しく対応が取れていなければなりません。"

#. type: cindex
#: original_texis/programs.texi:208
#, no-wrap
msgid "defuns"
msgstr "defuns"

#. type: Plain text
#: original_texis/programs.texi:212
msgid ""
"These commands move point or set up the region based on top-level major "
"definitions, also called @dfn{defuns}."
msgstr ""
"これらのコマンドはトップレベルの主要な定義、または@dfn{defuns}にもとづいてポ"
"イントを移動したり、リージョンをセットアップします。"

#. type: item
#: original_texis/programs.texi:214 original_texis/programs.texi:225
#: original_texis/programs.texi:1538
#, no-wrap
msgid "C-M-a"
msgstr "C-M-a"

#. type: table
#: original_texis/programs.texi:217
msgid ""
"Move to beginning of current or preceding defun (@code{beginning-of-defun})."
msgstr ""
"カレントまたは直前のdefunの先頭に移動します(@code{beginning-of-defun})。"

#. type: itemx
#: original_texis/programs.texi:217 original_texis/programs.texi:226
#: original_texis/programs.texi:1539
#, no-wrap
msgid "C-M-e"
msgstr "C-M-e"

#. type: table
#: original_texis/programs.texi:219
msgid "Move to end of current or following defun (@code{end-of-defun})."
msgstr "カレントまたは直後のdefunの最後に移動します(@code{end-of-defun})。"

#. type: item
#: original_texis/programs.texi:219 original_texis/programs.texi:227
#: original_texis/programs.texi:1709
#, no-wrap
msgid "C-M-h"
msgstr "C-M-h"

#. type: table
#: original_texis/programs.texi:221
msgid "Put region around whole current or following defun (@code{mark-defun})."
msgstr ""
"カレントまたは後続のdefun全体の周囲にリージョンを設定します(@code{mark-"
"defun})。"

#. type: cindex
#: original_texis/programs.texi:223
#, no-wrap
msgid "move to beginning or end of function"
msgstr "move to beginning or end of function"

#. type: cindex
#: original_texis/programs.texi:224
#, no-wrap
msgid "function, move to beginning or end"
msgstr "function, move to beginning or end"

#. type: findex
#: original_texis/programs.texi:228
#, no-wrap
msgid "beginning-of-defun"
msgstr "beginning-of-defun"

#. type: findex
#: original_texis/programs.texi:229
#, no-wrap
msgid "end-of-defun"
msgstr "end-of-defun"

#. type: findex
#: original_texis/programs.texi:230
#, no-wrap
msgid "mark-defun"
msgstr "mark-defun"

#. type: Plain text
#: original_texis/programs.texi:236
msgid ""
"The commands to move to the beginning and end of the current defun are "
"@kbd{C-M-a} (@code{beginning-of-defun}) and @kbd{C-M-e} (@code{end-of-"
"defun}).  If you repeat one of these commands, or use a positive numeric "
"argument, each repetition moves to the next defun in the direction of motion."
msgstr ""
"カレントのdefunの先頭または最後に移動するコマンドは、@kbd{C-M-a} "
"(@code{beginning-of-defun})と@kbd{C-M-e} (@code{end-of-defun})です。これらの"
"コマンドの1つを繰り返すか、正の数引数を使用すると、繰り返しごとに動作方向の次"
"のdefunに移動します。"

#. type: Plain text
#: original_texis/programs.texi:245
msgid ""
"@kbd{C-M-a} with a negative argument @minus{}@var{n} moves forward @var{n} "
"times to the next beginning of a defun.  This is not exactly the same place "
"that @kbd{C-M-e} with argument @var{n} would move to; the end of this defun "
"is not usually exactly the same place as the beginning of the following "
"defun.  (Whitespace, comments, and perhaps declarations can separate them.)  "
"Likewise, @kbd{C-M-e} with a negative argument moves back to an end of a "
"defun, which is not quite the same as @kbd{C-M-a} with a positive argument."
msgstr ""
"@kbd{C-M-a}で負の引数@minus{}@var{n}を指定すると、次のdefunの開始へと@var{n}"
"回移動します。これは@kbd{C-M-e}に引数@var{n}を与えたときに移動する位置と、正"
"確に同じではありません。defunの終わりは通常、後続のdefunの開始と同じ位置では"
"ないからです(空白文字、コメント、もしかしたら宣言がこれらのdefunを分割するか"
"らです)。同様に@kbd{C-M-e}に負の引数を与えると、defunの最後に後方に移動します"
"が、これは@kbd{C-M-a}に正の引数を与えた場合とは完全に異なる位置になります。"

#. type: kindex
#: original_texis/programs.texi:246
#, no-wrap
msgid "C-M-h @r{(C mode)}"
msgstr "C-M-h @r{(C mode)}"

#. type: findex
#: original_texis/programs.texi:247
#, no-wrap
msgid "c-mark-function"
msgstr "c-mark-function"

#. type: Plain text
#: original_texis/programs.texi:257
msgid ""
"To operate on the current defun, use @kbd{C-M-h} (@code{mark-defun}), which "
"sets the mark at the end of the current defun and puts point at its "
"beginning.  @xref{Marking Objects}.  This is the easiest way to get ready to "
"kill the defun in order to move it to a different place in the file.  If you "
"use the command while point is between defuns, it uses the following defun.  "
"If you use the command while the mark is already active, it sets the mark "
"but does not move point; furthermore, each successive use of @kbd{C-M-h} "
"extends the end of the region to include one more defun."
msgstr ""
"カレントのdefunを操作するには、@kbd{C-M-h} (@code{mark-defun})を使用します。"
"これはカレントのdefunの最後にマークをセットし、先頭にポイントを配します。"
"@ref{Marking Objects}を参照してください。これは、そのdefunをkillしてファイル"
"の他の場所に移動するための、一番簡単な準備方法です。ポイントがdefunの間にある"
"場合、後続のdefunを使用します。マークがすでにアクティブのときにこのコマンドを"
"使用すると、マークはセットしますがポイントは移動しません。さらに、連続して"
"@kbd{C-M-h}を使用するとリージョンの最後が、複数のdefunを含むように拡張されま"
"す。"

#. type: Plain text
#: original_texis/programs.texi:266
msgid ""
"In C mode, @kbd{C-M-h} runs the function @code{c-mark-function}, which is "
"almost the same as @code{mark-defun}; the difference is that it backs up "
"over the argument declarations, function name and returned data type so that "
"the entire C function is inside the region.  This is an example of how major "
"modes adjust the standard key bindings so that they do their standard jobs "
"in a way better fitting a particular language.  Other major modes may "
"replace any or all of these key bindings for that purpose."
msgstr ""
"Cモードでは、@code{mark-defun}とほとんど同じな@code{c-mark-function}を実行し"
"ます。違いは、それが引数定義、関数名、リターンデータ型を含むことで、これによ"
"りC関数全体にリージョンが設定されます。これは標準のキーバインディングをメ"
"ジャーモードが調整する方法の例です。これにより特定の言語によりふさわしい方法"
"で標準的な作業を行うのです。この目的のために、他のメジャーモードは、これらの"
"キーバインディングすべてを置き換えているかもしれません。"

#. type: cindex
#: original_texis/programs.texi:269
#, no-wrap
msgid "index of buffer definitions"
msgstr "index of buffer definitions"

#. type: cindex
#: original_texis/programs.texi:270
#, no-wrap
msgid "buffer definitions index"
msgstr "buffer definitions index"

#. type: Plain text
#: original_texis/programs.texi:277
msgid ""
"The Imenu facility offers a way to find the major definitions in a file by "
"name.  It is also useful in text formatter major modes, where it treats each "
"chapter, section, etc., as a definition.  (@xref{Tags}, for a more powerful "
"feature that handles multiple files together.)"
msgstr ""
"Imenu機能は、ファイル内の主要な定義を、名前で検索する方法を提供します。これは"
"チャプター、セクションなどを扱う、テキストフォーマッターのためのメジャーモー"
"ドでも有用です(複数ファイルを扱う、より強力な機能については、@ref{Tags}を参照"
"してください)。"

#. type: findex
#: original_texis/programs.texi:278
#, no-wrap
msgid "imenu"
msgstr "imenu"

#. type: Plain text
#: original_texis/programs.texi:283
msgid ""
"If you type @kbd{M-x imenu}, it reads the name of a definition using the "
"minibuffer, then moves point to that definition.  You can use completion to "
"specify the name; the command always displays the whole list of valid names."
msgstr ""
"@kbd{M-x imenu}とタイプすると、これはミニバッファーを使用して定義の名前を読み"
"取り、ポイントをその定義に移動します。名前の指定に補完を使用できます。このコ"
"マンドは常に有効な名前の全体のリストを表示します。"

#. type: findex
#: original_texis/programs.texi:284
#, no-wrap
msgid "imenu-add-menubar-index"
msgstr "imenu-add-menubar-index"

#. type: Plain text
#: original_texis/programs.texi:294
msgid ""
"Alternatively, you can bind the command @code{imenu} to a mouse click.  Then "
"it displays mouse menus for you to select a definition name.  You can also "
"add the buffer's index to the menu bar by calling @code{imenu-add-menubar-"
"index}.  If you want to have this menu bar item available for all buffers in "
"a certain major mode, you can do this by adding @code{imenu-add-menubar-"
"index} to its mode hook.  But if you have done that, you will have to wait a "
"little while each time you visit a file in that mode, while Emacs finds all "
"the definitions in that buffer."
msgstr ""
"かわりに、コマンド@code{imenu}をマウスクリックにバインドできます。そうすると"
"定義名を選択するために、マウスメニューが表示されます。@code{imenu-add-"
"menubar-index}を呼び出して、バッファーのインデックスをメニューバーに追加する"
"こともできます。特定のメジャーモードのすべてのバッファーにたいして、このメ"
"ニューバーアイテムを有効にしたい場合、モードフックに@code{imenu-add-menubar-"
"index}を追加して、これを行うことができます。しかし、それを行うことにより、そ"
"のモードでファイルをvisitするたびに、Emacsがそのバッファーのすべての定義を検"
"索する間、待つ必要があります。"

#. type: vindex
#: original_texis/programs.texi:295
#, no-wrap
msgid "imenu-auto-rescan"
msgstr "imenu-auto-rescan"

#. type: Plain text
#: original_texis/programs.texi:302
msgid ""
"When you change the contents of a buffer, if you add or delete definitions, "
"you can update the buffer's index based on the new contents by invoking the "
"@samp{*Rescan*} item in the menu.  Rescanning happens automatically if you "
"set @code{imenu-auto-rescan} to a non-@code{nil} value.  There is no need to "
"rescan because of small changes in the text."
msgstr ""
"バッファーの内容を変更する際、定義の追加や削除をした場合は、メニューの"
"@samp{*Rescan*}アイテムを呼び出すことにより、新しい内容にもとづいてバッファー"
"のインデックスを更新することができます。@code{imenu-auto-rescan}を非"
"@code{nil}値にセットした場合、再スキャンは自動的に発生します。テキストを少量"
"変更しただけの場合、再スキャンは必要ありません。"

#. type: vindex
#: original_texis/programs.texi:303
#, no-wrap
msgid "imenu-sort-function"
msgstr "imenu-sort-function"

#. type: Plain text
#: original_texis/programs.texi:309
msgid ""
"You can customize the way the menus are sorted by setting the variable "
"@code{imenu-sort-function}.  By default, names are ordered as they occur in "
"the buffer; if you want alphabetic sorting, use the symbol @code{imenu--sort-"
"by-name} as the value.  You can also define your own comparison function by "
"writing Lisp code."
msgstr ""
"変数@code{imenu-sort-function}をセットして、メニューがソートされる方法をカス"
"タマイズすることができます。デフォルトでは、名前はバッファーで出現する順に"
"ソートされています。アルファベット順にソートしたいときは、値にシンボル"
"@code{imenu--sort-by-name}を使用します。Lispコードを記述することにより、独自"
"の比較関数を定義することもできます。"

#. type: Plain text
#: original_texis/programs.texi:311
msgid "Imenu provides the information to guide Which Function mode"
msgstr "ImenuはWhich Functionモードに情報を提供します"

#. type: ifnottex
#: original_texis/programs.texi:313
msgid "(@pxref{Which Function})."
msgstr "(@ref{Which Function}を参照してください)。"

#. type: iftex
#: original_texis/programs.texi:316
msgid "(see below)."
msgstr "(以下参照)。"

#. type: Plain text
#: original_texis/programs.texi:318
msgid "The Speedbar can also use it (@pxref{Speedbar})."
msgstr "Speedbarもこれを使用します(@ref{Speedbar}を参照してください)。"

#. type: subsection
#: original_texis/programs.texi:320
#, no-wrap
msgid "Which Function Mode"
msgstr "Which Functionモード"

#. type: cindex
#: original_texis/programs.texi:321
#, no-wrap
msgid "current function name in mode line"
msgstr "current function name in mode line"

#. type: Plain text
#: original_texis/programs.texi:326
msgid ""
"Which Function mode is a global minor mode (@pxref{Minor Modes})  which "
"displays the current function name in the mode line, updating it as you move "
"around in a buffer."
msgstr ""
"Which Function(どの関数)モードは、グローバルなマイナーモード(@ref{Minor "
"Modes}を参照してください)で、これはカレントの関数名をモードラインに表示して、"
"バッファーの移動にしたがってそれを更新します。"

#. type: findex
#: original_texis/programs.texi:327
#, no-wrap
msgid "which-function-mode"
msgstr "which-function-mode"

#. type: vindex
#: original_texis/programs.texi:328
#, no-wrap
msgid "which-func-modes"
msgstr "which-func-modes"

#. type: Plain text
#: original_texis/programs.texi:337
msgid ""
"To either enable or disable Which Function mode, use the command @kbd{M-x "
"which-function-mode}.  Which Function mode is a global minor mode.  By "
"default, it takes effect in all major modes major modes that know how to "
"support it (i.e., all the major modes that support Imenu).  You can restrict "
"it to a specific list of major modes by changing the value of the variable "
"@code{which-func-modes} from @code{t} (which means to support all available "
"major modes) to a list of major mode names."
msgstr ""
"Which Functionモードを有効または無効にするには、コマンド@kbd{M-x which-"
"function-mode}を使用します。Which Functionモードは、グローバルなマイナーモー"
"ドです。デフォルトでは、それをサポートする方法を知っている、すべてのメジャー"
"モード(たとえばImenuをサポートするすべてのメジャーモード)に影響を与えます。変"
"数@code{which-func-modes}の値を@code{t}(これは利用可能なすべてのメジャーモー"
"ドをサポートすることを意味します)から、特定のメジャーモードのリストに変更する"
"ことにより、これを制限することができます。"

#. type: section
#: original_texis/programs.texi:339
#, no-wrap
msgid "Indentation for Programs"
msgstr "プログラムのインデント"

#. type: cindex
#: original_texis/programs.texi:340
#, no-wrap
msgid "indentation for programs"
msgstr "indentation for programs"

#. type: Plain text
#: original_texis/programs.texi:346
msgid ""
"The best way to keep a program properly indented is to use Emacs to reindent "
"it as you change it.  Emacs has commands to indent either a single line, a "
"specified number of lines, or all of the lines inside a single parenthetical "
"grouping."
msgstr ""
"プログラムを正しくインデントされた状態に保つには、何か変更したらEmacsを使って"
"再インデントするのが一番よい方法です。Emacsには1行、指定した数の行、1つのカッ"
"コでグループ化されたすべての行をインデントするコマンドがあります。"

#. type: Plain text
#: original_texis/programs.texi:350
msgid ""
"@xref{Indentation}, for general information about indentation.  This section "
"describes indentation features specific to programming language modes."
msgstr ""
"インデントに間する全般的な情報は、@ref{Indentation}を参照してください。このセ"
"クションでは、プログラミング言語のモードに特有のインデント機能について説明し"
"ます。"

#. type: node
#: original_texis/programs.texi:357 original_texis/programs.texi:363
#, no-wrap
msgid "Basic Indent"
msgstr "Basic Indent"

#. type: menuentry
#: original_texis/programs.texi:357
msgid "Indenting a single line."
msgstr "1行のインデント。"

#. type: node
#: original_texis/programs.texi:357 original_texis/programs.texi:403
#, no-wrap
msgid "Multi-line Indent"
msgstr "Multi-line Indent"

#. type: menuentry
#: original_texis/programs.texi:357
msgid "Commands to reindent many lines at once."
msgstr "複数行を1度に再インデントするコマンド。"

#. type: node
#: original_texis/programs.texi:357 original_texis/programs.texi:458
#, no-wrap
msgid "Lisp Indent"
msgstr "Lisp Indent"

#. type: menuentry
#: original_texis/programs.texi:357
msgid "Specifying how each Lisp function should be indented."
msgstr "Lisp関数がどのようにインデントされるべきか指定する。"

#. type: node
#: original_texis/programs.texi:357 original_texis/programs.texi:493
#, no-wrap
msgid "C Indent"
msgstr "C Indent"

#. type: menuentry
#: original_texis/programs.texi:357
msgid "Extra features for indenting C and related modes."
msgstr "Cおよび関連するモードのインデントのための追加機能。"

#. type: node
#: original_texis/programs.texi:357 original_texis/programs.texi:537
#, no-wrap
msgid "Custom C Indent"
msgstr "Custom C Indent"

#. type: menuentry
#: original_texis/programs.texi:357
msgid "Controlling indentation style for C and related modes."
msgstr "Cおよび関連するモードのインデントスタイルの制御。"

#. type: cindex
#: original_texis/programs.texi:359
#, no-wrap
msgid "pretty-printer"
msgstr "pretty-printer"

#. type: Plain text
#: original_texis/programs.texi:362
msgid ""
"Emacs also provides a Lisp pretty-printer in the @code{pp} package, which "
"reformats Lisp objects with nice-looking indentation."
msgstr ""
"Emacsは@code{pp}パッケージで、Lispのプリティープリンター(pretty-printer)も提"
"供します。これはLispオブジェクトを、見栄えのよいインデントで再フォーマットし"
"ます。"

#. type: subsection
#: original_texis/programs.texi:364
#, no-wrap
msgid "Basic Program Indentation Commands"
msgstr "プログラムの基本的なインデントコマンド"

#. type: key{#1}
#: original_texis/programs.texi:367 original_texis/programs.texi:512
#: original_texis/programs.texi:1822
#, no-wrap
msgid "TAB"
msgstr "TAB"

#. type: table
#: original_texis/programs.texi:369
msgid "Adjust indentation of current line (@code{indent-for-tab-command})."
msgstr "カレント行のインデントを調整します(@code{indent-for-tab-command})。"

#. type: key{#1}
#: original_texis/programs.texi:369
#, no-wrap
msgid "RET"
msgstr "RET"

#. type: table
#: original_texis/programs.texi:372
msgid ""
"Insert a newline, then adjust indentation of following line (@code{newline})."
msgstr "改行を挿入して、次の行のインデントを調整します(@code{newline})。"

#. type: kindex
#: original_texis/programs.texi:374
#, no-wrap
msgid "TAB @r{(programming modes)}"
msgstr "TAB @r{(programming modes)}"

#. type: findex
#: original_texis/programs.texi:375 original_texis/programs.texi:513
#, no-wrap
msgid "c-indent-command"
msgstr "c-indent-command"

#. type: findex
#: original_texis/programs.texi:376
#, no-wrap
msgid "indent-line-function"
msgstr "indent-line-function"

#. type: findex
#: original_texis/programs.texi:377
#, no-wrap
msgid "indent-for-tab-command"
msgstr "indent-for-tab-command"

#. type: Plain text
#: original_texis/programs.texi:384
msgid ""
"The basic indentation command is @key{TAB} (@code{indent-for-tab-command}), "
"which was documented in @ref{Indentation}.  In programming language modes, "
"@key{TAB} indents the current line, based on the indentation and syntactic "
"content of the preceding lines; if the region is active, @key{TAB} indents "
"each line within the region, not just the current line."
msgstr ""
"基本的なインデントコマンドは@key{TAB} (@code{indent-for-tab-command})で、これ"
"は@ref{Indentation}で説明されています。プログラミング言語のモードでは、"
"@key{TAB}は前の行のインデントと構文的な内容にもとづき、カレント行をインデント"
"します。リージョンがアクティブのとき、@key{TAB}はカレント行だけでなく、リー"
"ジョン内の各行をインデントします。"

#. type: Plain text
#: original_texis/programs.texi:388
msgid ""
"The command @key{RET} (@code{newline}), which was documented in "
"@ref{Inserting Text}, does the same as @kbd{C-j} followed by @key{TAB}: it "
"inserts a new line, then adjusts the line's indentation."
msgstr ""
"@ref{Inserting Text}で説明されているコマンド@key{RET} (@code{newline})は、"
"@kbd{C-j}の後に@key{TAB}を続けるのと同じです。これは改行を挿入してから、その"
"行のインデントを調整します。"

#. type: Plain text
#: original_texis/programs.texi:394
msgid ""
"When indenting a line that starts within a parenthetical grouping, Emacs "
"usually places the start of the line under the preceding line within the "
"group, or under the text after the parenthesis.  If you manually give one of "
"these lines a nonstandard indentation (e.g., for aesthetic purposes), the "
"lines below will follow it."
msgstr ""
"カッコによるグループ化により開始される行でインデントする場合、通常Emacsはグ"
"ループ内の前の行の開始、または、カッコの後ろのテキストの下に、行の開始を合わ"
"せます。(たとえば美的観点により)これらの行に手動で非標準的なインデントを与え"
"た場合は、その下の行もそれにしたがいます。"

#. type: Plain text
#: original_texis/programs.texi:402
msgid ""
"The indentation commands for most programming language modes assume that a "
"open-parenthesis, open-brace or other opening delimiter at the left margin "
"is the start of a function.  If the code you are editing violates this "
"assumption---even if the delimiters occur in strings or comments---you must "
"set @code{open-paren-in-column-0-is-defun-start} to @code{nil} for "
"indentation to work properly.  @xref{Left Margin Paren}."
msgstr ""
"プログラミング言語のモードのほとんどは、左端の開きカッコ、開き大カッコ(open-"
"brace)、その他の開始区切りを関数の開始とみなします。編集しているコードがこの"
"前提に違反する場合は --- それらの区切りが文字列やコメントの中にある場合でも "
"--- インデントが正しく機能するために、@code{open-paren-in-column-0-is-defun-"
"start}に@code{nil}をセットしなければなりません。@ref{Left Margin Paren}を参照"
"してください"

#. type: subsection
#: original_texis/programs.texi:404
#, no-wrap
msgid "Indenting Several Lines"
msgstr "複数行のインデント"

#. type: Plain text
#: original_texis/programs.texi:412
msgid ""
"Sometimes, you may want to reindent several lines of code at a time.  One "
"way to do this is to use the mark; when the mark is active and the region is "
"non-empty, @key{TAB} indents every line in the region.  Alternatively, the "
"command @kbd{C-M-\\} (@code{indent-region}) indents every line in the "
"region, whether or not the mark is active (@pxref{Indentation Commands})."
msgstr ""
"複数行のコードを、1度に再インデントしたいときがあるかもしれません。これを行う"
"1つの方法は、マークを使う方法です。マークがアクティブでリージョンが空でないと"
"き、@key{TAB}はリージョン内の各行をインデントします。一方、コマンド@kbd{C-M-"
"\\} (@code{indent-region})は、マークがアクティブか否かにかかわらず、リージョ"
"ン内の各行をインデントします(@ref{Indentation Commands}を参照してください)。"

#. type: Plain text
#: original_texis/programs.texi:415
msgid ""
"In addition, Emacs provides the following commands for indenting large "
"chunks of code:"
msgstr ""
"それらに加えて、Emacsはコードの大きな断片をインデントするために、以下のコマン"
"ドを提供します:"

#. type: item
#: original_texis/programs.texi:417 original_texis/programs.texi:427
#: original_texis/programs.texi:505
#, no-wrap
msgid "C-M-q"
msgstr "C-M-q"

#. type: table
#: original_texis/programs.texi:419
msgid "Reindent all the lines within one parenthetical grouping."
msgstr "カッコでグループ化された、すべての行を再インデントします。"

#. type: item
#: original_texis/programs.texi:419
#, no-wrap
msgid "C-u @key{TAB}"
msgstr "C-u @key{TAB}"

#. type: table
#: original_texis/programs.texi:422
msgid ""
"Shift an entire parenthetical grouping rigidly sideways so that its first "
"line is properly indented."
msgstr ""
"カッコでグループ化されたすべてを横にシフトして、最初の行が正しくインデントさ"
"れるようにします。"

#. type: item
#: original_texis/programs.texi:422
#, no-wrap
msgid "M-x indent-code-rigidly"
msgstr "M-x indent-code-rigidly"

#. type: table
#: original_texis/programs.texi:425
msgid ""
"Shift all the lines in the region rigidly sideways, but do not alter lines "
"that start inside comments and strings."
msgstr ""
"リージョン内のすべての行を横にシフトしますが、コメントや文字列内で開始される"
"行は変更しません。"

#. type: findex
#: original_texis/programs.texi:428
#, no-wrap
msgid "indent-pp-sexp"
msgstr "indent-pp-sexp"

#. type: Plain text
#: original_texis/programs.texi:438
msgid ""
"To reindent the contents of a single parenthetical grouping, position point "
"before the beginning of the grouping and type @kbd{C-M-q}.  This changes the "
"relative indentation within the grouping, without affecting its overall "
"indentation (i.e., the indentation of the line where the grouping starts).  "
"The function that @kbd{C-M-q} runs depends on the major mode; it is "
"@code{indent-pp-sexp} in Lisp mode, @code{c-indent-exp} in C mode, etc.  To "
"correct the overall indentation as well, type @key{TAB} first."
msgstr ""
"1つのカッコでグループ化されたものを再インデントするには、ポイントをグループ化"
"の前に配して、@kbd{C-M-q}とタイプします。これはグループ化されたものの全体的な"
"インデント(たとえばグループ化が開始される行のインデント)は変更せずに、相対的"
"なインデントを変更します。@kbd{C-M-q}で実行される関数は、Lispモードでは"
"@code{indent-pp-sexp}、Cモードでは@code{c-indent-exp}、のようにメジャーモード"
"に依存します。全体的なインデントも同様に訂正したい場合は、最初に@key{TAB}をタ"
"イプします。"

#. type: kindex
#: original_texis/programs.texi:439
#, no-wrap
msgid "C-u TAB"
msgstr "C-u TAB"

#. type: Plain text
#: original_texis/programs.texi:449
msgid ""
"If you like the relative indentation within a grouping but not the "
"indentation of its first line, move point to that first line and type @kbd{C-"
"u @key{TAB}}.  In Lisp, C, and some other major modes, @key{TAB} with a "
"numeric argument reindents the current line as usual, then reindents by the "
"same amount all the lines in the parenthetical grouping starting on the "
"current line.  It is clever, though, and does not alter lines that start "
"inside strings.  Neither does it alter C preprocessor lines when in C mode, "
"but it does reindent any continuation lines that may be attached to them."
msgstr ""
"グループ内の相対的なインデントは好ましいが、それの最初の行のインデントが好ま"
"しくない場合は、その最初の行にポイントを移動して@kbd{C-u @key{TAB}}とタイプし"
"ます。Lisp、C、他のいくつかのメジャーモードでは、数引数を指定した@key{TAB}は"
"通常どおりカレント行をインデントしてから、カレント行で始まる、カッコでグルー"
"プ化されたすべての行を同じ量で再インデントします。このコマンドは巧妙なので、"
"文字列内で開始される行は変更しません。CモードのときはCプリプロセッサー行は変"
"更しませんが、それらにアタッチされた継続行は再インデントします。"

#. type: findex
#: original_texis/programs.texi:450
#, no-wrap
msgid "indent-code-rigidly"
msgstr "indent-code-rigidly"

#. type: Plain text
#: original_texis/programs.texi:457
msgid ""
"The command @kbd{M-x indent-code-rigidly} rigidly shifts all the lines in "
"the region sideways, like @code{indent-rigidly} does (@pxref{Indentation "
"Commands}).  It doesn't alter the indentation of lines that start inside a "
"string, unless the region also starts inside that string.  The prefix arg "
"specifies the number of columns to indent."
msgstr ""
"コマンド@kbd{M-x indent-code-rigidly}は、@code{indent-rigidly}が行うように"
"(@ref{Indentation Commands}を参照してください)、リージョン内のすべての行を厳"
"格(rigidly)にシフトします。このコマンドはリージョンが文字列内で開始される場合"
"を除き、文字列内で開始される行のインデントは変更しません。プレフィクス引数"
"は、インデントする列数です。"

#. type: subsection
#: original_texis/programs.texi:459
#, no-wrap
msgid "Customizing Lisp Indentation"
msgstr "Lispのインデントのカスタマイズ"

#. type: cindex
#: original_texis/programs.texi:460
#, no-wrap
msgid "customizing Lisp indentation"
msgstr "customizing Lisp indentation"

#. type: Plain text
#: original_texis/programs.texi:466
msgid ""
"The indentation pattern for a Lisp expression can depend on the function "
"called by the expression.  For each Lisp function, you can choose among "
"several predefined patterns of indentation, or define an arbitrary one with "
"a Lisp program."
msgstr ""
"Lisp式のインデントパターンは、式により呼ばれる関数によって決定することができ"
"ます。それぞれのLisp関数のために、事前定義された複数のインデントパターンの中"
"から選択するか、Lispプログラムで独自のものを定義できます。"

#. type: Plain text
#: original_texis/programs.texi:472
msgid ""
"The standard pattern of indentation is as follows: the second line of the "
"expression is indented under the first argument, if that is on the same line "
"as the beginning of the expression; otherwise, the second line is indented "
"underneath the function name.  Each following line is indented under the "
"previous line whose nesting depth is the same."
msgstr ""
"標準的なインデントのパターンは以下のとおりです。最初の引数が式の開始行にある"
"場合、式の2行目は最初の引数の下にインデントされます。そうでない場合、2行目は"
"関数名の下にインデントされ、後続の行はネストの深さが同じなら前の行の下にイン"
"デントされます。"

#. type: vindex
#: original_texis/programs.texi:473
#, no-wrap
msgid "lisp-indent-offset"
msgstr "lisp-indent-offset"

#. type: Plain text
#: original_texis/programs.texi:478
msgid ""
"If the variable @code{lisp-indent-offset} is non-@code{nil}, it overrides "
"the usual indentation pattern for the second line of an expression, so that "
"such lines are always indented @code{lisp-indent-offset} more columns than "
"the containing list."
msgstr ""
"変数@code{lisp-indent-offset}が非@code{nil}の場合、これは式の2行目の通常のイ"
"ンデントパターンをオーバーライドするので、常にこれを含むリストより@code{lisp-"
"indent-offset}列余計にインデントされます。"

#. type: vindex
#: original_texis/programs.texi:479
#, no-wrap
msgid "lisp-body-indent"
msgstr "lisp-body-indent"

#. type: Plain text
#: original_texis/programs.texi:485
msgid ""
"Certain functions override the standard pattern.  Functions whose names "
"start with @code{def} treat the second lines as the start of a @dfn{body}, "
"by indenting the second line @code{lisp-body-indent} additional columns "
"beyond the open-parenthesis that starts the expression."
msgstr ""
"特定の関数は、標準のパターンをオーバーライドします。名前が@code{def}で始まる"
"関数は、式の開始の開きカッコより@code{lisp-body-indent}列多く2行目をインデン"
"トすることにより、2行目を@dfn{body}の開始として扱います。"

#. type: cindex
#: original_texis/programs.texi:486
#, no-wrap
msgid "@code{lisp-indent-function} property"
msgstr "@code{lisp-indent-function} property"

#. type: Plain text
#: original_texis/programs.texi:492
msgid ""
"You can override the standard pattern in various ways for individual "
"functions, according to the @code{lisp-indent-function} property of the "
"function name.  This is normally done for macro definitions, using the "
"@code{declare} construct.  @xref{Defining Macros,,, elisp, the Emacs Lisp "
"Reference Manual}."
msgstr ""
"関数名の@code{lisp-indent-function}プロパティーにより、個々の関数の標準パター"
"ンを、さまざまな方法でオーバーライドできます。これは通常@code{declare}構成を"
"使用することにより、マクロ定義のために行われます。@ref{Defining Macros,,, "
"elisp, the Emacs Lisp Reference Manual}を参照してください。"

#. type: subsection
#: original_texis/programs.texi:494
#, no-wrap
msgid "Commands for C Indentation"
msgstr "Cのインデントのためのコマンド"

#. type: Plain text
#: original_texis/programs.texi:497
msgid "Here are special features for indentation in C mode and related modes:"
msgstr "Cおよび関連するモードのインデントのために、特別な機能があります。"

#. type: item
#: original_texis/programs.texi:499
#, no-wrap
msgid "C-c C-q"
msgstr "C-c C-q"

#. type: kindex
#: original_texis/programs.texi:500
#, no-wrap
msgid "C-c C-q @r{(C mode)}"
msgstr "C-c C-q @r{(C mode)}"

#. type: findex
#: original_texis/programs.texi:501
#, no-wrap
msgid "c-indent-defun"
msgstr "c-indent-defun"

#. type: table
#: original_texis/programs.texi:504
msgid ""
"Reindent the current top-level function definition or aggregate type "
"declaration (@code{c-indent-defun})."
msgstr ""
"カレントのトップレベル関数を再インデント、または型定義を統合します(@code{c-"
"indent-defun})。"

#. type: kindex
#: original_texis/programs.texi:506
#, no-wrap
msgid "C-M-q @r{(C mode)}"
msgstr "C-M-q @r{(C mode)}"

#. type: findex
#: original_texis/programs.texi:507
#, no-wrap
msgid "c-indent-exp"
msgstr "c-indent-exp"

#. type: table
#: original_texis/programs.texi:511
msgid ""
"Reindent each line in the balanced expression that follows point (@code{c-"
"indent-exp}).  A prefix argument inhibits warning messages about invalid "
"syntax."
msgstr ""
"ポイントの後ろの、対応が取れた式の中の各行を再インデントします(@code{c-"
"indent-exp})。プレフィクス引数は、無効な構文についての警告メッセージを抑制し"
"ます。"

#. type: table
#: original_texis/programs.texi:516
msgid ""
"Reindent the current line, and/or in some cases insert a tab character "
"(@code{c-indent-command})."
msgstr ""
"カレント行の再インデントおよび／またはタブ文字を挿入する場合もあります"
"(@code{c-indent-command})。"

#. type: vindex
#: original_texis/programs.texi:517
#, no-wrap
msgid "c-tab-always-indent"
msgstr "c-tab-always-indent"

#. type: table
#: original_texis/programs.texi:520
msgid ""
"If @code{c-tab-always-indent} is @code{t}, this command always reindents the "
"current line and does nothing else.  This is the default."
msgstr ""
"@code{c-tab-always-indent}が@code{t}の場合、このコマンドは常にカレント行をイ"
"ンデントし、他には何もしません。これがデフォルトです。"

#. type: table
#: original_texis/programs.texi:525
msgid ""
"If that variable is @code{nil}, this command reindents the current line only "
"if point is at the left margin or in the line's indentation; otherwise, it "
"inserts a tab (or the equivalent number of spaces, if @code{indent-tabs-"
"mode} is @code{nil})."
msgstr ""
"この変数が@code{nil}の場合、このコマンドはポイントが左端か、その行のインデン"
"ト位置にある場合だけ、カレント行を再インデントします。そうでない場合、このコ"
"マンドはタブ(@code{indent-tabs-mode}が@code{nil}の場合は等価な数のスペース)を"
"挿入します。"

#. type: table
#: original_texis/programs.texi:528
msgid ""
"Any other value (not @code{nil} or @code{t}) means always reindent the line, "
"and also insert a tab if within a comment or a string."
msgstr ""
"(@code{nil}でも@code{t}でもない)他の値の場合、常にその行をインデントし、コメ"
"ントか文字列の中の場合は、タブも挿入します。"

#. type: Plain text
#: original_texis/programs.texi:533
msgid ""
"To reindent the whole current buffer, type @kbd{C-x h C-M-\\}.  This first "
"selects the whole buffer as the region, then reindents that region."
msgstr ""
"カレントバッファー全体を再インデントするには、@kbd{C-x h C-M-\\}とタイプしま"
"す。これは最初にバッファー全体をリージョンとして選択し、それからリージョンを"
"再インデントします。"

#. type: Plain text
#: original_texis/programs.texi:536
msgid ""
"To reindent the current block, use @kbd{C-M-u C-M-q}.  This moves to the "
"front of the block and then reindents it all."
msgstr ""
"カレントブロックを再インデントするには、@kbd{C-M-u C-M-q}を使用します。これは"
"ブロックの前に移動してから、ブロックのすべてを再インデントします。"

#. type: subsection
#: original_texis/programs.texi:538
#, no-wrap
msgid "Customizing C Indentation"
msgstr "Cのインデントのカスタマイズ"

#. type: cindex
#: original_texis/programs.texi:539
#, no-wrap
msgid "style (for indentation)"
msgstr "style (for indentation)"

#. type: Plain text
#: original_texis/programs.texi:547
msgid ""
"C mode and related modes use a flexible mechanism for customizing "
"indentation.  C mode indents a source line in two steps: first it classifies "
"the line syntactically according to its contents and context; second, it "
"determines the indentation offset associated by your selected @dfn{style} "
"with the syntactic construct and adds this onto the indentation of the "
"@dfn{anchor statement}."
msgstr ""
"Cモードおよび関連するモードは、インデントをカスタマイズするために柔軟なメカニ"
"ズムを使用します。Cモードはソース行を2ステップでインデントします。最初のス"
"テップは、行の内容とコンテキストに応じて行の構文を分類します。次のステップ"
"で、構文コンストラクトで選択された@dfn{スタイル}により、関連付けられたインデ"
"ントのオフセットを決定して、これを@dfn{アンカーとなる命令文(anchor "
"statement)}のインデントに加えます。"

#. type: item
#: original_texis/programs.texi:549
#, no-wrap
msgid "C-c . @var{style} @key{RET}"
msgstr "C-c . @var{style} @key{RET}"

#. type: table
#: original_texis/programs.texi:551
msgid "Select a predefined style @var{style} (@code{c-set-style})."
msgstr "事前に定義されたスタイル@var{style}を選択します(@code{c-set-style})。"

#. type: Plain text
#: original_texis/programs.texi:563
msgid ""
"A @dfn{style} is a named collection of customizations that can be used in C "
"mode and the related modes.  @ref{Styles,,, ccmode, The CC Mode Manual}, for "
"a complete description.  Emacs comes with several predefined styles, "
"including @code{gnu}, @code{k&r}, @code{bsd}, @code{stroustrup}, "
"@code{linux}, @code{python}, @code{java}, @code{whitesmith}, "
"@code{ellemtel}, and @code{awk}.  Some of these styles are primarily "
"intended for one language, but any of them can be used with any of the "
"languages supported by these modes.  To find out what a style looks like, "
"select it and reindent some code, e.g., by typing @kbd{C-M-q} at the start "
"of a function definition."
msgstr ""
"@dfn{スタイル}とは、Cモードおよび関連するモードで使用できるカスタマイズ用の名"
"前つきコレクションです。完全な説明は、@ref{Styles,,, ccmode, The CC Mode "
"Manual}を参照してください。Emacsには、@code{gnu}、@code{k&r}、@code{bsd}、"
"@code{stroustrup}、@code{linux}、@code{python}、@code{java}、"
"@code{whitesmith}、@code{ellemtel}、@code{awk}を含む、事前に定義されたスタイ"
"ルがいくつか付属します。これらのスタイルのうちいくつかは、主に1つの言語を意図"
"したものですが、他のスタイルはこれらのモードをサポートする任意の言語で使用で"
"きます。スタイルがどのように見えるかは、何らかのコードにたいしてスタイルを選"
"択して、(たとえば関数定義の最初で@kbd{C-M-q}とタイプして)再インデントしてみる"
"ことです。"

#. type: kindex
#: original_texis/programs.texi:564
#, no-wrap
msgid "C-c . @r{(C mode)}"
msgstr "C-c . @r{(C mode)}"

#. type: findex
#: original_texis/programs.texi:565
#, no-wrap
msgid "c-set-style"
msgstr "c-set-style"

#. type: Plain text
#: original_texis/programs.texi:572
msgid ""
"To choose a style for the current buffer, use the command @w{@kbd{C-c .}}.  "
"Specify a style name as an argument (case is not significant).  This command "
"affects the current buffer only, and it affects only future invocations of "
"the indentation commands; it does not reindent the code already in the "
"buffer.  To reindent the whole buffer in the new style, you can type @kbd{C-"
"x h C-M-\\}."
msgstr ""
"カレントバッファーのスタイルを選択するには、コマンド@w{@kbd{C-c .}}を使用しま"
"す。引数として、スタイル名を指定します(大文字小文字に意味はありません)。この"
"コマンドはカレントバッファーだけに影響し、将来のインデントコマンドの呼び出し"
"だけに影響します。そのバッファーにすでにあるコードの再インデントはしません。"
"バッファー全体を新しいスタイルで再インデントするには、@kbd{C-x h C-M-\\}とタ"
"イプしてください。"

#. type: vindex
#: original_texis/programs.texi:573
#, no-wrap
msgid "c-default-style"
msgstr "c-default-style"

#. type: Plain text
#: original_texis/programs.texi:579
msgid ""
"You can also set the variable @code{c-default-style} to specify the default "
"style for various major modes.  Its value should be either the style's name "
"(a string) or an alist, in which each element specifies one major mode and "
"which indentation style to use for it.  For example,"
msgstr ""
"変数@code{c-default-style}をセットして、さまざまなメジャーモードにたいしてデ"
"フォルトのスタイルを指定できます。この値は、スタイル名(文字列)、または各要素"
"が1つのメジャーモードと、それに使用するインデントスタイルを指定するalistで"
"す。たとえば、"

#. type: example
#: original_texis/programs.texi:585
#, no-wrap
msgid ""
"(setq c-default-style\n"
"      '((java-mode . \"java\")\n"
"        (awk-mode . \"awk\")\n"
"        (other . \"gnu\")))\n"
msgstr ""
"(setq c-default-style\n"
"      '((java-mode . \"java\")\n"
"        (awk-mode . \"awk\")\n"
"        (other . \"gnu\")))\n"

#. type: Plain text
#: original_texis/programs.texi:594
msgid ""
"specifies explicit choices for Java and AWK modes, and the default "
"@samp{gnu} style for the other C-like modes.  (These settings are actually "
"the defaults.)  This variable takes effect when you select one of the C-like "
"major modes; thus, if you specify a new default style for Java mode, you can "
"make it take effect in an existing Java mode buffer by typing @kbd{M-x java-"
"mode} there."
msgstr ""
"これはJavaモード、AWKモードにたいして明示的に選択して、その他のC-likeなモード"
"にたいしては、デフォルトの@samp{gnu}スタイルを指定します。この変数はC-likeな"
"メジャーモードを選択したときに効果を表します。したがってJavaモードにたいして"
"新しいデフォルトスタイルを指定するには、既存のJavaモードのバッファーで、"
"@kbd{M-x java-mode}とタイプすることにより効果が表れます。"

#. type: Plain text
#: original_texis/programs.texi:598
msgid ""
"The @code{gnu} style specifies the formatting recommended by the GNU Project "
"for C; it is the default, so as to encourage use of our recommended style."
msgstr ""
"@code{gnu}スタイルは、CにたいするGNUプロジェクトで推奨されるフォーマットを指"
"定します。これがデフォルトで、私たちが使用を推奨するスタイルです。"

#. type: Plain text
#: original_texis/programs.texi:604
msgid ""
"@xref{Indentation Engine Basics,,, ccmode, the CC Mode Manual}, and "
"@ref{Customizing Indentation,,, ccmode, the CC Mode Manual}, for more "
"information on customizing indentation for C and related modes, including "
"how to override parts of an existing style and how to define your own styles."
msgstr ""
"既存のスタイルのオーバーライドや、独自のスタイルを定義する方法など、Cおよび関"
"連するモードにたいするインデントのカスタマイズに間する情報は、"
"@ref{Indentation Engine Basics,,, ccmode, the CC Mode Manual}、および"
"@ref{Customizing Indentation,,, ccmode, the CC Mode Manual}を参照してくださ"
"い。"

#. type: findex
#: original_texis/programs.texi:605
#, no-wrap
msgid "c-guess"
msgstr "c-guess"

#. type: findex
#: original_texis/programs.texi:606
#, no-wrap
msgid "c-guess-install"
msgstr "c-guess-install"

#. type: Plain text
#: original_texis/programs.texi:612
msgid ""
"As an alternative to specifying a style, you can tell Emacs to guess a style "
"by typing @kbd{M-x c-guess} in a sample code buffer.  You can then apply the "
"guessed style to other buffers with @kbd{M-x c-guess-install}.  "
"@xref{Guessing the Style,,, ccmode, the CC Mode Manual}, for details."
msgstr ""
"スタイルを指定するかわりに、サンプルコードのバッファーで@kbd{M-x c-guess}とタ"
"イプすることにより、Emacsにスタイルを推測させることができます。その後、"
"@kbd{M-x c-guess-install}として、推測されたスタイルを他のバッファーに適用でき"
"ます。詳細については、@ref{Guessing the Style,,, ccmode, the CC Mode Manual}"
"を参照してください。"

#. type: section
#: original_texis/programs.texi:614
#, no-wrap
msgid "Commands for Editing with Parentheses"
msgstr "カッコに付随する編集のためのコマンド"

#. type: findex
#: original_texis/programs.texi:616
#, no-wrap
msgid "check-parens"
msgstr "check-parens"

#. type: cindex
#: original_texis/programs.texi:617
#, no-wrap
msgid "unbalanced parentheses and quotes"
msgstr "unbalanced parentheses and quotes"

#. type: Plain text
#: original_texis/programs.texi:621
msgid ""
"This section describes the commands and features that take advantage of the "
"parenthesis structure in a program, or help you keep it balanced."
msgstr ""
"このセクションでは、プログラム内のカッコ構造を活用したり、それらを対応が取れ"
"た状態に保つためのコマンドと機能について説明します。"

#. type: Plain text
#: original_texis/programs.texi:628
msgid ""
"When talking about these facilities, the term ``parenthesis'' also includes "
"braces, brackets, or whatever delimiters are defined to match in pairs.  The "
"major mode controls which delimiters are significant, through the syntax "
"table (@pxref{Syntax Tables,, Syntax Tables, elisp, The Emacs Lisp Reference "
"Manual}).  In Lisp, only parentheses count; in C, these commands apply to "
"braces and brackets too."
msgstr ""
"これらの機能を語るとき、用語``カッコ(parenthesis)''には、大カッコ(braces)、角"
"カッコ(brackets)、またはマッチするペアとして定義される区切りも含まれます。メ"
"ジャーモードはどの区切りに意味があるかを、構文テーブル(syntax table)を通じて"
"制御します(@ref{Syntax Tables,, Syntax Tables, elisp, The Emacs Lisp "
"Reference Manual}を参照してください)。Lispでは丸カッコ(parentheses)だけが考慮"
"され、Cではこれらのコマンドは大カッコや角カッコにも適用されます。"

#. type: Plain text
#: original_texis/programs.texi:631
msgid ""
"You can use @kbd{M-x check-parens} to find any unbalanced parentheses and "
"unbalanced string quotes in the buffer."
msgstr ""
"@kbd{M-x check-parens}を使用して、バッファー内の対応の取れていないカッコと、"
"対応が取れていない文字列のクォートを検索することができます。"

#. type: node
#: original_texis/programs.texi:637 original_texis/programs.texi:639
#, no-wrap
msgid "Expressions"
msgstr "Expressions"

#. type: menuentry
#: original_texis/programs.texi:637
msgid "Expressions with balanced parentheses."
msgstr "対応が取れたカッコの式。"

#. type: node
#: original_texis/programs.texi:637 original_texis/programs.texi:733
#, no-wrap
msgid "Moving by Parens"
msgstr "Moving by Parens"

#. type: menuentry
#: original_texis/programs.texi:637
msgid ""
"Commands for moving up, down and across in the structure of parentheses."
msgstr "カッコ構造を上、下、横断して移動するコマンド。"

#. type: node
#: original_texis/programs.texi:637 original_texis/programs.texi:790
#, no-wrap
msgid "Matching"
msgstr "Matching"

#. type: menuentry
#: original_texis/programs.texi:637
msgid "Insertion of a close-delimiter flashes matching open."
msgstr "終了区切りの挿入による、マッチする開始区切りのフラッシュ表示。"

#. type: subsection
#: original_texis/programs.texi:640
#, no-wrap
msgid "Expressions with Balanced Parentheses"
msgstr "対応が取れたカッコの式"

#. type: cindex
#: original_texis/programs.texi:642
#, no-wrap
msgid "sexp"
msgstr "sexp"

#. type: cindex
#: original_texis/programs.texi:643
#, no-wrap
msgid "expression"
msgstr "expression"

#. type: cindex
#: original_texis/programs.texi:644
#, no-wrap
msgid "balanced expression"
msgstr "balanced expression"

#. type: Plain text
#: original_texis/programs.texi:652
msgid ""
"Each programming language mode has its own definition of a @dfn{balanced "
"expression}.  Balanced expressions typically include individual symbols, "
"numbers, and string constants, as well as pieces of code enclosed in a "
"matching pair of delimiters.  The following commands deal with balanced "
"expressions (in Emacs, such expressions are referred to internally as "
"@dfn{sexps}@footnote{The word ``sexp'' is used to refer to an expression in "
"Lisp.})."
msgstr ""
"プログラミング言語のモードはそれぞれ、@dfn{対応が取れた式(balanced "
"expression)}にたいする、独自の定義をもちます。対応が取れた式は通常、個別のシ"
"ンボル、数字、文字列定数、同様にマッチする区切りで囲まれたコードの断片を含み"
"ます。以下のコマンドは対応が取れた式にたいするものです(Emacsでは、内部的にそ"
"のような式は@dfn{sexp}として参照されます@footnote{単語``sexp''はLispで式を参"
"照するのに使用されます。})。"

#. type: kindex
#: original_texis/programs.texi:654 original_texis/programs.texi:667
#, no-wrap
msgid "C-M-f"
msgstr "C-M-f"

#. type: table
#: original_texis/programs.texi:656
msgid "Move forward over a balanced expression (@code{forward-sexp})."
msgstr "対応が取れた式を、前方に飛び越して移動します(@code{forward-sexp})。"

#. type: kindex
#: original_texis/programs.texi:656 original_texis/programs.texi:668
#, no-wrap
msgid "C-M-b"
msgstr "C-M-b"

#. type: table
#: original_texis/programs.texi:658
msgid "Move backward over a balanced expression (@code{backward-sexp})."
msgstr "対応が取れた式を、後方に飛び越して移動します(@code{backward-sexp})。"

#. type: kindex
#: original_texis/programs.texi:658 original_texis/programs.texi:693
#, no-wrap
msgid "C-M-k"
msgstr "C-M-k"

#. type: table
#: original_texis/programs.texi:660
msgid "Kill balanced expression forward (@code{kill-sexp})."
msgstr "対応が取れた式を、前方にkillします(@code{kill-sexp})。"

#. type: kindex
#: original_texis/programs.texi:660 original_texis/programs.texi:700
#, no-wrap
msgid "C-M-t"
msgstr "C-M-t"

#. type: table
#: original_texis/programs.texi:662
msgid "Transpose expressions (@code{transpose-sexps})."
msgstr "式を入れ替えます(@code{transpose-sexps})。"

#. type: kindex
#: original_texis/programs.texi:662 original_texis/programs.texi:711
#, no-wrap
msgid "C-M-@@"
msgstr "C-M-@@"

#. type: kindex
#: original_texis/programs.texi:663 original_texis/programs.texi:712
#, no-wrap
msgid "C-M-@key{SPC}"
msgstr "C-M-@key{SPC}"

#. type: table
#: original_texis/programs.texi:665
msgid "Put mark after following expression (@code{mark-sexp})."
msgstr "後続の式の後ろに、マークを配します(@code{mark-sexp})。"

#. type: findex
#: original_texis/programs.texi:669
#, no-wrap
msgid "forward-sexp"
msgstr "forward-sexp"

#. type: findex
#: original_texis/programs.texi:670
#, no-wrap
msgid "backward-sexp"
msgstr "backward-sexp"

#. type: Plain text
#: original_texis/programs.texi:677
msgid ""
"To move forward over a balanced expression, use @kbd{C-M-f} (@code{forward-"
"sexp}).  If the first significant character after point is an opening "
"delimiter (e.g., @samp{(}, @samp{[} or @samp{@{} in C), this command moves "
"past the matching closing delimiter.  If the character begins a symbol, "
"string, or number, the command moves over that."
msgstr ""
"対応が取れた式を前方に飛び越して移動するには、@kbd{C-M-f} (@code{forward-"
"sexp})を使用します。ポイントの後ろの最初の文字が開始区切り(たとえばCでは"
"@samp{(}、@samp{[}、@samp{@{})の場合、このコマンドはそれにマッチする終了区切"
"りまで移動します。文字がシンボル、文字列、数字で始まる場合、このコマンドはそ"
"れらを飛び越して移動します。"

#. type: Plain text
#: original_texis/programs.texi:683
msgid ""
"The command @kbd{C-M-b} (@code{backward-sexp}) moves backward over a "
"balanced expression---like @kbd{C-M-f}, but in the reverse direction.  If "
"the expression is preceded by any prefix characters (single-quote, backquote "
"and comma, in Lisp), the command moves back over them as well."
msgstr ""
"コマンド@kbd{C-M-b} (@code{backward-sexp})は対応が取れた式を後方 --- @kbd{C-"
"M-f}と同様ですが逆向き --- に飛び越して移動します。式の前にプレフィクス文字が"
"ある場合(Lispではシングルクォート、バッククォート、カンマ)、このコマンドはそ"
"れらも同様に飛び越して後方に移動します。"

#. type: Plain text
#: original_texis/programs.texi:691
msgid ""
"@kbd{C-M-f} or @kbd{C-M-b} with an argument repeats that operation the "
"specified number of times; with a negative argument means to move in the "
"opposite direction.  In most modes, these two commands move across comments "
"as if they were whitespace.  Note that their keys, @kbd{C-M-f} and @kbd{C-M-"
"b}, are analogous to @kbd{C-f} and @kbd{C-b}, which move by characters "
"(@pxref{Moving Point}), and @kbd{M-f} and @kbd{M-b}, which move by words "
"(@pxref{Words})."
msgstr ""
"@kbd{C-M-f}および@kbd{C-M-b}に数引数を与えると、指定した回数繰り返し操作をし"
"ます。負の引数を与えると、反対の方向に移動します。ほとんどのモードでは、これ"
"らの2つのコマンドはコメントをあたかも空白文字のように通過します。これら"
"@kbd{C-M-f}および@kbd{C-M-b}のキーは、文字単位で移動する@kbd{C-f}および"
"@kbd{C-b}(@ref{Moving Point}を参照してください)、単語単位に移動する@kbd{M-f}"
"および@kbd{M-b}(@ref{Words}を参照してください)に類似していることに注意してく"
"ださい。"

#. type: cindex
#: original_texis/programs.texi:692
#, no-wrap
msgid "killing expressions"
msgstr "killing expressions"

#. type: findex
#: original_texis/programs.texi:694
#, no-wrap
msgid "kill-sexp"
msgstr "kill-sexp"

#. type: Plain text
#: original_texis/programs.texi:698
msgid ""
"To kill a whole balanced expression, type @kbd{C-M-k} (@code{kill-sexp}).  "
"This kills the text that @kbd{C-M-f} would move over."
msgstr ""
"対応が取れた式全体をkillするには、@kbd{C-M-k} (@code{kill-sexp})とタイプしま"
"す。これは@kbd{C-M-f}が飛び越すテキストをkillします。"

#. type: cindex
#: original_texis/programs.texi:699
#, no-wrap
msgid "transposition of expressions"
msgstr "transposition of expressions"

#. type: findex
#: original_texis/programs.texi:701
#, no-wrap
msgid "transpose-sexps"
msgstr "transpose-sexps"

#. type: Plain text
#: original_texis/programs.texi:710
msgid ""
"@kbd{C-M-t} (@code{transpose-sexps}) switches the positions of the previous "
"balanced expression and the next one.  It is analogous to the @kbd{C-t} "
"command, which transposes characters (@pxref{Transpose}).  An argument to "
"@kbd{C-M-t} serves as a repeat count, moving the previous expression over "
"that many following ones.  A negative argument moves the previous balanced "
"expression backwards across those before it.  An argument of zero, rather "
"than doing nothing, transposes the balanced expressions ending at or after "
"point and the mark."
msgstr ""
"@kbd{C-M-t} (@code{transpose-sexps})は、前にある対応の取れた式と、次の対応の"
"取れた式の位置をスイッチします。このコマンドは、文字を入れ替える@kbd{C-t}コマ"
"ンド(@ref{Transpose}を参照してください)と類似しています。@kbd{C-M-t}への引数"
"は繰り返し回数を意味し、前の式を、何個か先の式に移動します。負の引数は前にあ"
"る対応が取れた式を後方に、それらの式の前に移動します。引数0は何もしないのでは"
"なく、ポイントの位置で終わる対応が取れた式、またはポイントの後ろの式と、マー"
"クの後ろの式を入れ替えます。"

#. type: findex
#: original_texis/programs.texi:713
#, no-wrap
msgid "mark-sexp"
msgstr "mark-sexp"

#. type: Plain text
#: original_texis/programs.texi:723
msgid ""
"To operate on balanced expressions with a command which acts on the region, "
"type @kbd{C-M-@key{SPC}} (@code{mark-sexp}).  This sets the mark where "
"@kbd{C-M-f} would move to.  While the mark is active, each successive call "
"to this command extends the region by shifting the mark by one expression.  "
"Positive or negative numeric arguments move the mark forward or backward by "
"the specified number of expressions.  The alias @kbd{C-M-@@} is equivalent "
"to @kbd{C-M-@key{SPC}}.  @xref{Marking Objects}, for more information about "
"this and related commands."
msgstr ""
"リージョンにたいして動作するコマンドで対応が取れた式を操作するには、@kbd{C-M-"
"@key{SPC}} (@code{mark-sexp})とタイプします。これは@kbd{C-M-f}が移動する位置"
"にマークをセットします。マークがアクティブの間、このコマンドを連続で呼び出す"
"とマークが1つの式ごとにシフトしてリージョンが拡張します。正または負の引数は"
"マークを前方または後方に指定した数の式分のマークを移動します。エイリアス"
"@kbd{C-M-@@}は、@kbd{C-M-@key{SPC}}と等価です。これに関連したコマンドは、"
"@ref{Marking Objects}を参照してください。"

#. type: Plain text
#: original_texis/programs.texi:732
msgid ""
"In languages that use infix operators, such as C, it is not possible to "
"recognize all balanced expressions because there can be multiple "
"possibilities at a given position.  For example, C mode does not treat "
"@samp{foo + bar} as a single expression, even though it @emph{is} one C "
"expression; instead, it recognizes @samp{foo} as one expression and "
"@samp{bar} as another, with the @samp{+} as punctuation between them.  "
"However, C mode recognizes @samp{(foo + bar)} as a single expression, "
"because of the parentheses."
msgstr ""
"Cのように挿入オペレーター(infix operators)を使用する言語では、与えられた位置"
"で複数の可能な解釈があるので、すべての対応が取れた式を認識するのは不可能で"
"す。たとえば@samp{foo + bar}は1つのCの式ですが、Cモードはこれを1つの式とは扱"
"いません。かわりに@samp{foo}を1つの式、@samp{bar}をもう1つの式、そしてそれら"
"の間にある@samp{+}を句読点として認識します。しかしカッコがあればCモードは"
"@samp{(foo + bar)}を1つの式として認識します。"

#. type: subsection
#: original_texis/programs.texi:734
#, no-wrap
msgid "Moving in the Parenthesis Structure"
msgstr "カッコ構造の移動"

#. type: cindex
#: original_texis/programs.texi:736
#, no-wrap
msgid "parenthetical groupings"
msgstr "parenthetical groupings"

#. type: cindex
#: original_texis/programs.texi:737
#, no-wrap
msgid "parentheses, moving across"
msgstr "parentheses, moving across"

#. type: cindex
#: original_texis/programs.texi:738
#, no-wrap
msgid "matching parenthesis and braces, moving to"
msgstr "matching parenthesis and braces, moving to"

#. type: cindex
#: original_texis/programs.texi:739
#, no-wrap
msgid "braces, moving across"
msgstr "braces, moving across"

#. type: cindex
#: original_texis/programs.texi:740
#, no-wrap
msgid "list commands"
msgstr "list commands"

#. type: Plain text
#: original_texis/programs.texi:750
msgid ""
"The following commands move over groupings delimited by parentheses (or "
"whatever else serves as delimiters in the language you are working with).  "
"They ignore strings and comments, including any parentheses within them, and "
"also ignore parentheses that are ``quoted'' with an escape character.  These "
"commands are mainly intended for editing programs, but can be useful for "
"editing any text containing parentheses.  They are referred to internally as "
"``list'' commands because in Lisp these groupings are lists."
msgstr ""
"以下のコマンドはカッコ(または、あなたが使用している言語で、そのような区切りと"
"して使用される文字)で区切られてグループ化されたものを移動するコマンドです。こ"
"れらのコマンドは、カッコを含んでいたとしても文字列とコメントを無視し、エス"
"ケープ文字で``クォート''されたカッコも無視します。これらのコマンドは主にプロ"
"グラムの編集を意図していますが、カッコを含む任意のテキストの編集にも有用で"
"す。これらは内部的には``リスト''コマンドとして参照されます。なぜならLispでは"
"これらのグループはリストだからです。"

#. type: Plain text
#: original_texis/programs.texi:754
msgid ""
"These commands assume that the starting point is not inside a string or a "
"comment.  If you invoke them from inside a string or comment, the results "
"are unreliable."
msgstr ""
"これらのコマンドは、開始ポイントが文字列やコメントの中でないと仮定します。こ"
"れらのコマンドを文字列やコメントの中から呼び出したとき、結果は信頼できませ"
"ん。"

#. type: kindex
#: original_texis/programs.texi:756 original_texis/programs.texi:766
#, no-wrap
msgid "C-M-n"
msgstr "C-M-n"

#. type: table
#: original_texis/programs.texi:758
msgid "Move forward over a parenthetical group (@code{forward-list})."
msgstr ""
"カッコでグループ化されたグループを飛び越えて、前方に移動します(@code{forward-"
"list})。"

#. type: kindex
#: original_texis/programs.texi:758 original_texis/programs.texi:767
#, no-wrap
msgid "C-M-p"
msgstr "C-M-p"

#. type: table
#: original_texis/programs.texi:760
msgid "Move backward over a parenthetical group (@code{backward-list})."
msgstr ""
"カッコでグループ化されたグループを飛び越えて、後方に移動します"
"(@code{backward-list})。"

#. type: kindex
#: original_texis/programs.texi:760 original_texis/programs.texi:774
#, no-wrap
msgid "C-M-u"
msgstr "C-M-u"

#. type: table
#: original_texis/programs.texi:762
msgid "Move up in parenthesis structure (@code{backward-up-list})."
msgstr "カッコによる構造を上に移動します(@code{backward-up-list})。"

#. type: kindex
#: original_texis/programs.texi:762 original_texis/programs.texi:783
#, no-wrap
msgid "C-M-d"
msgstr "C-M-d"

#. type: table
#: original_texis/programs.texi:764
msgid "Move down in parenthesis structure (@code{down-list})."
msgstr "カッコによる構造を下に移動します(@code{down-list})。"

#. type: findex
#: original_texis/programs.texi:768
#, no-wrap
msgid "forward-list"
msgstr "forward-list"

#. type: findex
#: original_texis/programs.texi:769
#, no-wrap
msgid "backward-list"
msgstr "backward-list"

#. type: Plain text
#: original_texis/programs.texi:773
msgid ""
"The ``list'' commands @kbd{C-M-n} (@code{forward-list}) and @kbd{C-M-p} "
"(@code{backward-list}) move forward or backward over one (or @var{n}) "
"parenthetical groupings."
msgstr ""
"``リスト(list)''コマンドの@kbd{C-M-n} (@code{forward-list})と@kbd{C-M-p} "
"(@code{backward-list})は、グループ化されたカッコを前方または後方に、1つ(また"
"は@var{n}個)飛び越えて移動します。"

#. type: findex
#: original_texis/programs.texi:775
#, no-wrap
msgid "backward-up-list"
msgstr "backward-up-list"

#. type: Plain text
#: original_texis/programs.texi:782
msgid ""
"@kbd{C-M-n} and @kbd{C-M-p} try to stay at the same level in the parenthesis "
"structure.  To move @emph{up} one (or @var{n}) levels, use @kbd{C-M-u} "
"(@code{backward-up-list}).  @kbd{C-M-u} moves backward up past one unmatched "
"opening delimiter.  A positive argument serves as a repeat count; a negative "
"argument reverses the direction of motion, so that the command moves forward "
"and up one or more levels."
msgstr ""
"@kbd{C-M-n}と@kbd{C-M-p}は、カッコによる構造において同じレベルに留まろうと試"
"みます。1レベル(または@var{n}レベル)@emph{上}に移動するには、@kbd{C-M-u} "
"(@code{backward-up-list})を使用します。@kbd{C-M-u}は対応が取れていない、前に"
"ある開始区切りへ、後方に移動します。正の引数は繰り返し回数を意味します。負の"
"引数は移動の方向を逆転するので、このコマンドは1レベル以上を上に、前方に移動し"
"ます。"

#. type: findex
#: original_texis/programs.texi:784
#, no-wrap
msgid "down-list"
msgstr "down-list"

#. type: Plain text
#: original_texis/programs.texi:789
msgid ""
"To move @emph{down} in the parenthesis structure, use @kbd{C-M-d} "
"(@code{down-list}).  In Lisp mode, where @samp{(} is the only opening "
"delimiter, this is nearly the same as searching for a @samp{(}.  An argument "
"specifies the number of levels to go down."
msgstr ""
"カッコによる構造を@emph{下}に移動するには、@kbd{C-M-d} (@code{down-list})を使"
"用します。Lispモードでは@samp{(}は開始区切りなので、これは@samp{(}を検索する"
"のとほとんど同じです。引数は何レベルしたに移動するかを指定します。"

#. type: subsection
#: original_texis/programs.texi:791
#, no-wrap
msgid "Matching Parentheses"
msgstr "マッチするカッコ"

#. type: cindex
#: original_texis/programs.texi:792
#, no-wrap
msgid "matching parentheses"
msgstr "matching parentheses"

#. type: cindex
#: original_texis/programs.texi:793
#, no-wrap
msgid "parentheses, displaying matches"
msgstr "parentheses, displaying matches"

#. type: Plain text
#: original_texis/programs.texi:798
msgid ""
"Emacs has a number of @dfn{parenthesis matching} features, which make it "
"easy to see how and whether parentheses (or other delimiters)  match up."
msgstr ""
"Emacsには@dfn{カッコのマッチング(parenthesis matching)}機能がいくつかありま"
"す。これにより、どのカッコ(または他の区切り)がどのようにマッチするか簡単に見"
"ることができます。"

#. type: Plain text
#: original_texis/programs.texi:806
msgid ""
"Whenever you type a self-inserting character that is a closing delimiter, "
"Emacs briefly indicates the location of the matching opening delimiter, "
"provided that is on the screen.  If it is not on the screen, Emacs displays "
"some of the text near it in the echo area.  Either way, you can tell which "
"grouping you are closing off.  If the opening delimiter and closing "
"delimiter are mismatched---such as in @samp{[x)}---a warning message is "
"displayed in the echo area."
msgstr ""
"終了文字となる自己挿入文字をタイプすると、Emacsはそれがスクリーン上にあれば、"
"マッチする開始区切りの位置を簡単に示します。スクリーン上にない場合、Emacsは開"
"始区切りの近くにあるテキストをエコーエリアに表示します。どちらの方法でも、ど"
"のグループを終了したのか見分けることができます。開始区切りと終了区切りがマッ"
"チしない --- @samp{[x)}のような場合、エコーエリアに警告メッセージが表示されま"
"す。"

#. type: vindex
#: original_texis/programs.texi:807
#, no-wrap
msgid "blink-matching-paren"
msgstr "blink-matching-paren"

#. type: vindex
#: original_texis/programs.texi:808
#, no-wrap
msgid "blink-matching-paren-distance"
msgstr "blink-matching-paren-distance"

#. type: vindex
#: original_texis/programs.texi:809
#, no-wrap
msgid "blink-matching-delay"
msgstr "blink-matching-delay"

#. type: Plain text
#: original_texis/programs.texi:811
msgid "Three variables control the display of matching parentheses:"
msgstr "3つの変数が、マッチするカッコの表示を制御します:"

#. type: itemize
#: original_texis/programs.texi:818
msgid ""
"@code{blink-matching-paren} turns the feature on or off: @code{nil} disables "
"it, but the default is @code{t} to enable it.  Set it to @code{jump} to make "
"indication work by momentarily moving the cursor to the matching opening "
"delimiter."
msgstr ""
"@code{blink-matching-paren}は、この機能をオンまたはオフに切り替えます。"
"@code{nil}は無効にしますが、デフォルトの@code{t}は有効にします。@code{jump}に"
"セットすると、マッチする開始区切りに数瞬カーソルを移動して指示します。"

#. type: itemize
#: original_texis/programs.texi:823
msgid ""
"@code{blink-matching-delay} says how many seconds to keep indicating the "
"matching opening delimiter.  This may be an integer or floating-point "
"number; the default is 1."
msgstr ""
"@code{blink-matching-delay}は、マッチする開始区切りを何秒表示するかを指定しま"
"す。これには整数または浮動小数点数を指定します。デフォルトは1です。"

#. type: itemize
#: original_texis/programs.texi:829
msgid ""
"@code{blink-matching-paren-distance} specifies how many characters back to "
"search to find the matching opening delimiter.  If the match is not found in "
"that distance, Emacs stops scanning and nothing is displayed.  The default "
"is 102400."
msgstr ""
"@code{blink-matching-paren-distance}には、マッチする開始区切りを後方に何文字"
"検索するかを指定します。この文字数内にマッチが見つからない場合、Emacsは検索を"
"中止して、何も表示しません。デフォルトは102400です。"

#. type: cindex
#: original_texis/programs.texi:831
#, no-wrap
msgid "Show Paren mode"
msgstr "Show Paren mode"

#. type: cindex
#: original_texis/programs.texi:832
#, no-wrap
msgid "highlighting matching parentheses"
msgstr "highlighting matching parentheses"

#. type: findex
#: original_texis/programs.texi:833
#, no-wrap
msgid "show-paren-mode"
msgstr "show-paren-mode"

#. type: Plain text
#: original_texis/programs.texi:839
msgid ""
"Show Paren mode, a global minor mode, provides a more powerful kind of "
"automatic matching.  Whenever point is before an opening delimiter or after "
"a closing delimiter, both that delimiter and its opposite delimiter are "
"highlighted.  To toggle Show Paren mode, type @kbd{M-x show-paren-mode}."
msgstr ""
"グローバルなマイナーモードのShow Parenモードは、より強力な自動的なマッチング"
"の類を提供します。これは開始区切りの前、または終了区切りの後ろにポイントを移"
"動すると、その区切りと、それに対応する反対側の区切りをハイライトします。Show "
"Parenモードに切り替えるには、@kbd{M-x show-paren-mode}とタイプしてください。"

#. type: cindex
#: original_texis/programs.texi:840
#, no-wrap
msgid "Electric Pair mode"
msgstr "Electric Pair mode"

#. type: cindex
#: original_texis/programs.texi:841
#, no-wrap
msgid "inserting matching parentheses"
msgstr "inserting matching parentheses"

#. type: findex
#: original_texis/programs.texi:842
#, no-wrap
msgid "electric-pair-mode"
msgstr "electric-pair-mode"

#. type: Plain text
#: original_texis/programs.texi:850
msgid ""
"Electric Pair mode, a global minor mode, provides a way to easily insert "
"matching delimiters.  Whenever you insert an opening delimiter, the matching "
"closing delimiter is automatically inserted as well, leaving point between "
"the two. Conversely, when you insert a closing delimiter over an existing "
"one, no inserting takes places and that position is simply skipped over. "
"These variables control additional features of Electric Pair mode:"
msgstr ""
"グローバルなマイナーモードのElectric Pairモードは、マッチする区切りを簡単に挿"
"入する方法を提供します。開始区切りを挿入すると、マッチする終了区切りが自動的"
"に挿入され、2つの区切りの間にポイントが配されます。反対に終了区切りを既存の区"
"切りの先に挿入した場合、何の挿入もされず、その位置は単にスキップされます。以"
"下の変数はElectric Pairモードの追加機能を制御します:"

#. type: itemize
#: original_texis/programs.texi:856
msgid ""
"@code{electric-pair-preserve-balance}, when non-@code{nil}, makes the "
"default pairing logic balance out the number of opening and closing "
"delimiters."
msgstr ""
"@code{electric-pair-preserve-balance} --- 非@code{nil}の場合、デフォルトのペ"
"アリングロジックは、開始区切りと終了区切りの数のバランスになります。"

#. type: itemize
#: original_texis/programs.texi:861
msgid ""
"@code{electric-pair-delete-adjacent-pairs}, when non-@code{nil}, makes "
"backspacing between two adjacent delimiters also automatically delete the "
"closing delimiter."
msgstr ""
"@code{electric-pair-delete-adjacent-pairs} --- 非@code{nil}の場合、隣接する区"
"切りの間でのバックスペースにより、終了区切りも自動的に削除します。"

#. type: itemize
#: original_texis/programs.texi:866
msgid ""
"@code{electric-pair-open-newline-between-pairs}, when non-@code{nil}, makes "
"inserting inserting a newline between two adjacent pairs also automatically "
"open and extra newline after point."
msgstr ""
"@code{electric-pair-open-newline-between-pairs} --- 非@code{nil}の場合、2つの"
"隣接するペアの間での改行の挿入は、ポイントの後ろに自動的に自動的に追加の改行"
"をオープンします。"

#. type: itemize
#: original_texis/programs.texi:871
msgid ""
"@code{electric-pair-skip-whitespace}, when non-@code{nil}, causes the minor "
"mode to skip whitespace forward before deciding whether to skip over the "
"closing delimiter."
msgstr ""
"@code{electric-pair-skip-whitespace} --- 非@code{nil}の場合、終了区切りのス"
"キップを決定する前に、マイナーモードが空白文字を前方にスキップするようにしま"
"す。"

#. type: Plain text
#: original_texis/programs.texi:874
msgid "To toggle Electric Pair mode, type @kbd{M-x electric-pair-mode}."
msgstr ""
"Electric Pairモードに切り替えるには、@kbd{M-x electric-pair-mode}とタイプして"
"ください。"

#. type: section
#: original_texis/programs.texi:876
#, no-wrap
msgid "Manipulating Comments"
msgstr "コメントの操作"

#. type: cindex
#: original_texis/programs.texi:877
#, no-wrap
msgid "comments"
msgstr "comments"

#. type: Plain text
#: original_texis/programs.texi:883
msgid ""
"Because comments are such an important part of programming, Emacs provides "
"special commands for editing and inserting comments.  It can also do spell "
"checking on comments with Flyspell Prog mode (@pxref{Spelling})."
msgstr ""
"コメントは、プログラミングにおいて重要なパートなので、Emacsはコメントの編集や"
"挿入を行う特別なコマンドを提供します。Flyspell Progモードによる、コメントのス"
"ペルチェックも行うことができます(@ref{Spelling}を参照してください)。"

#. type: Plain text
#: original_texis/programs.texi:891
msgid ""
"Some major modes have special rules for indenting different kinds of "
"comments.  For example, in Lisp code, comments starting with two semicolons "
"are indented as if they were lines of code, while those starting with three "
"semicolons are supposed to be aligned to the left margin and are often used "
"for sectioning purposes.  Emacs understand these conventions; for instance, "
"typing @key{TAB} on a comment line will indent the comment to the "
"appropriate position."
msgstr ""
"異なる種類のコメントのインデントにたいして、特別なルールをもつメジャーモード"
"がいくつかあります。たとえばLispコードでは、2つのセミコロンで始まるコメント"
"は、それらの行がコードであるかのようにインデントされ、3つのセミコロンで始まる"
"コメントは左端に揃えてインデントされ、しばしば区分けの目的で使用されます。"
"Emacsはこれらの慣習を理解します。たとえば、コメント行で@key{TAB}をタイプする"
"と、そのコメントを適切な位置にインデントします。"

#. type: example
#: original_texis/programs.texi:899
#, no-wrap
msgid ""
";; This function is just an example.\n"
";;; Here either two or three semicolons are appropriate.\n"
"(defun foo (x)\n"
";;;  And now, the first part of the function:\n"
"  ;; The following line adds one.\n"
"  (1+ x))           ; This line adds one.\n"
msgstr ""
";; This function is just an example.\n"
";;; Here either two or three semicolons are appropriate.\n"
"(defun foo (x)\n"
";;;  And now, the first part of the function:\n"
"  ;; The following line adds one.\n"
"  (1+ x))           ; This line adds one.\n"

#. type: subsection
#: original_texis/programs.texi:905 original_texis/programs.texi:907
#: original_texis/programs.texi:908
#, no-wrap
msgid "Comment Commands"
msgstr "Comment Commands"

#. type: node
#: original_texis/programs.texi:905 original_texis/programs.texi:1002
#, no-wrap
msgid "Multi-Line Comments"
msgstr "Multi-Line Comments"

#. type: menuentry
#: original_texis/programs.texi:905
msgid "Commands for adding and editing multi-line comments."
msgstr "複数行のコメントを追加・編集するコマンド。"

#. type: menuentry
#: original_texis/programs.texi:905
msgid "Options for Comments::Customizing the comment features."
msgstr "Options for Comments::コメント機能のカスタマイズ。"

#. type: cindex
#: original_texis/programs.texi:909
#, no-wrap
msgid "indentation for comments"
msgstr "indentation for comments"

#. type: cindex
#: original_texis/programs.texi:910
#, no-wrap
msgid "alignment for comments"
msgstr "alignment for comments"

#. type: Plain text
#: original_texis/programs.texi:913
msgid "The following commands operate on comments:"
msgstr "以下のコマンドは、コメントにたいして処理を行います:"

#. type: kindex
#: original_texis/programs.texi:915 original_texis/programs.texi:931
#, no-wrap
msgid "M-;"
msgstr "M-;"

#. type: table
#: original_texis/programs.texi:918
msgid ""
"Insert or realign comment on current line; if the region is active, comment "
"or uncomment the region instead (@code{comment-dwim})."
msgstr ""
"カレント行にコメントを挿入、または位置揃えします。リージョンがアクティブのと"
"きは、かわりにリージョンをコメント化、または非コメント化します(@code{comment-"
"dwim})。"

#. type: kindex
#: original_texis/programs.texi:918 original_texis/programs.texi:973
#, no-wrap
msgid "C-u M-;"
msgstr "C-u M-;"

#. type: table
#: original_texis/programs.texi:920
msgid "Kill comment on current line (@code{comment-kill})."
msgstr "カレント行のコメントをkillします(@code{comment-kill})。"

#. type: kindex
#: original_texis/programs.texi:920 original_texis/programs.texi:1044
#, no-wrap
msgid "C-x ;"
msgstr "C-x ;"

#. type: table
#: original_texis/programs.texi:922
msgid "Set comment column (@code{comment-set-column})."
msgstr "コメント列をセットします(@code{comment-set-column})。"

#. type: kindex
#: original_texis/programs.texi:922 original_texis/programs.texi:1005
#, no-wrap
msgid "C-M-j"
msgstr "C-M-j"

#. type: kindex
#: original_texis/programs.texi:923 original_texis/programs.texi:1006
#, no-wrap
msgid "M-j"
msgstr "M-j"

#. type: table
#: original_texis/programs.texi:926
msgid ""
"Like @key{RET} followed by inserting and aligning a comment (@code{comment-"
"indent-new-line}).  @xref{Multi-Line Comments}."
msgstr ""
"@key{RET}の後にコメントを挿入して位置揃えします(@code{comment-indent-new-"
"line})。@ref{Multi-Line Comments}を参照してください。"

#. type: kbd{#1}
#: original_texis/programs.texi:926
#, no-wrap
msgid "M-x comment-region"
msgstr "M-x comment-region"

#. type: itemx
#: original_texis/programs.texi:927
#, no-wrap
msgid "@kbd{C-c C-c} (in C-like modes)"
msgstr "@kbd{C-c C-c} (C-likeなモードの場合)"

#. type: table
#: original_texis/programs.texi:929
msgid "Add comment delimiters to all the lines in the region."
msgstr "リージョンのすべての行にたいして、コメント区切りを追加します。"

#. type: findex
#: original_texis/programs.texi:932
#, no-wrap
msgid "comment-dwim"
msgstr "comment-dwim"

#. type: Plain text
#: original_texis/programs.texi:938
msgid ""
"The command to create or align a comment is @kbd{M-;} (@code{comment-"
"dwim}).  The word ``dwim'' is an acronym for ``Do What I Mean''; it "
"indicates that this command can be used for many different jobs relating to "
"comments, depending on the situation where you use it."
msgstr ""
"コメントを挿入または位置揃えするコマンドは、@kbd{M-;} (@code{comment-dwim})で"
"す。単語``dwim''は、``Do What I Mean(私が言ったとおりにしてください)''の頭文"
"字をとったものです。このコマンドは、コメントに関係する多くの異なる作業に使用"
"できます。それは、このコマンドをどこで使うかという、状況に依存することを示し"
"ます。"

#. type: Plain text
#: original_texis/programs.texi:944
msgid ""
"When a region is active (@pxref{Mark}), @kbd{M-;} either adds comment "
"delimiters to the region, or removes them.  If every line in the region is "
"already a comment, it ``uncomments'' each of those lines by removing their "
"comment delimiters.  Otherwise, it adds comment delimiters to enclose the "
"text in the region."
msgstr ""
"リージョンがアクティブ(@ref{Mark}を参照してください)の場合、@kbd{M-;}はリー"
"ジョンのコメント区切りの追加と削除のどちらかを行います。リージョンの各行がす"
"でにコメントの場合、それらのコメント区切りを削除することにより、それらの行を"
"``非コメント化''します。そうでない場合は、リージョンのテキストにコメント区切"
"りを追加します。"

#. type: Plain text
#: original_texis/programs.texi:949
msgid ""
"If you supply a prefix argument to @kbd{M-;} when a region is active, that "
"specifies the number of comment delimiters to add or delete.  A positive "
"argument @var{n} adds @var{n} delimiters, while a negative argument @var{-n} "
"removes @var{n} delimiters."
msgstr ""
"リージョンがアクティブのときに@kbd{M-;}に数引数を与えると、それは追加または削"
"除するコメント区切りの数を指定します。正の引数@var{n}は@var{n}個の区切りを追"
"加し、負の引数@var{-n}は@var{n}個の区切りを削除します。"

#. type: Plain text
#: original_texis/programs.texi:963
msgid ""
"If the region is not active, and there is no existing comment on the current "
"line, @kbd{M-;} adds a new comment to the current line.  If the line is "
"blank (i.e., empty or containing only whitespace characters), the comment is "
"indented to the same position where @key{TAB} would indent to (@pxref{Basic "
"Indent}).  If the line is non-blank, the comment is placed after the last "
"non-whitespace character on the line; normally, Emacs tries putting it at "
"the column specified by the variable @code{comment-column} (@pxref{Options "
"for Comments}), but if the line already extends past that column, it puts "
"the comment at some suitable position, usually separated from the non-"
"comment text by at least one space.  In each case, Emacs places point after "
"the comment's starting delimiter, so that you can start typing the comment "
"text right away."
msgstr ""
"リージョンが非アクティブで、カレント行にコメントがない場合、@kbd{M-;}はカレン"
"ト行に新しいコメントを追加します。ブランク行(たとえば空または空白文字しか含ま"
"ない)の場合、@key{TAB}をタイプしたときにインデントされるのと同じ位置に、コメ"
"ントがインデントされます(@ref{Basic Indent}を参照してください)。非ブランク行"
"の場合、コメントはその行の最後の非空白文字の後ろに配されます。通常Emacsは変数"
"@code{comment-column} (@ref{Options for Comments}を参照してください)で指定さ"
"れた列にコメントを配そうと試みますが、行が既にその列を越えている場合、コマン"
"ドはコメントを適切な位置 --- 通常、非コメントのテキストと1つのスペースを空け"
"てコメントを配します。どちらの場合も、Emacsはコメントの開始区切りの後ろにポイ"
"ントを配すので、すぐにコメントのタイプを開始できます。"

#. type: Plain text
#: original_texis/programs.texi:971
msgid ""
"You can also use @kbd{M-;} to align an existing comment.  If a line already "
"contains the comment-start string, @kbd{M-;} realigns it to the conventional "
"alignment and moves point after the comment's starting delimiter.  As an "
"exception, comments starting in column 0 are not moved.  Even when an "
"existing comment is properly aligned, @kbd{M-;} is still useful for moving "
"directly to the start of the comment text."
msgstr ""
"既存のコメントの位置揃えにも@kbd{M-;}を使用できます。行がすでにコメント開始文"
"字列を含む場合、@kbd{M-;}は慣習的な位置にそれを位置揃えして、ポイントをコメン"
"ト開始区切りの後ろに移動します。例外として、列0で始まるコメントは移動されませ"
"ん。既存のコメントがすでに正しく位置揃えされているときでも、@kbd{M-;}はコメン"
"トテキストの開始に直接移動するので有用です。"

#. type: findex
#: original_texis/programs.texi:972
#, no-wrap
msgid "comment-kill"
msgstr "comment-kill"

#. type: Plain text
#: original_texis/programs.texi:982
msgid ""
"@kbd{C-u M-;} (@code{comment-dwim} with a prefix argument) kills any comment "
"on the current line, along with the whitespace before it.  Since the comment "
"is saved to the kill ring, you can reinsert it on another line by moving to "
"the end of that line, doing @kbd{C-y}, and then @kbd{M-;} to realign the "
"comment.  You can achieve the same effect as @kbd{C-u M-;} by typing @kbd{M-"
"x comment-kill} (@code{comment-dwim} actually calls @code{comment-kill} as a "
"subroutine when it is given a prefix argument)."
msgstr ""
"@kbd{C-u M-;} (@code{comment-dwim}にプレフィクス引数を指定)は、カレント行の任"
"意のコメントを、それの前の空白文字と一緒にkillします。コメントはkillリングに"
"保存されるので、他の行の行末に移動して@kbd{C-y}で挿入して、@kbd{M-;}でコメン"
"トの位置揃えをすることができます。@kbd{M-x comment-kill}とタイプしても@kbd{C-"
"u M-;}と同じ効果を得ることができます(@code{comment-dwim}はプレフィクス引数を"
"与えられたとき、実際にサブルーチンとして@code{comment-kill}を呼び出します)。"

#. type: kindex
#: original_texis/programs.texi:983
#, no-wrap
msgid "C-c C-c (C mode)"
msgstr "C-c C-c (C mode)"

#. type: findex
#: original_texis/programs.texi:984
#, no-wrap
msgid "comment-region"
msgstr "comment-region"

#. type: findex
#: original_texis/programs.texi:985
#, no-wrap
msgid "uncomment-region"
msgstr "uncomment-region"

#. type: Plain text
#: original_texis/programs.texi:994
msgid ""
"The command @kbd{M-x comment-region} is equivalent to calling @kbd{M-;} on "
"an active region, except that it always acts on the region, even if the mark "
"is inactive.  In C mode and related modes, this command is bound to @kbd{C-c "
"C-c}.  The command @kbd{M-x uncomment-region} uncomments each line in the "
"region; a numeric prefix argument specifies the number of comment delimiters "
"to remove (negative arguments specify the number of comment to delimiters to "
"add)."
msgstr ""
"コマンド@kbd{M-x comment-region}は、アクティブなリージョンにたいして@kbd{M-;}"
"を呼び出すのと等価ですが、このコマンドはマークが非アクティブのときでも、常に"
"リージョンにたいして動作します。Cモードおよび関連するモードでは、このコマンド"
"は@kbd{C-c C-c}にバインドされています。コマンド@kbd{M-x uncomment-region}は、"
"リージョンの各行を非コメント化します。数引数は、削除するコメント区切りの数を"
"指定します(負の引数は、追加するコメント区切りの数を指定します)。"

#. type: Plain text
#: original_texis/programs.texi:1001
msgid ""
"For C-like modes, you can configure the exact effect of @kbd{M-;} by setting "
"the variables @code{c-indent-comment-alist} and @code{c-indent-comments-"
"syntactically-p}.  For example, on a line ending in a closing brace, "
"@kbd{M-;} puts the comment one space after the brace rather than at "
"@code{comment-column}.  For full details see @ref{Comment Commands,,, "
"ccmode, The CC Mode Manual}."
msgstr ""
"C-likeなモードにたいしては、変数@code{c-indent-comment-alist}および@code{c-"
"indent-comments-syntactically-p}をセットすることにより、@kbd{M-;}の正確な効果"
"を設定できます。たとえば閉じ大カッコで終わる行では、@kbd{M-;}は@code{comment-"
"column}ではなく、大カッコの後ろにスペースを1つ空けてコメントを配します。完全"
"な詳細は、@ref{Comment Commands,,, ccmode, The CC Mode Manual}を参照してくだ"
"さい。"

#. type: subsection
#: original_texis/programs.texi:1003
#, no-wrap
msgid "Multiple Lines of Comments"
msgstr "複数行のコメント"

#. type: cindex
#: original_texis/programs.texi:1007
#, no-wrap
msgid "blank lines in programs"
msgstr "blank lines in programs"

#. type: findex
#: original_texis/programs.texi:1008
#, no-wrap
msgid "comment-indent-new-line"
msgstr "comment-indent-new-line"

#. type: vindex
#: original_texis/programs.texi:1009
#, no-wrap
msgid "comment-multi-line"
msgstr "comment-multi-line"

#. type: Plain text
#: original_texis/programs.texi:1014
msgid ""
"If you are typing a comment and wish to continue it to another line, type "
"@kbd{M-j} or @kbd{C-M-j} (@code{comment-indent-new-line}).  This breaks the "
"current line, and inserts the necessary comment delimiters and indentation "
"to continue the comment."
msgstr ""
"コメントをタイプするとき、それを次の行に継続したくなったときは、@kbd{M-j}また"
"は@kbd{C-M-j} (@code{comment-indent-new-line})とタイプします。これはカレント"
"行を行ブレークして、コメントを継続するために必要なコメント区切りとインデント"
"を挿入します。"

#. type: Plain text
#: original_texis/programs.texi:1021
msgid ""
"For languages with closing comment delimiters (e.g., @samp{*/} in C), the "
"exact behavior of @kbd{M-j} depends on the value of the variable "
"@code{comment-multi-line}.  If the value is @code{nil}, the command closes "
"the comment on the old line and starts a new comment on the new line.  "
"Otherwise, it opens a new line within the current comment delimiters."
msgstr ""
"コメントの終了区切りをもつ言語(たとえばCの@samp{*/})では、@kbd{M-j}の正確な振"
"る舞いは、変数@code{comment-multi-line}の値に依存します。変数の値が@code{nil}"
"の場合、このコマンドは古い行のコメントを終了させて、新しい行で新しいコメント"
"を開始します。そうでない場合、カレントのコメント区切りの中で新しい行を開きま"
"す。"

#. type: Plain text
#: original_texis/programs.texi:1025
msgid ""
"When Auto Fill mode is on, going past the fill column while typing a comment "
"also continues the comment, in the same way as an explicit invocation of "
"@kbd{M-j}."
msgstr ""
"Auto Fillモードがオンの場合、コメントをタイプしているときにフィル列に達する"
"と、明示的に@kbd{M-j}を呼び出したときと同じ方法で、コメントが継続されます。"

#. type: Plain text
#: original_texis/programs.texi:1028
msgid ""
"To turn existing lines into comment lines, use @kbd{M-;} with the region "
"active, or use @kbd{M-x comment-region}"
msgstr ""
"既存の行をコメントにするには、リージョンがアクティブのときは@kbd{M-;}、または"
"@kbd{M-x comment-region}を使用します。"

#. type: ifinfo
#: original_texis/programs.texi:1030
msgid "(@pxref{Comment Commands})."
msgstr "(@pxref{Comment Commands})."

#. type: ifnotinfo
#: original_texis/programs.texi:1033
msgid "as described in the preceding section."
msgstr "as described in the preceding section."

#. type: Plain text
#: original_texis/programs.texi:1039
msgid ""
"You can configure C Mode such that when you type a @samp{/} at the start of "
"a line in a multi-line block comment, this closes the comment.  Enable the "
"@code{comment-close-slash} clean-up for this.  @xref{Clean-ups,,, ccmode, "
"The CC Mode Manual}."
msgstr ""
"複数行ブロックのコメントの行の開始で@samp{/}をタイプすると、コメントを終了す"
"るようにCモードを設定できます。これを行なうには、クリーンアップ(clean-up)で、"
"@code{comment-close-slash}を有効にします。@ref{Clean-ups,,, ccmode, The CC "
"Mode Manual}を参照してください。"

#. type: node
#: original_texis/programs.texi:1040
#, no-wrap
msgid "Options for Comments"
msgstr "Options for Comments"

#. type: subsection
#: original_texis/programs.texi:1041
#, no-wrap
msgid "Options Controlling Comments"
msgstr "コメントを制御するオプション"

#. type: vindex
#: original_texis/programs.texi:1043
#, no-wrap
msgid "comment-column"
msgstr "comment-column"

#. type: findex
#: original_texis/programs.texi:1045
#, no-wrap
msgid "comment-set-column"
msgstr "comment-set-column"

#. type: Plain text
#: original_texis/programs.texi:1056
msgid ""
"As mentioned in @ref{Comment Commands}, when the @kbd{M-j} command adds a "
"comment to a line, it tries to place the comment at the column specified by "
"the buffer-local variable @code{comment-column}.  You can set either the "
"local value or the default value of this buffer-local variable in the usual "
"way (@pxref{Locals}).  Alternatively, you can type @kbd{C-x ;} "
"(@code{comment-set-column}) to set the value of @code{comment-column} in the "
"current buffer to the column where point is currently located.  @kbd{C-u C-"
"x ;} sets the comment column to match the last comment before point in the "
"buffer, and then does a @kbd{M-;} to align the current line's comment under "
"the previous one."
msgstr ""
"@ref{Comment Commands}で示したように、@kbd{M-j}コマンドが行にコメントを追加す"
"るとき、バッファーローカルな変数@code{comment-column}で指定された位置にコメン"
"トを配しようと試みます。このバッファーローカルな変数のデフォルト値、または"
"ローカルな値は、通常の方法(@ref{Locals}を参照してください)でセットできます。"
"かわりに@kbd{C-x ;} (@code{comment-set-column})とタイプすることにより、カレン"
"トバッファーの@code{comment-column}の値を、現在コメントがある列にセットするこ"
"とができます。@kbd{C-u C-x ;}は、コメント列をそのバッファーのポイントの前にあ"
"る最後のコメントにセットします。その後で@kbd{M-;}を行うことにより、カレント行"
"のコメントを前のコメントに揃えることができます。"

#. type: vindex
#: original_texis/programs.texi:1057
#, no-wrap
msgid "comment-start-skip"
msgstr "comment-start-skip"

#. type: Plain text
#: original_texis/programs.texi:1069
msgid ""
"The comment commands recognize comments based on the regular expression that "
"is the value of the variable @code{comment-start-skip}.  Make sure this "
"regexp does not match the null string.  It may match more than the comment "
"starting delimiter in the strictest sense of the word; for example, in C "
"mode the value of the variable is @code{@w{\"\\\\(//+\\\\|/\\\\*+\\\\)\\\\s *"
"\"}}, which matches extra stars and spaces after the @samp{/*} itself, and "
"accepts C++ style comments also.  (Note that @samp{\\\\} is needed in Lisp "
"syntax to include a @samp{\\} in the string, which is needed to deny the "
"first star its special meaning in regexp syntax.  @xref{Regexp Backslash}.)"
msgstr ""
"コメントコマンドは、変数@code{comment-start-skip}の値である正規表現にもとづい"
"て、コメントを認識します。この正規表現がヌル文字列にマッチしないように気をつ"
"けてください。単語という言葉の厳格な意味から考えると、これはコメント開始区切"
"りより長い文字列にマッチするかもしれません。たとえばCモードでの変数の値は"
"@code{@w{\"\\\\(//+\\\\|/\\\\*+\\\\)\\\\s *\"}}で、これは@samp{/*}自身と、そ"
"の後ろの余分なアスタリスクやスペースにマッチし、C++スタイルのコメントも許容し"
"ます(文字列に@samp{\\}を含む場合、Lisp構文では@samp{\\\\}と記述する必要がある"
"ことに注意してください。これは最初のアスタリスクにたいして、正規表現において"
"アスタリスクがもつ特別な意味を打ち消すために必要です)。"

#. type: vindex
#: original_texis/programs.texi:1070
#, no-wrap
msgid "comment-start"
msgstr "comment-start"

#. type: vindex
#: original_texis/programs.texi:1071
#, no-wrap
msgid "comment-end"
msgstr "comment-end"

#. type: Plain text
#: original_texis/programs.texi:1079
msgid ""
"When a comment command makes a new comment, it inserts the value of "
"@code{comment-start} as an opening comment delimiter.  It also inserts the "
"value of @code{comment-end} after point, as a closing comment delimiter.  "
"For example, in Lisp mode, @code{comment-start} is @samp{\";\"} and "
"@code{comment-end} is @code{\"\"} (the empty string).  In C mode, "
"@code{comment-start} is @code{\"/* \"} and @code{comment-end} is @code{\" */"
"\"}."
msgstr ""
"コメントコマンドが新しいコメントを作るとき、これは@code{comment-start}の値を"
"コメント開始区切りとして挿入します。これはポイントの後ろに、コメント終了区切"
"りとして@code{comment-end}の値も挿入します。たとえばLispモードでは"
"@code{comment-start}が@samp{\";\"}で、@code{comment-end}が@code{\"\"}(空文字"
"列)です。Cモードでは@code{comment-start}が@code{\"/* \"}で、@code{comment-"
"end}が@code{\" */\"}です。"

#. type: vindex
#: original_texis/programs.texi:1080
#, no-wrap
msgid "comment-padding"
msgstr "comment-padding"

#. type: Plain text
#: original_texis/programs.texi:1086
msgid ""
"The variable @code{comment-padding} specifies a string that the commenting "
"commands should insert between the comment delimiter(s) and the comment "
"text.  The default, @samp{\" \"}, specifies a single space.  Alternatively, "
"the value can be a number, which specifies that number of spaces, or "
"@code{nil}, which means no spaces at all."
msgstr ""
"変数@code{comment-padding}は、コメントコマンドが、コメント区切りとコメントテ"
"キストの間を区切る文字列を指定します。デフォルトでは@samp{\" \"}、つまり1つの"
"スペースが指定されます。かわりに数字を指定すると、これは指定した数のスペース"
"になり、@code{nil}の場合、スペースは挿入されません。"

#. type: Plain text
#: original_texis/programs.texi:1090
msgid ""
"The variable @code{comment-multi-line} controls how @kbd{M-j} and Auto Fill "
"mode continue comments over multiple lines.  @xref{Multi-Line Comments}."
msgstr ""
"変数@code{comment-multi-line}は、@kbd{M-j}とAuto Fillモードがコメントをどのよ"
"うに複数行に継続するかを制御します。@ref{Multi-Line Comments}を参照してくださ"
"い。"

#. type: vindex
#: original_texis/programs.texi:1091
#, no-wrap
msgid "comment-indent-function"
msgstr "comment-indent-function"

#. type: Plain text
#: original_texis/programs.texi:1101
msgid ""
"The variable @code{comment-indent-function} should contain a function that "
"will be called to compute the alignment for a newly inserted comment or for "
"aligning an existing comment.  It is set differently by various major "
"modes.  The function is called with no arguments, but with point at the "
"beginning of the comment, or at the end of a line if a new comment is to be "
"inserted.  It should return the column in which the comment ought to start.  "
"For example, in Lisp mode, the indent hook function bases its decision on "
"how many semicolons begin an existing comment, and on the code in the "
"preceding lines."
msgstr ""
"変数@code{comment-indent-function}は、新しく挿入されたコメント、または既存の"
"コメントの位置揃え位置を計算するために呼び出される関数を指定します。これはメ"
"ジャーモードごとに異なります。関数は引数なしで呼び出されますが、新しいコメン"
"トが挿入されるときはコメント開始位置のポイント、または行末のポイントで呼び出"
"されます。この関数はコメントが開始されるべき列を返す必要があります。たとえば"
"Lispモードでは、インデントフック関数の決定は、既存のコメントがいくつのセミコ"
"ロンで始まるかと、前の行のコードにもとづきます。"

#. type: section
#: original_texis/programs.texi:1103
#, no-wrap
msgid "Documentation Lookup"
msgstr "ドキュメントの照会"

#. type: Plain text
#: original_texis/programs.texi:1108
msgid ""
"Emacs provides several features you can use to look up the documentation of "
"functions, variables and commands that you plan to use in your program."
msgstr ""
"Emacsは、関数やプログラムで使おうと計画している変数およびコマンドを、ドキュメ"
"ントから探すのに使用できる機能をいくつか提供します。"

#. type: node
#: original_texis/programs.texi:1113 original_texis/programs.texi:1115
#, no-wrap
msgid "Info Lookup"
msgstr "Info Lookup"

#. type: menuentry
#: original_texis/programs.texi:1113
msgid "Looking up library functions and commands in Info files."
msgstr "Infoファイルからライブラリー関数やコマンドを探す。"

#. type: node
#: original_texis/programs.texi:1113 original_texis/programs.texi:1139
#, no-wrap
msgid "Man Page"
msgstr "Man Page"

#. type: menuentry
#: original_texis/programs.texi:1113
msgid "Looking up man pages of library functions and commands."
msgstr "manからライブラリー関数やコマンドを探す。"

#. type: node
#: original_texis/programs.texi:1113 original_texis/programs.texi:1211
#, no-wrap
msgid "Lisp Doc"
msgstr "Lisp Doc"

#. type: menuentry
#: original_texis/programs.texi:1113
msgid "Looking up Emacs Lisp functions, etc."
msgstr "Emacs関数を探す、その他。"

#. type: subsection
#: original_texis/programs.texi:1116
#, no-wrap
msgid "Info Documentation Lookup"
msgstr "Infoドキュメントの照会"

#. type: findex
#: original_texis/programs.texi:1118
#, no-wrap
msgid "info-lookup-symbol"
msgstr "info-lookup-symbol"

#. type: findex
#: original_texis/programs.texi:1119
#, no-wrap
msgid "info-lookup-file"
msgstr "info-lookup-file"

#. type: kindex
#: original_texis/programs.texi:1120
#, no-wrap
msgid "C-h S"
msgstr "C-h S"

#. type: Plain text
#: original_texis/programs.texi:1128
msgid ""
"For major modes that apply to languages which have documentation in Info, "
"you can use @kbd{C-h S} (@code{info-lookup-symbol}) to view the Info "
"documentation for a symbol used in the program.  You specify the symbol with "
"the minibuffer; the default is the symbol appearing in the buffer at point.  "
"For example, in C mode this looks for the symbol in the C Library Manual.  "
"The command only works if the appropriate manual's Info files are installed."
msgstr ""
"Infoドキュメントをもつ言語に適用されるメジャーモードでは、プログラムで使用さ"
"れるシンボルにたいして@kbd{C-h S} (@code{info-lookup-symbol})を使用することに"
"より、Infoドキュメントを閲覧できます。シンボルはミニバッファーで指定します。"
"デフォルトはバッファーのポイント位置にあるシンボルです。たとえばCモードでは、"
"シンボルをC Library Manualから探します。このコマンドは適切なInfoファイルのマ"
"ニュアルがインストールされているときだけ機能します。"

#. type: Plain text
#: original_texis/programs.texi:1133
msgid ""
"The major mode determines where to look for documentation for the symbol---"
"which Info files to look in, and which indices to search.  You can also use "
"@kbd{M-x info-lookup-file} to look for documentation for a file name."
msgstr ""
"メジャーモードは、どのドキュメントのどこからシンボルを探すか --- つまり、どの"
"Infoファイルを探すのか、そしてどのインデックスを検索するかを決定します。"
"@kbd{M-x info-lookup-file}を使用して、ドキュメントのファイル名を指定すること"
"もできます。"

#. type: Plain text
#: original_texis/programs.texi:1138
msgid ""
"If you use @kbd{C-h S} in a major mode that does not support it, it asks you "
"to specify the ``symbol help mode''.  You should enter a command such as "
"@code{c-mode} that would select a major mode which @kbd{C-h S} does support."
msgstr ""
"@kbd{C-h S}をサポートしないメジャーモードでこれを使用すると、これは``symbol "
"help mode''を指定するよう求めます。ここでは@code{c-mode}コマンドのように、"
"@kbd{C-h S}をサポートするメジャーモードを選択します。"

#. type: subsection
#: original_texis/programs.texi:1140
#, no-wrap
msgid "Man Page Lookup"
msgstr "man-pageの照会"

#. type: cindex
#: original_texis/programs.texi:1142
#, no-wrap
msgid "man page"
msgstr "man page"

#. type: Plain text
#: original_texis/programs.texi:1148
msgid ""
"On Unix, the main form of on-line documentation was the @dfn{manual page} or "
"@dfn{man page}.  In the GNU operating system, we aim to replace man pages "
"with better-organized manuals that you can browse with Info (@pxref{Misc "
"Help}).  This process is not finished, so it is still useful to read manual "
"pages."
msgstr ""
"Unixでは、オンラインドキュメントのメインフォームは@dfn{manual page}または"
"@dfn{man page}です。GNUオペレーティングシステムではmanを、Infoでブラウズでき"
"る、より組織化されたマニュアルで置き換えることを目指しています。このプロセス"
"は終了していないので、manを読むことはまだ有用です。"

#. type: findex
#: original_texis/programs.texi:1149
#, no-wrap
msgid "manual-entry"
msgstr "manual-entry"

#. type: Plain text
#: original_texis/programs.texi:1160
msgid ""
"You can read the man page for an operating system command, library function, "
"or system call, with the @kbd{M-x man} command.  This prompts for a topic, "
"with completion (@pxref{Completion}), and runs the @command{man} program to "
"format the corresponding man page.  If the system permits, it runs "
"@command{man} asynchronously, so that you can keep on editing while the page "
"is being formatted.  The result goes in a buffer named @file{*Man @var{topic}"
"*}.  These buffers use a special major mode, Man mode, that facilitates "
"scrolling and jumping to other manual pages.  For details, type @kbd{C-h m} "
"while in a Man mode buffer."
msgstr ""
"オペレーティングシステムのコマンド、ライブラリー関数、システムコールにたいす"
"るman pageを、@kbd{M-x man}コマンドで読むことができます。このコマンドは補完つ"
"き(@ref{Completion}を参照してください)でトピック(topic)の入力を求め、対応する"
"man pageをフォーマットするために、@command{man}コマンドを実行します。そのシス"
"テムが許すなら、このコマンドは@command{man}を非同期で実行するので、ページが"
"フォーマットされる間、編集を続けることができます。フォーマットされた結果は"
"@file{*Man @var{topic}*}という名前のバッファーに表示されます。このバッファー"
"は、Manモードという特別なメジャーモードを使用します。これはスクロールや他の"
"man pageにジャンプする機能をもちます。詳細についてはManモードのバッファーで、"
"@kbd{C-h m}をタイプしてください。"

#. type: cindex
#: original_texis/programs.texi:1161
#, no-wrap
msgid "sections of manual pages"
msgstr "sections of manual pages"

#. type: Plain text
#: original_texis/programs.texi:1171
msgid ""
"Each man page belongs to one of ten or more @dfn{sections}, each named by a "
"digit or by a digit and a letter.  Sometimes there are man pages with the "
"same name in different sections.  To read a man page from a specific "
"section, type @samp{@var{topic}(@var{section})} or @samp{@var{section} "
"@var{topic}} when @kbd{M-x manual-entry} prompts for the topic.  For "
"example, the man page for the C library function @code{chmod} is in section "
"2, but there is a shell command of the same name, whose man page is in "
"section 1; to view the former, type @kbd{M-x manual-entry @key{RET} chmod(2) "
"@key{RET}}."
msgstr ""
"それぞれのman pageは、1つ以上の@dfn{セクション(sections)}に属します。セクショ"
"ンの名前は数字または数字と文字です。同じ名前のman pageが、複数のセクションに"
"存在することもあります。特定のセクションのman pageを読むには、@kbd{M-x "
"manual-entry}がトピックの入力を求める際、@samp{@var{topic}(@var{section})}ま"
"たは@samp{@var{section} @var{topic}}とタイプします。たとえばCのライブラリー関"
"数@code{chmod}はセクション2ですが、同じ名前のシェルコマンドのman pageはセク"
"ション1です。前者を閲覧するには、@kbd{M-x manual-entry @key{RET} chmod(2) "
"@key{RET}}とタイプしてください。"

#. type: vindex
#: original_texis/programs.texi:1172
#, no-wrap
msgid "Man-switches"
msgstr "Man-switches"

#. type: kindex
#: original_texis/programs.texi:1173
#, no-wrap
msgid "M-n @r{(Man mode)}"
msgstr "M-n @r{(Man mode)}"

#. type: kindex
#: original_texis/programs.texi:1174
#, no-wrap
msgid "M-p @r{(Man mode)}"
msgstr "M-p @r{(Man mode)}"

#. type: Plain text
#: original_texis/programs.texi:1183
msgid ""
"If you do not specify a section, @kbd{M-x man} normally displays only the "
"first man page found.  On some systems, the @code{man} program accepts a "
"@samp{-a} command-line option, which tells it to display all the man pages "
"for the specified topic.  To make use of this, change the value of the "
"variable @code{Man-switches} to @samp{\"-a\"}.  Then, in the Man mode "
"buffer, you can type @kbd{M-n} and @kbd{M-p} to switch between man pages in "
"different sections.  The mode line shows how many manual pages are available."
msgstr ""
"セクションを指定しないと、@kbd{M-x man}は通常、最初に見つかったman pageだけを"
"表示します。@code{man}に、コマンドラインオプション@samp{-a}を指定できるシステ"
"ムもいくつかあります。これは指定したトピックにたいするすべてのman pageを表示"
"するよう指定します。これを使用するには、変数@code{Man-switches}の値を"
"@samp{\"-a\"}に変更します。そうするとManモードのバッファーで、@kbd{M-n}と"
"@kbd{M-p}で異なるセクションのman pagfeを切り替えることができます。モードライ"
"ンには、利用可能なman pageの数が表示されます。"

#. type: findex
#: original_texis/programs.texi:1184
#, no-wrap
msgid "woman"
msgstr "woman"

#. type: cindex
#: original_texis/programs.texi:1185
#, no-wrap
msgid "manual pages, on MS-DOS/MS-Windows"
msgstr "manual pages, on MS-DOS/MS-Windows"

#. type: Plain text
#: original_texis/programs.texi:1192
msgid ""
"An alternative way of reading manual pages is the @kbd{M-x woman} command.  "
"Unlike @kbd{M-x man}, it does not run any external programs to format and "
"display the man pages; the formatting is done by Emacs, so it works on "
"systems such as MS-Windows where the @command{man} program may be "
"unavailable.  It prompts for a man page, and displays it in a buffer named "
"@file{*WoMan @var{section} @var{topic}}."
msgstr ""
"man pageを読む他の方法として、@kbd{M-x woman}コマンドがあります。@kbd{M-x "
"man}とは異なり、これはman pageをフォーマットするために外部のプログラムを実行"
"しないので、MS-Windowsのような、@command{man}プログラムが利用できないかもしれ"
"ないシステムでも機能します。このコマンドは、表示するman pageの入力を求め、そ"
"れを@file{*WoMan @var{section} @var{topic}}という名前のバッファーに表示しま"
"す。"

#. type: Plain text
#: original_texis/programs.texi:1196
msgid ""
"@kbd{M-x woman} computes the completion list for manpages the first time you "
"invoke the command.  With a numeric argument, it recomputes this list; this "
"is useful if you add or delete manual pages."
msgstr ""
"@kbd{M-x woman}は、コマンドを最初に呼び出したとき、man pageの補完リストを計算"
"します。数引数を指定すると、このリストを再計算します。これはman pageを追加・"
"削除したとき有用です。"

#. type: Plain text
#: original_texis/programs.texi:1201
msgid ""
"If you type a name of a manual page and @kbd{M-x woman} finds that several "
"manual pages by the same name exist in different sections, it pops up a "
"window with possible candidates asking you to choose one of them."
msgstr ""
"man pageの名前を入力して、@kbd{M-x woman}が複数のセクションで同じ名前のman "
"pageを見つけた場合、これはウィンドウをポップアップして利用可能な候補を示し、"
"それらから1つを選択するよう求めます。"

#. type: Plain text
#: original_texis/programs.texi:1203
msgid "For more information about setting up and using @kbd{M-x woman}, see"
msgstr "@kbd{M-x woman}のセットアップと使用についての情報は、"

#. type: ifinfo
#: original_texis/programs.texi:1206
msgid ""
"@ref{Top, WoMan, Browse UN*X Manual Pages WithOut Man, woman, The WoMan "
"Manual}."
msgstr ""
"@ref{Top, WoMan, Browse UN*X Manual Pages WithOut Man, woman, The WoMan "
"Manual}を参照してください。"

#. type: ifnotinfo
#: original_texis/programs.texi:1209
msgid "the WoMan Info manual, which is distributed with Emacs."
msgstr "Emacsとともに配布されているWoMan Infoマニュアルを参照してください。"

#. type: subsection
#: original_texis/programs.texi:1212
#, no-wrap
msgid "Emacs Lisp Documentation Lookup"
msgstr "Emacs Lispドキュメントの照会"

#. type: Plain text
#: original_texis/programs.texi:1218
msgid ""
"When editing Emacs Lisp code, you can use the commands @kbd{C-h f} "
"(@code{describe-function}) and @kbd{C-h v} (@code{describe-variable})  to "
"view the built-in documentation for the Lisp functions and variables that "
"you want to use.  @xref{Name Help}."
msgstr ""
"Emacs Lispコードを編集するとき、コマンド@kbd{C-h f} (@code{describe-"
"function})および@kbd{C-h v} (@code{describe-variable})で、使用したい関数また"
"は変数のビルトインドキュメントを閲覧できます。@ref{Name Help}を参照してくださ"
"い。"

#. type: cindex
#: original_texis/programs.texi:1219
#, no-wrap
msgid "Eldoc mode"
msgstr "Eldoc mode"

#. type: findex
#: original_texis/programs.texi:1220
#, no-wrap
msgid "eldoc-mode"
msgstr "eldoc-mode"

#. type: Plain text
#: original_texis/programs.texi:1228
msgid ""
"Eldoc is a buffer-local minor mode that helps with looking up Lisp "
"documentation.  When it is enabled, the echo area displays some useful "
"information whenever there is a Lisp function or variable at point; for a "
"function, it shows the argument list, and for a variable it shows the first "
"line of the variable's documentation string.  To toggle Eldoc mode, type "
"@kbd{M-x eldoc-mode}.  Eldoc mode can be used with the Emacs Lisp and Lisp "
"Interaction major modes."
msgstr ""
"Eldocモードは、Lispドキュメントを検索するのに助けとなる、バッファーローカルな"
"マイナーモードです。これが有効な場合、ポイントがLisp関数または変数にあるとき"
"は、有用な情報がエコーエリアに表示されます。関数の場合は引数リスト、変数の場"
"合は変数のドキュメントストリングの最初の行が表示されます。Eldocモードに切り替"
"えるには、@kbd{M-x eldoc-mode}とタイプします。Eldocモードは、メジャーモードの"
"Emacs LispモードおよびLisp Interactionモードとともに使用できます。"

#. type: section
#: original_texis/programs.texi:1230
#, no-wrap
msgid "Hideshow minor mode"
msgstr "Hideshowマイナーモード"

#. type: cindex
#: original_texis/programs.texi:1231
#, no-wrap
msgid "Hideshow mode"
msgstr "Hideshow mode"

#. type: cindex
#: original_texis/programs.texi:1232
#, no-wrap
msgid "mode, Hideshow"
msgstr "mode, Hideshow"

#. type: findex
#: original_texis/programs.texi:1234 original_texis/programs.texi:1255
#, no-wrap
msgid "hs-minor-mode"
msgstr "hs-minor-mode"

#. type: Plain text
#: original_texis/programs.texi:1239
msgid ""
"Hideshow mode is a buffer-local minor mode that allows you to selectively "
"display portions of a program, which are referred to as @dfn{blocks}.  Type "
"@kbd{M-x hs-minor-mode} to toggle this minor mode (@pxref{Minor Modes})."
msgstr ""
"Hideshowモードは、バッファーローカルなマイナーモードで、@dfn{ブロック}と呼ば"
"れるプログラムの一部を、選択的に表示させることができます。このマイナーモード"
"に切り替えるには、@kbd{M-x hs-minor-mode}とタイプします(@ref{Minor Modes}を参"
"照してください)。"

#. type: Plain text
#: original_texis/programs.texi:1246
msgid ""
"When you use Hideshow mode to hide a block, the block disappears from the "
"screen, to be replaced by an ellipsis (three periods in a row).  Just what "
"constitutes a block depends on the major mode.  In C mode and related modes, "
"blocks are delimited by braces, while in Lisp mode they are delimited by "
"parentheses.  Multi-line comments also count as blocks."
msgstr ""
"ブロックを非表示にするためにHideshowモードを使用したとき、そのブロックはスク"
"リーンに表示されなくなり、かわりに省略記号(3つのピリオド)に置き換えられます。"
"何をブロックと定めるかは、メジャーモードに依存します。Cモード、および関連する"
"モードでは、ブロックは大カッコ(braces)で区切られ、Lispモードでは丸カッコ"
"(parentheses)で区切られます。複数行のコメントもブロックとみなされます。"

#. type: Plain text
#: original_texis/programs.texi:1248
msgid "Hideshow mode provides the following commands:"
msgstr "Hideshowモードは以下のコマンドを提供します:"

#. type: findex
#: original_texis/programs.texi:1249
#, no-wrap
msgid "hs-hide-all"
msgstr "hs-hide-all"

#. type: findex
#: original_texis/programs.texi:1250
#, no-wrap
msgid "hs-hide-block"
msgstr "hs-hide-block"

#. type: findex
#: original_texis/programs.texi:1251
#, no-wrap
msgid "hs-show-all"
msgstr "hs-show-all"

#. type: findex
#: original_texis/programs.texi:1252
#, no-wrap
msgid "hs-show-block"
msgstr "hs-show-block"

#. type: findex
#: original_texis/programs.texi:1253
#, no-wrap
msgid "hs-show-region"
msgstr "hs-show-region"

#. type: findex
#: original_texis/programs.texi:1254
#, no-wrap
msgid "hs-hide-level"
msgstr "hs-hide-level"

#. type: item
#: original_texis/programs.texi:1256 original_texis/programs.texi:1264
#, no-wrap
msgid "C-c @@ C-h"
msgstr "C-c @@ C-h"

#. type: item
#: original_texis/programs.texi:1257 original_texis/programs.texi:1266
#, no-wrap
msgid "C-c @@ C-s"
msgstr "C-c @@ C-s"

#. type: item
#: original_texis/programs.texi:1258 original_texis/programs.texi:1272
#, no-wrap
msgid "C-c @@ C-M-h"
msgstr "C-c @@ C-M-h"

#. type: item
#: original_texis/programs.texi:1259 original_texis/programs.texi:1274
#, no-wrap
msgid "C-c @@ C-M-s"
msgstr "C-c @@ C-M-s"

#. type: kindex
#: original_texis/programs.texi:1260
#, no-wrap
msgid "C-c @@ C-r"
msgstr "C-c @@ C-r"

#. type: item
#: original_texis/programs.texi:1261 original_texis/programs.texi:1276
#, no-wrap
msgid "C-c @@ C-l"
msgstr "C-c @@ C-l"

#. type: item
#: original_texis/programs.texi:1262 original_texis/programs.texi:1270
#, no-wrap
msgid "S-Mouse-2"
msgstr "S-Mouse-2"

#. type: table
#: original_texis/programs.texi:1266
msgid "Hide the current block (@code{hs-hide-block})."
msgstr "カレントブロックを隠します(@code{hs-hide-block})。"

#. type: table
#: original_texis/programs.texi:1268
msgid "Show the current block (@code{hs-show-block})."
msgstr "カレントブロックを表示します(@code{hs-show-block})。"

#. type: item
#: original_texis/programs.texi:1268
#, no-wrap
msgid "C-c @@ C-c"
msgstr "C-c @@ C-c"

#. type: table
#: original_texis/programs.texi:1270
msgid "Either hide or show the current block (@code{hs-toggle-hiding})."
msgstr ""
"カレントブロックを表示、または非表示にします(@code{hs-toggle-hiding})。"

#. type: table
#: original_texis/programs.texi:1272
msgid ""
"Toggle hiding for the block you click on (@code{hs-mouse-toggle-hiding})."
msgstr ""
"クリックしたブロックの表示・非表示を切り替えます(@code{hs-mouse-toggle-"
"hiding})。"

#. type: table
#: original_texis/programs.texi:1274
msgid "Hide all top-level blocks (@code{hs-hide-all})."
msgstr "トップレベルのすべてのブロックを隠します(@code{hs-hide-all})。"

#. type: table
#: original_texis/programs.texi:1276
msgid "Show all blocks in the buffer (@code{hs-show-all})."
msgstr "バッファーのすべてのブロックを表示します(@code{hs-show-all})。"

#. type: table
#: original_texis/programs.texi:1279
msgid "Hide all blocks @var{n} levels below this block (@code{hs-hide-level})."
msgstr ""
"現在のブロックの、@var{n}レベル下のすべてのブロックを隠します(@code{hs-hide-"
"level})。"

#. type: item
#: original_texis/programs.texi:1281 original_texis/programs.texi:1287
#, no-wrap
msgid "hs-hide-comments-when-hiding-all"
msgstr "hs-hide-comments-when-hiding-all"

#. type: item
#: original_texis/programs.texi:1282 original_texis/programs.texi:1291
#, no-wrap
msgid "hs-isearch-open"
msgstr "hs-isearch-open"

#. type: vindex
#: original_texis/programs.texi:1283
#, no-wrap
msgid "hs-special-modes-alist"
msgstr "hs-special-modes-alist"

#. type: Plain text
#: original_texis/programs.texi:1285
msgid "These variables can be used to customize Hideshow mode:"
msgstr "以下の変数はHideshowモードをカスタマイズするのに使用されます:"

#. type: table
#: original_texis/programs.texi:1290
msgid ""
"If non-@code{nil}, @kbd{C-c @@ C-M-h} (@code{hs-hide-all}) hides comments "
"too."
msgstr ""
"非@code{nil}の場合、@kbd{C-c @@ C-M-h} (@code{hs-hide-all})はコメントも隠しま"
"す。"

#. type: table
#: original_texis/programs.texi:1298
msgid ""
"This variable specifies the conditions under which incremental search should "
"unhide a hidden block when matching text occurs within the block.  Its value "
"should be either @code{code} (unhide only code blocks), @code{comment} "
"(unhide only comments), @code{t} (unhide both code blocks and comments), or "
"@code{nil} (unhide neither code blocks nor comments).  The default value is "
"@code{code}."
msgstr ""
"この変数は、インクリメンタル検索でマッチするテキストが隠されたブロックにある"
"とき、それを表示すべき条件を指定します。変数の値は、@code{code}(コードブロッ"
"クだけを表示)、@code{comment}(コメントだけを表示)、@code{t}(コードブロックと"
"コメントの両方を表示)、@code{nil}(どちらも表示しない)のいずれかです。デフォル"
"ト値は@code{code}です。"

#. type: section
#: original_texis/programs.texi:1301
#, no-wrap
msgid "Completion for Symbol Names"
msgstr "シンボル名の補完"

#. type: cindex
#: original_texis/programs.texi:1302
#, no-wrap
msgid "completion (symbol names)"
msgstr "completion (symbol names)"

#. type: Plain text
#: original_texis/programs.texi:1306
msgid ""
"Completion is normally done in the minibuffer (@pxref{Completion}), but you "
"can also complete symbol names in ordinary Emacs buffers."
msgstr ""
"補完は通常ミニバッファーで行われますが(@ref{Completion}を参照してください)、"
"シンボル名の補完を、普通のEmacsバッファーで行うこともできます。"

#. type: kindex
#: original_texis/programs.texi:1307
#, no-wrap
msgid "M-TAB"
msgstr "M-TAB"

#. type: kindex
#: original_texis/programs.texi:1308
#, no-wrap
msgid "C-M-i"
msgstr "C-M-i"

#. type: Plain text
#: original_texis/programs.texi:1314
msgid ""
"In programming language modes, type @kbd{C-M-i} or @kbd{M-@key{TAB}} to "
"complete the partial symbol before point.  On graphical displays, the @kbd{M-"
"@key{TAB}} key is usually reserved by the window manager for switching "
"graphical windows, so you should type @kbd{C-M-i} or @kbd{@key{ESC} "
"@key{TAB}} instead."
msgstr ""
"プログラミング言語のモードでは、@kbd{C-M-i}または@kbd{M-@key{TAB}}とタイプす"
"ることにより、ポイントの前のシンボル名の一部にたいして補完を行うことができま"
"す。グラフィカルなディスプレーでは、@kbd{M-@key{TAB}}キーは通常、グラフィカル"
"なウィンドウの切り替え用にウィンドウマネージャーに予約されているので、かわり"
"に@kbd{C-M-i}または@kbd{@key{ESC} @key{TAB}}とタイプする必要があります。"

#. type: cindex
#: original_texis/programs.texi:1315
#, no-wrap
msgid "tags-based completion"
msgstr "tags-based completion"

#. type: findex
#: original_texis/programs.texi:1316
#, no-wrap
msgid "completion-at-point"
msgstr "completion-at-point"

#. type: cindex
#: original_texis/programs.texi:1317
#, no-wrap
msgid "Lisp symbol completion"
msgstr "Lisp symbol completion"

#. type: cindex
#: original_texis/programs.texi:1318
#, no-wrap
msgid "completion (Lisp symbols)"
msgstr "completion (Lisp symbols)"

#. type: Plain text
#: original_texis/programs.texi:1328
msgid ""
"In most programming language modes, @kbd{C-M-i} (or @kbd{M-@key{TAB}}) "
"invokes the command @code{completion-at-point}, which generates its "
"completion list in a flexible way.  If Semantic mode is enabled, it tries to "
"use the Semantic parser data for completion (@pxref{Semantic}).  If Semantic "
"mode is not enabled or fails at performing completion, it tries to complete "
"using the selected tags table (@pxref{Tags}).  If in Emacs Lisp mode, it "
"performs completion using the function, variable, or property names defined "
"in the current Emacs session."
msgstr ""
"ほとんどのプログラミング言語のモードでは、@kbd{C-M-i} (または@kbd{M-"
"@key{TAB}})は、コマンド@code{completion-at-point}を呼び出します。これは柔軟な"
"方法で補完リストを生成します。Semanticモードが有効な場合は、補完にSemantic"
"パーサーのデータを使用することを試みます(@ref{Semantic}を参照してください)。"
"Semanticモードが無効、または補完の処理に失敗した場合、選択されたtagsテーブル"
"(@ref{Tags}を参照してください)を使用して補完を試みます。Emacs Lispモードの場"
"合、カレントのEmacsセッションで定義された関数、変数、プロパティー名を使用して"
"補完を行います。"

#. type: Plain text
#: original_texis/programs.texi:1333
msgid ""
"In all other respects, in-buffer symbol completion behaves like minibuffer "
"completion.  For instance, if Emacs cannot complete to a unique symbol, it "
"displays a list of completion alternatives in another window.  "
"@xref{Completion}."
msgstr ""
"他の点では、バッファーでのシンボル補完はミニバッファーでの補完と同様に振る舞"
"います。たとえば、Emacsが一意なシンボルを補完できない場合、他のウィンドウに補"
"完候補のリストを表示します。@ref{Completion}を参照してください。"

#. type: Plain text
#: original_texis/programs.texi:1336
msgid ""
"In Text mode and related modes, @kbd{M-@key{TAB}} completes words based on "
"the spell-checker's dictionary.  @xref{Spelling}."
msgstr ""
"Textモード、および関連するモードでは、@kbd{M-@key{TAB}}はスペルチェッカーの辞"
"書にもとづいて単語を補完します。@ref{Spelling}を参照してください。"

#. type: cindex
#: original_texis/programs.texi:1339
#, no-wrap
msgid "camel case"
msgstr "camel case"

#. type: Plain text
#: original_texis/programs.texi:1346
msgid ""
"Some programming styles make use of mixed-case (or ``CamelCase'')  symbols "
"like @samp{unReadableSymbol}.  (In the GNU project, we recommend using "
"underscores to separate words within an identifier, rather than using case "
"distinctions.)  Emacs has various features to make it easier to deal with "
"such symbols."
msgstr ""
"いくつかのプログラミングスタイルでは、@samp{unReadableSymbol}のような大文字小"
"文字が混ざった(``CamelCase''の)シンボルを使います(GNUプロジェクトでは、識別子"
"の単語の区切りに、大文字小文字の違いではなく、アンダースコアを使用することを"
"推奨しています)。Emacsには、そのようなシンボルに簡単に対処するための、さまざ"
"まな機能があります。"

#. type: cindex
#: original_texis/programs.texi:1347
#, no-wrap
msgid "Glasses mode"
msgstr "Glasses mode"

#. type: findex
#: original_texis/programs.texi:1348
#, no-wrap
msgid "mode, Glasses"
msgstr "mode, Glasses"

#. type: Plain text
#: original_texis/programs.texi:1354
msgid ""
"Glasses mode is a buffer-local minor mode that makes it easier to read such "
"symbols, by altering how they are displayed.  By default, it displays extra "
"underscores between each lower-case letter and the following capital "
"letter.  This does not alter the buffer text, only how it is displayed."
msgstr ""
"バッファーローカルなマイナーモードのGlassesモードは、そのようなシンボルが表示"
"される方法を変更することにより、それらを読みやすくします。デフォルトでは、小"
"文字とそれに続く大文字の間に余分なアンダースコアを表示します。これはバッ"
"ファーのテキストを変更するわけではなく、表示の仕方だけを変更します。"

#. type: Plain text
#: original_texis/programs.texi:1359
msgid ""
"To toggle Glasses mode, type @kbd{M-x glasses-mode} (@pxref{Minor Modes}).  "
"When Glasses mode is enabled, the minor mode indicator @samp{o^o} appears in "
"the mode line.  For more information about Glasses mode, type @kbd{C-h P "
"glasses @key{RET}}."
msgstr ""
"Glassesモードに切り替えるには、@kbd{M-x glasses-mode}とタイプします"
"(@ref{Minor Modes}を参照してください)。Glassesモードが有効な場合、モードライ"
"ンのマイナーモードインジケーターには@samp{o^o}が表示されます。Glassesモードに"
"間する情報を得るには、@kbd{C-h P glasses @key{RET}}とタイプしてください。"

#. type: cindex
#: original_texis/programs.texi:1360
#, no-wrap
msgid "Subword mode"
msgstr "Subword mode"

#. type: findex
#: original_texis/programs.texi:1361
#, no-wrap
msgid "subword-mode"
msgstr "subword-mode"

#. type: Plain text
#: original_texis/programs.texi:1367
msgid ""
"Subword mode is another buffer-local minor mode.  In subword mode, Emacs's "
"word commands recognize upper case letters in @samp{StudlyCapsIdentifiers} "
"as word boundaries.  When Subword mode is enabled, the minor mode indicator "
"@samp{,} appears in the mode line.  See also the similar @code{superword-"
"mode} (@pxref{Misc for Programs})."
msgstr ""
"Subwordモードは、バッファーローカルなマイナーモードです。Subwordモードでは、"
"Emacsの単語コマンドは、@samp{StudlyCapsIdentifiers}のような、単語の中の大文字"
"を単語境界と認識します。Subwordモードが有効なときは、モードラインのマイナー"
"モードインジケーターに@samp{,}が表示されます。同様なモード@code{superword-"
"mode}も参照してください(@ref{Misc for Programs}を参照してください)。"

#. type: cindex
#: original_texis/programs.texi:1370
#, no-wrap
msgid "Semantic package"
msgstr "Semantic package"

#. type: Plain text
#: original_texis/programs.texi:1375
msgid ""
"Semantic is a package that provides language-aware editing commands based on "
"@code{source code parsers}.  This section provides a brief description of "
"Semantic; for full details,"
msgstr ""
"Semanticは、@code{ソースコードパーサー(source code parsers)}にもとづく、言語"
"認識(language-aware)による編集のためのコマンドを提供します。このセクション"
"は、Semanticについての簡単な説明を提供します。完全な詳細については、"

#. type: ifnottex
#: original_texis/programs.texi:1377
msgid "see @ref{Top, Semantic,, semantic, Semantic}."
msgstr "@ref{Top, Semantic,, semantic, Semantic}を参照してください。"

#. type: iftex
#: original_texis/programs.texi:1380
msgid "see the Semantic Info manual, which is distributed with Emacs."
msgstr ""
"Emacsとともに配布されているSemanticのInfoマニュアルを参照してください。"

#. type: Plain text
#: original_texis/programs.texi:1389
msgid ""
"Most of the ``language aware'' features in Emacs, such as Font Lock mode "
"(@pxref{Font Lock}), rely on ``rules of thumb''@footnote{Regular expressions "
"and syntax tables.} that usually give good results but are never completely "
"exact.  In contrast, the parsers used by Semantic have an exact "
"understanding of programming language syntax.  This allows Semantic to "
"provide search, navigation, and completion commands that are powerful and "
"precise."
msgstr ""
"Font Lockモード(@ref{Font Lock}を参照してください)のような、Emacsの``言語認識"
"機能(language aware features)''のほとんどは、``rules of thumb''@footnote{正規"
"表現と構文テーブル。}にもとづいています。これは大抵の場合においてよい結果を得"
"られますが、完全に正しい結果は決して得られない、ということを意味します。対照"
"的に、Semanticで使用されるパーサーは、プログラミング言語の構文を正確に理解し"
"ます。これによりSemanticは、より強力で正確な検索、操作、補完コマンドが提供で"
"きるのです。"

#. type: cindex
#: original_texis/programs.texi:1390
#, no-wrap
msgid "Semantic mode"
msgstr "Semantic mode"

#. type: cindex
#: original_texis/programs.texi:1391
#, no-wrap
msgid "mode, Semantic"
msgstr "mode, Semantic"

#. type: Plain text
#: original_texis/programs.texi:1395
msgid ""
"To begin using Semantic, type @kbd{M-x semantic-mode} or click on the menu "
"item named @samp{Source Code Parsers (Semantic)} in the @samp{Tools} menu.  "
"This enables Semantic mode, a global minor mode."
msgstr ""
"Semanticの使用を開始するには、@kbd{M-x semantic-mode}をタイプするか、"
"@samp{Tools}メニューの、@samp{Source Code Parsers (Semantic)}という名前のメ"
"ニューをクリックします。これはグローバルなマイナーモードのSemanticモードを有"
"効にします。"

#. type: Plain text
#: original_texis/programs.texi:1400
msgid ""
"When Semantic mode is enabled, Emacs automatically attempts to parse each "
"file you visit.  Currently, Semantic understands C, C++, Scheme, Javascript, "
"Java, HTML, and Make.  Within each parsed buffer, the following commands are "
"available:"
msgstr ""
"Semanticモードが有効な場合、Emacsはファイルをvisitするたびに自動的にパースを"
"試みます。現在のところ、SemanticはC、C++、Scheme、Javascript、Java、HTML、"
"Makeを理解します。パースされたバッファーでは以下のコマンドが利用可能です:"

#. type: kindex
#: original_texis/programs.texi:1402 original_texis/programs.texi:1403
#, no-wrap
msgid "C-c , j"
msgstr "C-c , j"

#. type: table
#: original_texis/programs.texi:1406
msgid ""
"Prompt for the name of a function defined in the current file, and move "
"point there (@code{semantic-complete-jump-local})."
msgstr ""
"カレントファイルで定義された関数名の入力を求め、ポイントをそこに移動します"
"(@code{semantic-complete-jump-local})。"

#. type: kindex
#: original_texis/programs.texi:1407 original_texis/programs.texi:1408
#, no-wrap
msgid "C-c , J"
msgstr "C-c , J"

#. type: table
#: original_texis/programs.texi:1411
msgid ""
"Prompt for the name of a function defined in any file Emacs has parsed, and "
"move point there (@code{semantic-complete-jump})."
msgstr ""
"Emacsがパースした任意のファイルで定義された関数名の入力を求め、ポイントをそこ"
"に移動します(@code{semantic-complete-jump})。"

#. type: kindex
#: original_texis/programs.texi:1412 original_texis/programs.texi:1413
#, no-wrap
msgid "C-c , @key{SPC}"
msgstr "C-c , @key{SPC}"

#. type: table
#: original_texis/programs.texi:1420
msgid ""
"Display a list of possible completions for the symbol at point "
"(@code{semantic-complete-analyze-inline}).  This also activates a set of "
"special key bindings for choosing a completion: @key{RET} accepts the "
"current completion, @kbd{M-n} and @kbd{M-p} cycle through possible "
"completions, @key{TAB} completes as far as possible and then cycles, and "
"@kbd{C-g} or any other key aborts completion."
msgstr ""
"ポイント位置のシンボルにたいして可能な補完候補のリストを表示します"
"(@code{semantic-complete-analyze-inline})。これは補完候補を選択するための特別"
"なキーバインドのセットをアクティブにします。@key{RET}はカレントの補完候補を選"
"択し、@kbd{M-n}と@kbd{M-p}は可能な補完候補を巡回、@key{TAB}は可能なところまで"
"補完を行ってから巡回、そして、@kbd{C-g}または他のキーは補完を中止します。"

#. type: kindex
#: original_texis/programs.texi:1421 original_texis/programs.texi:1422
#, no-wrap
msgid "C-c , l"
msgstr "C-c , l"

#. type: table
#: original_texis/programs.texi:1425
msgid ""
"Display a list of the possible completions of the symbol at point, in "
"another window (@code{semantic-analyze-possible-completions})."
msgstr ""
"ポイント位置のシンボルにたいして可能な補完候補のリストを、他のウィンドウに表"
"示します(@code{semantic-analyze-possible-completions})。"

#. type: Plain text
#: original_texis/programs.texi:1432
msgid ""
"In addition to the above commands, the Semantic package provides a variety "
"of other ways to make use of parser information.  For instance, you can use "
"it to display a list of completions when Emacs is idle."
msgstr ""
"上記のコマンドに加えて、Semanticパッケージは、パーサー情報を使用する他のさま"
"ざまな方法を提供します。たとえば、Emacsがアイドルのとき、補完候補のリストを表"
"示するために、それを使用することができます。"

#. type: ifnottex
#: original_texis/programs.texi:1434
msgid "@xref{Top, Semantic,, semantic, Semantic}, for details."
msgstr "詳細は、@ref{Top, Semantic,, semantic, Semantic}を参照してください。"

#. type: section
#: original_texis/programs.texi:1437
#, no-wrap
msgid "Other Features Useful for Editing Programs"
msgstr "プログラムを編集するための他の便利な機能"

#. type: Plain text
#: original_texis/programs.texi:1441
msgid ""
"Some Emacs commands that aren't designed specifically for editing programs "
"are useful for that nonetheless."
msgstr ""
"プログラムを編集するためにデザインされているわけではありませんが、有用なEmacs"
"コマンドもいくつかあります"

#. type: Plain text
#: original_texis/programs.texi:1452
msgid ""
"The Emacs commands that operate on words, sentences and paragraphs are "
"useful for editing code.  Most symbols names contain words (@pxref{Words}), "
"while sentences can be found in strings and comments (@pxref{Sentences}).  "
"As for paragraphs, they are defined in most programming language modes to "
"begin and end at blank lines (@pxref{Paragraphs}).  Therefore, judicious use "
"of blank lines to make the program clearer will also provide useful chunks "
"of text for the paragraph commands to work on.  Auto Fill mode, if enabled "
"in a programming language major mode, indents the new lines which it creates."
msgstr ""
"単語、センテンス、パラグラフを操作するEmacsコマンドは、コードを編集するのに有"
"用です。ほとんどのシンボル名は単語(@ref{Words}を参照してください)を含んでお"
"り、文字列やコメントの中でセンテンス(@ref{Sentences}を参照してください)を見つ"
"けることができます。パラグラフについては、ほとんどのプログラミング言語のモー"
"ドは空行をパラグラフの開始および終了に定義しています。したがって空行を注意深"
"く使用してプログラムをクリアーにすることにより、パラグラフコマンドが機能でき"
"る、有意なテキストの集合を提供することができます。プログラミング言語のモード"
"でAuto Fillモードが有効な場合、新しい行の作成でインデントされるようになりま"
"す。"

#. type: findex
#: original_texis/programs.texi:1453
#, no-wrap
msgid "superword-mode"
msgstr "superword-mode"

#. type: Plain text
#: original_texis/programs.texi:1457
msgid ""
"Superword mode is a buffer-local minor mode that causes editing and motion "
"commands to treat symbols (e.g., @samp{this_is_a_symbol}) as words.  When "
"Superword mode is enabled, the minor mode indicator"
msgstr ""
"Superwordはバッファーローカルなマイナーモードで、編集および移動コマンドがシン"
"ボル(たとえば@samp{this_is_a_symbol})を単語として扱うようになります。"
"Superwordモードが有効な場合、モードラインのマイナーモードインジケーターに、"

#. type: math{#1}
#: original_texis/programs.texi:1459
msgid "^2"
msgstr "^2"

#. type: samp{#1}
#: original_texis/programs.texi:1462
msgid "²"
msgstr "²"

#. type: Plain text
#: original_texis/programs.texi:1465
msgid ""
"appears in the mode line.  See also the similar @code{subword-mode} "
"(@pxref{MixedCase Words})."
msgstr ""
"が表示されます。同様なモード@code{subword-mode}も参照してください"
"(@ref{MixedCase Words}を参照してください)。"

#. type: findex
#: original_texis/programs.texi:1466
#, no-wrap
msgid "electric-layout-mode"
msgstr "electric-layout-mode"

#. type: Plain text
#: original_texis/programs.texi:1471
msgid ""
"Electric Layout mode (@kbd{M-x electric-layout-mode}) is a global minor mode "
"that automatically inserts newlines when you type certain characters; for "
"example, @samp{@{}, @samp{@}} and @samp{;} in Javascript mode."
msgstr ""
"Electric Layoutモード(@kbd{M-x electric-layout-mode})はグローバルなマイナー"
"モードで、特定の文字をタイプしたときに自動的に改行を挿入します。たとえば"
"Javascriptモードでは@samp{@{}、@samp{@}}、@samp{;}などです。"

#. type: Plain text
#: original_texis/programs.texi:1477
msgid ""
"Apart from Hideshow mode (@pxref{Hideshow}), another way to selectively "
"display parts of a program is to use the selective display feature "
"(@pxref{Selective Display}).  Programming modes often also support Outline "
"minor mode (@pxref{Outline Mode}), which can be used with the Foldout "
"package (@pxref{Foldout})."
msgstr ""
"Hideshowモード(@ref{Hideshow}を参照してください)は別として、プログラムの一部"
"を選択的に表示するには、選択的な表示機能(@ref{Selective Display}を参照してく"
"ださい)を使う方法があります。プログラミングのモードには、Foldoutパッケージ"
"(@ref{Foldout}を参照してください)とともに使用できる、Outline minorマイナー"
"モード(@ref{Outline Mode}を参照してください)をサポートするものもあります。"

#. type: ifinfo
#: original_texis/programs.texi:1481
msgid ""
"The ``automatic typing'' features may be useful for writing programs.  "
"@xref{Top,,Autotyping, autotype, Autotyping}."
msgstr ""
"プログラムを記述するためには``automatic typing''機能が有用でしょう。"
"@ref{Top,,Autotyping, autotype, Autotyping}を参照してください。"

#. type: findex
#: original_texis/programs.texi:1483
#, no-wrap
msgid "prettify-symbols-mode"
msgstr "prettify-symbols-mode"

#. type: Plain text
#: original_texis/programs.texi:1492
msgid ""
"Prettify Symbols mode is a buffer-local minor mode that replaces certain "
"strings with more ``attractive'' versions for display purposes.  For "
"example, in Emacs Lisp mode, it replaces the string ``lambda'' with the "
"Greek lambda character.  You may wish to use this in non-programming modes "
"as well.  You can customize the mode by adding more entries to "
"@code{prettify-symbols-alist}.  There is also a global version, @code{global-"
"prettify-symbols-mode}, which enables the mode in all buffers that support "
"it."
msgstr ""
"Prettify Symbolsモードはバッファーローカルなマイナーモードで、特定の文字の表"
"示をより``アトラクティブ(attractive: 見栄えのする)''なバージョンに置き換えま"
"す。たとえばEmacs Lispモードでは、文字列``lambda''を、ギリシャ文字のラムダに"
"置き換えます。このモードを、プログラミングとは関係のないモードで使いたいと思"
"うかもしれません。@code{prettify-symbols-alist}にエントリーを追加することによ"
"り、このモードをカスタマイズできます。グローバルなバージョン@code{global-"
"prettify-symbols-mode}は、サポートするすべてのモードでこれを有効にします。"

#. type: section
#: original_texis/programs.texi:1495
#, no-wrap
msgid "C and Related Modes"
msgstr "Cおよび関連するモード"

#. type: cindex
#: original_texis/programs.texi:1496
#, no-wrap
msgid "C mode"
msgstr "C mode"

#. type: cindex
#: original_texis/programs.texi:1497
#, no-wrap
msgid "Java mode"
msgstr "Java mode"

#. type: cindex
#: original_texis/programs.texi:1498
#, no-wrap
msgid "Pike mode"
msgstr "Pike mode"

#. type: cindex
#: original_texis/programs.texi:1499
#, no-wrap
msgid "IDL mode"
msgstr "IDL mode"

#. type: cindex
#: original_texis/programs.texi:1500
#, no-wrap
msgid "CORBA IDL mode"
msgstr "CORBA IDL mode"

#. type: cindex
#: original_texis/programs.texi:1501
#, no-wrap
msgid "Objective C mode"
msgstr "Objective C mode"

#. type: cindex
#: original_texis/programs.texi:1502
#, no-wrap
msgid "C++ mode"
msgstr "C++ mode"

#. type: cindex
#: original_texis/programs.texi:1503
#, no-wrap
msgid "AWK mode"
msgstr "AWK mode"

#. type: cindex
#: original_texis/programs.texi:1504
#, no-wrap
msgid "mode, Java"
msgstr "mode, Java"

#. type: cindex
#: original_texis/programs.texi:1505
#, no-wrap
msgid "mode, C"
msgstr "mode, C"

#. type: cindex
#: original_texis/programs.texi:1506
#, no-wrap
msgid "mode, C++"
msgstr "mode, C++"

#. type: cindex
#: original_texis/programs.texi:1507
#, no-wrap
msgid "mode, Objective C"
msgstr "mode, Objective C"

#. type: cindex
#: original_texis/programs.texi:1508
#, no-wrap
msgid "mode, CORBA IDL"
msgstr "mode, CORBA IDL"

#. type: cindex
#: original_texis/programs.texi:1509
#, no-wrap
msgid "mode, Pike"
msgstr "mode, Pike"

#. type: cindex
#: original_texis/programs.texi:1510
#, no-wrap
msgid "mode, AWK"
msgstr "mode, AWK"

#. type: Plain text
#: original_texis/programs.texi:1515
msgid ""
"This section gives a brief description of the special features available in "
"C, C++, Objective-C, Java, CORBA IDL, Pike and AWK modes.  (These are called "
"``C mode and related modes''.)"
msgstr ""
"このセクションではC、C++、Objective-C、Java、CORBA IDL、Pike、AWKのためのモー"
"ド(これらは``Cモードおよび関連するモード''と呼ばれます)で利用できる、特別な機"
"能を簡単に説明します。"

#. type: ifinfo
#: original_texis/programs.texi:1517
msgid "@xref{Top,, CC Mode, ccmode, CC Mode}, for more details."
msgstr "詳細は、@ref{Top,, CC Mode, ccmode, CC Mode}を参照してください。"

#. type: ifnotinfo
#: original_texis/programs.texi:1521
msgid ""
"For more details, see the CC mode Info manual, which is distributed with "
"Emacs."
msgstr ""
"詳細は、Emacsとともに配布されるCC modeのInfoマニュアルを参照してください。"

#. type: node
#: original_texis/programs.texi:1529 original_texis/programs.texi:1531
#, no-wrap
msgid "Motion in C"
msgstr "Motion in C"

#. type: menuentry
#: original_texis/programs.texi:1529
msgid "Commands to move by C statements, etc."
msgstr "Cステートメント単位での移動、その他。"

#. type: node
#: original_texis/programs.texi:1529 original_texis/programs.texi:1595
#, no-wrap
msgid "Electric C"
msgstr "Electric C"

#. type: menuentry
#: original_texis/programs.texi:1529
msgid "Colon and other chars can automatically reindent."
msgstr "コロンおよび他の文字による、自動的な再インデント。"

#. type: node
#: original_texis/programs.texi:1529 original_texis/programs.texi:1638
#, no-wrap
msgid "Hungry Delete"
msgstr "Hungry Delete"

#. type: menuentry
#: original_texis/programs.texi:1529
msgid "A more powerful DEL command."
msgstr "より強力なDELコマンド。"

#. type: node
#: original_texis/programs.texi:1529 original_texis/programs.texi:1685
#, no-wrap
msgid "Other C Commands"
msgstr "Other C Commands"

#. type: menuentry
#: original_texis/programs.texi:1529
msgid "Filling comments, viewing expansion of macros, and other neat features."
msgstr "コメントのフィル、マクロ展開の閲覧、その他のクールな機能。"

#. type: subsection
#: original_texis/programs.texi:1532
#, no-wrap
msgid "C Mode Motion Commands"
msgstr "Cモードの移動コマンド"

#. type: Plain text
#: original_texis/programs.texi:1536
msgid ""
"This section describes commands for moving point, in C mode and related "
"modes."
msgstr ""
"このセクションでは、Cモードおよび関連するモードで、ポイントを移動するコマンド"
"を説明します。"

#. type: findex
#: original_texis/programs.texi:1540
#, no-wrap
msgid "c-beginning-of-defun"
msgstr "c-beginning-of-defun"

#. type: findex
#: original_texis/programs.texi:1541
#, no-wrap
msgid "c-end-of-defun"
msgstr "c-end-of-defun"

#. type: table
#: original_texis/programs.texi:1549
msgid ""
"Move point to the beginning or end of the current function or top-level "
"definition.  In languages with enclosing scopes (such as C++'s classes) the "
"@dfn{current function} is the immediate one, possibly inside a scope.  "
"Otherwise it is the one defined by the least enclosing braces.  (By "
"contrast, @code{beginning-of-defun} and @code{end-of-defun} search for "
"braces in column zero.)  @xref{Moving by Defuns}."
msgstr ""
"カレント関数またはトップレベルの定義の、先頭または最後にポイントを移動しま"
"す。スコープによる囲い(C++のclassなど)をもつ言語では、@dfn{カレント関数"
"(current function)}はスコープ内の隣接する関数です。そうでない場合、それは大"
"カッコ(braces)で囲まれることにより定義されます。@ref{Moving by Defuns}を参照"
"してください。"

#. type: item
#: original_texis/programs.texi:1550
#, no-wrap
msgid "C-c C-u"
msgstr "C-c C-u"

#. type: kindex
#: original_texis/programs.texi:1551
#, no-wrap
msgid "C-c C-u @r{(C mode)}"
msgstr "C-c C-u @r{(C mode)}"

#. type: findex
#: original_texis/programs.texi:1552
#, no-wrap
msgid "c-up-conditional"
msgstr "c-up-conditional"

#. type: table
#: original_texis/programs.texi:1557
msgid ""
"Move point back to the containing preprocessor conditional, leaving the mark "
"behind.  A prefix argument acts as a repeat count.  With a negative "
"argument, move point forward to the end of the containing preprocessor "
"conditional."
msgstr ""
"マークを置いたまま、ポイントを含むプリプロセッサー条件を後方に移動します。プ"
"レフィクス引数は、繰り返し回数として振る舞います。負の引数を指定すると、ポイ"
"ントを含むプリプロセッサー条件の最後に、前方へポイントを移動します。"

#. type: table
#: original_texis/programs.texi:1561
msgid ""
"@samp{#elif} is equivalent to @samp{#else} followed by @samp{#if}, so the "
"function will stop at a @samp{#elif} when going backward, but not when going "
"forward."
msgstr ""
"@samp{#elif}は、@samp{#else}の後に@samp{#if}を続けたのと同じなので、この関数"
"は後方に移動するときは@samp{#elif}で止まりますが、前方に移動するときは止まり"
"ません。"

#. type: item
#: original_texis/programs.texi:1562
#, no-wrap
msgid "C-c C-p"
msgstr "C-c C-p"

#. type: kindex
#: original_texis/programs.texi:1563
#, no-wrap
msgid "C-c C-p @r{(C mode)}"
msgstr "C-c C-p @r{(C mode)}"

#. type: findex
#: original_texis/programs.texi:1564
#, no-wrap
msgid "c-backward-conditional"
msgstr "c-backward-conditional"

#. type: table
#: original_texis/programs.texi:1568
msgid ""
"Move point back over a preprocessor conditional, leaving the mark behind.  A "
"prefix argument acts as a repeat count.  With a negative argument, move "
"forward."
msgstr ""
"マークを置いたまま、プリプロセッサー条件を越えてポイントを後方に移動します。"
"プレフィクス引数は、繰り返し回数として振る舞います。負の引数の場合は前方に移"
"動します。"

#. type: item
#: original_texis/programs.texi:1569
#, no-wrap
msgid "C-c C-n"
msgstr "C-c C-n"

#. type: kindex
#: original_texis/programs.texi:1570
#, no-wrap
msgid "C-c C-n @r{(C mode)}"
msgstr "C-c C-n @r{(C mode)}"

#. type: findex
#: original_texis/programs.texi:1571
#, no-wrap
msgid "c-forward-conditional"
msgstr "c-forward-conditional"

#. type: table
#: original_texis/programs.texi:1575
msgid ""
"Move point forward across a preprocessor conditional, leaving the mark "
"behind.  A prefix argument acts as a repeat count.  With a negative "
"argument, move backward."
msgstr ""
"マークを置いたまま、プリプロセッサー条件を越えて、ポイントを前方に移動しま"
"す。プレフィクス引数は、繰り返し回数として振る舞います。負の引数の場合は後方"
"に移動します。"

#. type: item
#: original_texis/programs.texi:1576
#, no-wrap
msgid "M-a"
msgstr "M-a"

#. type: kindex
#: original_texis/programs.texi:1577
#, no-wrap
msgid "M-a (C mode)"
msgstr "M-a (C mode)"

#. type: findex
#: original_texis/programs.texi:1578
#, no-wrap
msgid "c-beginning-of-statement"
msgstr "c-beginning-of-statement"

#. type: table
#: original_texis/programs.texi:1583
msgid ""
"Move point to the beginning of the innermost C statement (@code{c-beginning-"
"of-statement}).  If point is already at the beginning of a statement, move "
"to the beginning of the preceding statement.  With prefix argument @var{n}, "
"move back @var{n} @minus{} 1 statements."
msgstr ""
"一番内側のCステートメントの先頭に、ポイントを移動します(@code{c-beginning-of-"
"statement})。すでにポイントがステートメントの先頭にある場合は、その前のステー"
"トメントの先頭に移動します。プレフィクス引数@var{n}を指定した場合、@var{n} "
"@minus{} 1個前のステートメントに、後方へ移動します。"

#. type: table
#: original_texis/programs.texi:1586
msgid ""
"In comments or in strings which span more than one line, this command moves "
"by sentences instead of statements."
msgstr ""
"2行以上のコメントまたは文字列の場合、このコマンドはステートメントではなくセン"
"テンス単位で移動します。"

#. type: item
#: original_texis/programs.texi:1587
#, no-wrap
msgid "M-e"
msgstr "M-e"

#. type: kindex
#: original_texis/programs.texi:1588
#, no-wrap
msgid "M-e (C mode)"
msgstr "M-e (C mode)"

#. type: findex
#: original_texis/programs.texi:1589
#, no-wrap
msgid "c-end-of-statement"
msgstr "c-end-of-statement"

#. type: table
#: original_texis/programs.texi:1593
msgid ""
"Move point to the end of the innermost C statement or sentence; like @kbd{M-"
"a} except that it moves in the other direction (@code{c-end-of-statement})."
msgstr ""
"Cステートメントまたはセンテンスの最後に、ポイントを移動します。@kbd{M-a}と同"
"様ですが、これは逆の方向に移動します(@code{c-end-of-statement})。"

#. type: subsection
#: original_texis/programs.texi:1596
#, no-wrap
msgid "Electric C Characters"
msgstr "エレクトリックC文字"

#. type: Plain text
#: original_texis/programs.texi:1604
msgid ""
"In C mode and related modes, certain printing characters are "
"@dfn{electric}---in addition to inserting themselves, they also reindent the "
"current line, and optionally also insert newlines.  The ``electric'' "
"characters are @kbd{@{}, @kbd{@}}, @kbd{:}, @kbd{#}, @kbd{;}, @kbd{,}, "
"@kbd{<}, @kbd{>}, @kbd{/}, @kbd{*}, @kbd{(}, and @kbd{)}."
msgstr ""
"Cモードおよび関連するモードでは、特定の文字は@dfn{エレクトリック(electric)} "
"--- つまり自分自身を挿入するのに加えて、カレント行を再インデントしたり、オプ"
"ションで改行を挿入します。``エレクトリック''な文字は、@kbd{@{}、@kbd{@}}、"
"@kbd{:}、@kbd{#}、@kbd{;}、@kbd{,}、@kbd{<}、@kbd{>}、@kbd{/}、@kbd{*}、"
"@kbd{(}、@kbd{)}です。"

#. type: Plain text
#: original_texis/programs.texi:1610
msgid ""
"You might find electric indentation inconvenient if you are editing "
"chaotically indented code.  If you are new to CC Mode, you might find it "
"disconcerting.  You can toggle electric action with the command @kbd{C-c C-"
"l}; when it is enabled, @samp{/l} appears in the mode line after the mode "
"name:"
msgstr ""
"混乱したインデントのコードを編集している場合には、エレクトリックなインデント"
"を不便だと感じるかもしれません。CCモードになれていない場合、それはあなたを当"
"惑させるかもしれません。エレクトリックな動作は、コマンド@kbd{C-c C-l}で切り替"
"えることができます。有効な場合には、モードラインのモード名の後ろに@samp{/l}が"
"表示されます。"

#. type: item
#: original_texis/programs.texi:1612
#, no-wrap
msgid "C-c C-l"
msgstr "C-c C-l"

#. type: kindex
#: original_texis/programs.texi:1613
#, no-wrap
msgid "C-c C-l @r{(C mode)}"
msgstr "C-c C-l @r{(C mode)}"

#. type: findex
#: original_texis/programs.texi:1614
#, no-wrap
msgid "c-toggle-electric-state"
msgstr "c-toggle-electric-state"

#. type: table
#: original_texis/programs.texi:1618
msgid ""
"Toggle electric action (@code{c-toggle-electric-state}).  With a positive "
"prefix argument, this command enables electric action, with a negative one "
"it disables it."
msgstr ""
"エレクトリックな動作を切り替えます(@code{c-toggle-electric-state})。正のプレ"
"フィクス引数を指定した場合、、このコマンドはエレクトリックな動作を有効にし、"
"負の引数の場合は無効にします。"

#. type: Plain text
#: original_texis/programs.texi:1624
msgid ""
"Electric characters insert newlines only when, in addition to the electric "
"state, the @dfn{auto-newline} feature is enabled (indicated by @samp{/la} in "
"the mode line after the mode name).  You can turn this feature on or off "
"with the command @kbd{C-c C-a}:"
msgstr ""
"エレクトリックな文字は、エレクトリックな状態に加えて、@dfn{自動改行(auto-"
"newline)}の機能が有効な場合(モードラインのモード名の後ろに@samp{/la}が表示さ"
"れている状態のとき)だけ、改行を挿入します。この機能は@kbd{C-c C-a}で、オンま"
"たはオフに切り替えることができます。"

#. type: item
#: original_texis/programs.texi:1626
#, no-wrap
msgid "C-c C-a"
msgstr "C-c C-a"

#. type: kindex
#: original_texis/programs.texi:1627
#, no-wrap
msgid "C-c C-a @r{(C mode)}"
msgstr "C-c C-a @r{(C mode)}"

#. type: findex
#: original_texis/programs.texi:1628
#, no-wrap
msgid "c-toggle-auto-newline"
msgstr "c-toggle-auto-newline"

#. type: table
#: original_texis/programs.texi:1632
msgid ""
"Toggle the auto-newline feature (@code{c-toggle-auto-newline}).  With a "
"prefix argument, this command turns the auto-newline feature on if the "
"argument is positive, and off if it is negative."
msgstr ""
"自動改行機能を切り替えます(@code{c-toggle-auto-newline})。このコマンドにプレ"
"フィクス引数を指定した場合、引数が正のときは自動改行機能をオン、負のときはオ"
"フに切り替えます。"

#. type: Plain text
#: original_texis/programs.texi:1637
msgid ""
"Usually the CC Mode style configures the exact circumstances in which Emacs "
"inserts auto-newlines.  You can also configure this directly.  @xref{Custom "
"Auto-newlines,,, ccmode, The CC Mode Manual}."
msgstr ""
"CCモードのスタイルは通常、Emacsが自動改行する正確な状況を設定します。これを直"
"接設定することもできます。@ref{Custom Auto-newlines,,, ccmode, The CC Mode "
"Manual}を参照してください。"

#. type: subsection
#: original_texis/programs.texi:1639
#, no-wrap
msgid "Hungry Delete Feature in C"
msgstr "Cの欲張りな削除機能"

#. type: cindex
#: original_texis/programs.texi:1640
#, no-wrap
msgid "hungry deletion (C Mode)"
msgstr "hungry deletion (C Mode)"

#. type: Plain text
#: original_texis/programs.texi:1647
msgid ""
"If you want to delete an entire block of whitespace at point, you can use "
"@dfn{hungry deletion}.  This deletes all the contiguous whitespace either "
"before point or after point in a single operation.  @dfn{Whitespace} here "
"includes tabs and newlines, but not comments or preprocessor commands."
msgstr ""
"ポイント位置の空白文字のブロック全体を削除したい場合は、@dfn{hungry "
"deletion(欲張りな削除)}を使うことができます。これはポイントの前後の、一連の空"
"白文字を1回の操作で削除します。@dfn{空白文字(whitespace)}にはタブと改行が含ま"
"れますが、コメントとプリプロセッサーコマンドは含まれません。"

#. type: item
#: original_texis/programs.texi:1649
#, no-wrap
msgid "C-c C-@key{DEL}"
msgstr "C-c C-@key{DEL}"

#. type: itemx
#: original_texis/programs.texi:1650
#, no-wrap
msgid "C-c @key{DEL}"
msgstr "C-c @key{DEL}"

#. type: findex
#: original_texis/programs.texi:1651
#, no-wrap
msgid "c-hungry-delete-backwards"
msgstr "c-hungry-delete-backwards"

#. type: kindex
#: original_texis/programs.texi:1652
#, no-wrap
msgid "C-c C-@key{DEL} (C Mode)"
msgstr "C-c C-@key{DEL} (C Mode)"

#. type: kindex
#: original_texis/programs.texi:1653
#, no-wrap
msgid "C-c @key{DEL} (C Mode)"
msgstr "C-c @key{DEL} (C Mode)"

#. type: table
#: original_texis/programs.texi:1655
msgid ""
"Delete the entire block of whitespace preceding point (@code{c-hungry-delete-"
"backwards})."
msgstr ""
"ポイントの前の空白文字のブロック全体を削除します(@code{c-hungry-delete-"
"backwards})。"

#. type: item
#: original_texis/programs.texi:1656
#, no-wrap
msgid "C-c C-d"
msgstr "C-c C-d"

#. type: itemx
#: original_texis/programs.texi:1657
#, no-wrap
msgid "C-c C-@key{Delete}"
msgstr "C-c C-@key{Delete}"

#. type: itemx
#: original_texis/programs.texi:1658
#, no-wrap
msgid "C-c @key{Delete}"
msgstr "C-c @key{Delete}"

#. type: findex
#: original_texis/programs.texi:1659
#, no-wrap
msgid "c-hungry-delete-forward"
msgstr "c-hungry-delete-forward"

#. type: kindex
#: original_texis/programs.texi:1660
#, no-wrap
msgid "C-c C-d (C Mode)"
msgstr "C-c C-d (C Mode)"

#. type: kindex
#: original_texis/programs.texi:1661
#, no-wrap
msgid "C-c C-@key{Delete} (C Mode)"
msgstr "C-c C-@key{Delete} (C Mode)"

#. type: kindex
#: original_texis/programs.texi:1662
#, no-wrap
msgid "C-c @key{Delete} (C Mode)"
msgstr "C-c @key{Delete} (C Mode)"

#. type: table
#: original_texis/programs.texi:1664
msgid ""
"Delete the entire block of whitespace after point (@code{c-hungry-delete-"
"forward})."
msgstr ""
"ポイントの後の空白文字のブロック全体を削除します(@code{c-hungry-delete-"
"forward})。"

#. type: Plain text
#: original_texis/programs.texi:1671
msgid ""
"As an alternative to the above commands, you can enable @dfn{hungry delete "
"mode}.  When this feature is enabled (indicated by @samp{/h} in the mode "
"line after the mode name), a single @key{DEL} deletes all preceding "
"whitespace, not just one space, and a single @kbd{C-d} (but @emph{not} plain "
"@key{Delete}) deletes all following whitespace."
msgstr ""
"上記のコマンドのかわりに、@dfn{hungry deleteモード}を有効にすることができま"
"す。この機能が有効な場合(モードラインのモード名の後ろに@samp{/h}が示されま"
"す)、1回の@key{DEL}で1つのスペースではなくポイントの前に続くすべての空白文字"
"を削除し、@kbd{C-d}(@key{Delete}では@emph{ありません})でポイントの後に続くす"
"べての空白文字を削除します。"

#. type: item
#: original_texis/programs.texi:1673
#, no-wrap
msgid "M-x c-toggle-hungry-state"
msgstr "M-x c-toggle-hungry-state"

#. type: findex
#: original_texis/programs.texi:1674
#, no-wrap
msgid "c-toggle-hungry-state"
msgstr "c-toggle-hungry-state"

#. type: table
#: original_texis/programs.texi:1679
msgid ""
"Toggle the hungry-delete feature (@code{c-toggle-hungry-state}).  With a "
"prefix argument, this command turns the hungry-delete feature on if the "
"argument is positive, and off if it is negative."
msgstr ""
"hungry-delete機能を切り替えます(@code{c-toggle-hungry-state})。このコマンドに"
"プレフィクス引数を指定した場合、正の場合はhungry-delete機能をオン、負の場合は"
"オフにします。"

#. type: vindex
#: original_texis/programs.texi:1681
#, no-wrap
msgid "c-hungry-delete-key"
msgstr "c-hungry-delete-key"

#. type: Plain text
#: original_texis/programs.texi:1684
msgid ""
"The variable @code{c-hungry-delete-key} controls whether the hungry-delete "
"feature is enabled."
msgstr ""
"変数@code{c-hungry-delete-key}は、hungry-delete機能を有効にするかを制御しま"
"す。"

#. type: subsection
#: original_texis/programs.texi:1686
#, no-wrap
msgid "Other Commands for C Mode"
msgstr "Cモードのその他のコマンド"

#. type: item
#: original_texis/programs.texi:1689
#, no-wrap
msgid "M-x c-context-line-break"
msgstr "M-x c-context-line-break"

#. type: findex
#: original_texis/programs.texi:1690
#, no-wrap
msgid "c-context-line-break"
msgstr "c-context-line-break"

#. type: table
#: original_texis/programs.texi:1696
msgid ""
"This command inserts a line break and indents the new line in a manner "
"appropriate to the context.  In normal code, it does the work of @key{RET} "
"(@code{newline}), in a C preprocessor line it additionally inserts a "
"@samp{\\} at the line break, and within comments it's like @kbd{M-j} "
"(@code{c-indent-new-comment-line})."
msgstr ""
"このコマンドは、コンテキストに応じたマナーで、行ブレークの挿入と新しい行のイ"
"ンデントを行います。通常のコードの中では、@key{RET} (@code{newline})の働きを"
"しますが、Cプリプロセッサー行の中では、行ブレークに追加で@samp{\\}を挿入し、"
"コメントの中では@kbd{M-j} (@code{c-indent-new-comment-line})のように動作しま"
"す。"

#. type: table
#: original_texis/programs.texi:1701
msgid ""
"@code{c-context-line-break} isn't bound to a key by default, but it needs a "
"binding to be useful.  The following code will bind it to @key{RET}.  We use "
"@code{c-initialization-hook} here to make sure the keymap is loaded before "
"we try to change it."
msgstr ""
"デフォルトでは、@code{c-context-line-break}はキーにバインドされていませんが、"
"便利に使うためには、キーにバインドする必要があります。以下のコードは、このコ"
"マンドを@key{RET}にバインドします。この例ではキーマップを変更する前に、それが"
"ロードされていることを確実にするために@code{c-initialization-hook}を使用して"
"います。"

#. type: example
#: original_texis/programs.texi:1707
#, no-wrap
msgid ""
"(defun my-bind-clb ()\n"
"  (define-key c-mode-base-map \"\\C-m\"\n"
"              'c-context-line-break))\n"
"(add-hook 'c-initialization-hook 'my-bind-clb)\n"
msgstr ""
"(defun my-bind-clb ()\n"
"  (define-key c-mode-base-map \"\\C-m\"\n"
"              'c-context-line-break))\n"
"(add-hook 'c-initialization-hook 'my-bind-clb)\n"

#. type: table
#: original_texis/programs.texi:1712
msgid ""
"Put mark at the end of a function definition, and put point at the beginning "
"(@code{c-mark-function})."
msgstr ""
"マークを関数定義の最後に配し、ポイントを先頭に配します(@code{c-mark-"
"function})。"

#. type: item
#: original_texis/programs.texi:1713
#, no-wrap
msgid "M-q"
msgstr "M-q"

#. type: kindex
#: original_texis/programs.texi:1714
#, no-wrap
msgid "M-q @r{(C mode)}"
msgstr "M-q @r{(C mode)}"

#. type: findex
#: original_texis/programs.texi:1715
#, no-wrap
msgid "c-fill-paragraph"
msgstr "c-fill-paragraph"

#. type: table
#: original_texis/programs.texi:1720
msgid ""
"Fill a paragraph, handling C and C++ comments (@code{c-fill-paragraph}).  If "
"any part of the current line is a comment or within a comment, this command "
"fills the comment or the paragraph of it that point is in, preserving the "
"comment indentation and comment delimiters."
msgstr ""
"CおよびC++のコメントに対応した、パラグラフのフィルを行います(@code{c-fill-"
"paragraph})。カレント行がコメントを含む、またはカレント行がコメントの場合、こ"
"のコマンドはコメントのインデントとコメント区切りを保ちながら、コメントまたは"
"ポイントがあるパラグラフをフィルします。"

#. type: item
#: original_texis/programs.texi:1721
#, no-wrap
msgid "C-c C-e"
msgstr "C-c C-e"

#. type: cindex
#: original_texis/programs.texi:1722
#, no-wrap
msgid "macro expansion in C"
msgstr "macro expansion in C"

#. type: cindex
#: original_texis/programs.texi:1723
#, no-wrap
msgid "expansion of C macros"
msgstr "expansion of C macros"

#. type: findex
#: original_texis/programs.texi:1724
#, no-wrap
msgid "c-macro-expand"
msgstr "c-macro-expand"

#. type: kindex
#: original_texis/programs.texi:1725
#, no-wrap
msgid "C-c C-e @r{(C mode)}"
msgstr "C-c C-e @r{(C mode)}"

#. type: table
#: original_texis/programs.texi:1731
msgid ""
"Run the C preprocessor on the text in the region, and show the result, which "
"includes the expansion of all the macro calls (@code{c-macro-expand}).  The "
"buffer text before the region is also included in preprocessing, for the "
"sake of macros defined there, but the output from this part isn't shown."
msgstr ""
"リージョンのテキストにたいして、Cプリプロセッサーを実行して、すべてのマクロ呼"
"び出しの展開を含めて、結果を表示します。リージョンの前にあるバッファーのテキ"
"ストも、マクロ定義がそこにあるためにプリプロセスされますが、この部分は出力に"
"は表示されません。"

#. type: table
#: original_texis/programs.texi:1735
msgid ""
"When you are debugging C code that uses macros, sometimes it is hard to "
"figure out precisely how the macros expand.  With this command, you don't "
"have to figure it out; you can see the expansions."
msgstr ""
"マクロを使用するCコードをデバッグするとき、マクロがどのように展開されるか正確"
"に解明するのが難しいときがあります。このコマンドにより、展開結果を見ることが"
"できるので、わざわざ解明する必要がなくなります。"

#. type: item
#: original_texis/programs.texi:1736
#, no-wrap
msgid "C-c C-\\"
msgstr "C-c C-\\"

#. type: findex
#: original_texis/programs.texi:1737
#, no-wrap
msgid "c-backslash-region"
msgstr "c-backslash-region"

#. type: kindex
#: original_texis/programs.texi:1738
#, no-wrap
msgid "C-c C-\\ @r{(C mode)}"
msgstr "C-c C-\\ @r{(C mode)}"

#. type: table
#: original_texis/programs.texi:1742
msgid ""
"Insert or align @samp{\\} characters at the ends of the lines of the region "
"(@code{c-backslash-region}).  This is useful after writing or editing a C "
"macro definition."
msgstr ""
"リージョン内の各行末に、@samp{\\}文字を挿入、または位置揃えします(@code{c-"
"backslash-region})。これはCマクロ定義を、記述または編集した後に便利です。"

#. type: table
#: original_texis/programs.texi:1747
msgid ""
"If a line already ends in @samp{\\}, this command adjusts the amount of "
"whitespace before it.  Otherwise, it inserts a new @samp{\\}.  However, the "
"last line in the region is treated specially; no @samp{\\} is inserted on "
"that line, and any @samp{\\} there is deleted."
msgstr ""
"行がすでに(@code{c-backslash-region})で終了されている場合、このコマンドはそれ"
"の前の空白文字の数を調整します。そうでない場合は、新規に@samp{\\}を挿入しま"
"す。しかしリージョンの最後の行は特別に扱われます。この行には@samp{\\}は挿入さ"
"れず、もし@samp{\\}がある場合は削除します。"

#. type: item
#: original_texis/programs.texi:1748
#, no-wrap
msgid "M-x cpp-highlight-buffer"
msgstr "M-x cpp-highlight-buffer"

#. type: cindex
#: original_texis/programs.texi:1749
#, no-wrap
msgid "preprocessor highlighting"
msgstr "preprocessor highlighting"

#. type: findex
#: original_texis/programs.texi:1750
#, no-wrap
msgid "cpp-highlight-buffer"
msgstr "cpp-highlight-buffer"

#. type: table
#: original_texis/programs.texi:1757
msgid ""
"Highlight parts of the text according to its preprocessor conditionals.  "
"This command displays another buffer named @file{*CPP Edit*}, which serves "
"as a graphic menu for selecting how to display particular kinds of "
"conditionals and their contents.  After changing various settings, click on "
"@samp{[A]pply these settings} (or go to that buffer and type @kbd{a}) to "
"rehighlight the C mode buffer accordingly."
msgstr ""
"プリプロセッサー条件に対応するテキスト部分を、ハイライトします。このコマンド"
"は@file{*CPP Edit*}という名前の別のバッファーを表示します。これは特定の条件と"
"その内容をどのように表示するかを選択するための、グラフィックメニューを供しま"
"す。さまざまなセッティングを変更した後に、@samp{[A]pply these settings}をク"
"リック(またはそのバッファーで@kbd{a}をタイプ)すると、それに応じてCモードの"
"バッファーが再ハイライトされます。"

#. type: item
#: original_texis/programs.texi:1758
#, no-wrap
msgid "C-c C-s"
msgstr "C-c C-s"

#. type: findex
#: original_texis/programs.texi:1759
#, no-wrap
msgid "c-show-syntactic-information"
msgstr "c-show-syntactic-information"

#. type: kindex
#: original_texis/programs.texi:1760
#, no-wrap
msgid "C-c C-s @r{(C mode)}"
msgstr "C-c C-s @r{(C mode)}"

#. type: table
#: original_texis/programs.texi:1764
msgid ""
"Display the syntactic information about the current source line (@code{c-"
"show-syntactic-information}).  This information directs how the line is "
"indented."
msgstr ""
"カレントソース行の構文的な情報を表示します(@code{c-show-syntactic-"
"information})。この情報は、その行がどのようにインデントされるべきか決定するた"
"めに使用されます。"

#. type: item
#: original_texis/programs.texi:1765
#, no-wrap
msgid "M-x cwarn-mode"
msgstr "M-x cwarn-mode"

#. type: itemx
#: original_texis/programs.texi:1766
#, no-wrap
msgid "M-x global-cwarn-mode"
msgstr "M-x global-cwarn-mode"

#. type: findex
#: original_texis/programs.texi:1767
#, no-wrap
msgid "cwarn-mode"
msgstr "cwarn-mode"

#. type: vindex
#: original_texis/programs.texi:1768 original_texis/programs.texi:1769
#, no-wrap
msgid "global-cwarn-mode"
msgstr "global-cwarn-mode"

#. type: cindex
#: original_texis/programs.texi:1770
#, no-wrap
msgid "CWarn mode"
msgstr "CWarn mode"

#. type: cindex
#: original_texis/programs.texi:1771
#, no-wrap
msgid "suspicious constructions in C, C++"
msgstr "suspicious constructions in C, C++"

#. type: table
#: original_texis/programs.texi:1773
msgid "CWarn minor mode highlights certain suspicious C and C++ constructions:"
msgstr ""
"CWarnマイナーモードは、ある種の疑わしいCおよびC++の構文をハイライトします。"

#. type: itemize
#: original_texis/programs.texi:1777
msgid "Assignments inside expressions."
msgstr "式の中での値の割り当て。"

#. type: itemize
#: original_texis/programs.texi:1780
msgid ""
"Semicolon following immediately after @samp{if}, @samp{for}, and "
"@samp{while} (except after a @samp{do @dots{} while} statement);"
msgstr ""
"@samp{if}、@samp{for}、@samp{while}(@samp{do @dots{} while}命令は除く)の直後"
"のセミコロン。"

#. type: itemize
#: original_texis/programs.texi:1782
msgid "C++ functions with reference parameters."
msgstr "参照パラメーターをともなうC++関数。"

#. type: table
#: original_texis/programs.texi:1790
msgid ""
"You can enable the mode for one buffer with the command @kbd{M-x cwarn-"
"mode}, or for all suitable buffers with the command @kbd{M-x global-cwarn-"
"mode} or by customizing the variable @code{global-cwarn-mode}.  You must "
"also enable Font Lock mode to make it work."
msgstr ""
"このモードを1つのバッファーにたいして有効にするにはコマンド@kbd{M-x cwarn-"
"mode}、すべての適合するバッファーにたいして有効にするにはコマンド@kbd{M-x "
"global-cwarn-mode}、または変数@code{global-cwarn-mode}をカスタマイズします。"
"これが機能するためには、Font Lockモードも有効にしなければなりません。"

#. type: item
#: original_texis/programs.texi:1791
#, no-wrap
msgid "M-x hide-ifdef-mode"
msgstr "M-x hide-ifdef-mode"

#. type: findex
#: original_texis/programs.texi:1792
#, no-wrap
msgid "hide-ifdef-mode"
msgstr "hide-ifdef-mode"

#. type: cindex
#: original_texis/programs.texi:1793
#, no-wrap
msgid "Hide-ifdef mode"
msgstr "Hide-ifdef mode"

#. type: vindex
#: original_texis/programs.texi:1794
#, no-wrap
msgid "hide-ifdef-shadow"
msgstr "hide-ifdef-shadow"

#. type: table
#: original_texis/programs.texi:1801
msgid ""
"Hide-ifdef minor mode hides selected code within @samp{#if} and "
"@samp{#ifdef} preprocessor blocks.  If you change the variable @code{hide-"
"ifdef-shadow} to @code{t}, Hide-ifdef minor mode ``shadows'' preprocessor "
"blocks by displaying them with a less prominent face, instead of hiding them "
"entirely.  See the documentation string of @code{hide-ifdef-mode} for more "
"information."
msgstr ""
"Hide-ifdefマイナーモードは、プリプロセッサーブロック@samp{#if}および"
"@samp{#ifdef}の中の選択されたコードを隠します。変数@code{hide-ifdef-shadow}を"
"@code{t}に変更した場合、Hide-ifdefマイナーモードははプリプロセッサーブロック"
"を隠すかわりに、より目立たないフェイスでそれらのブロックを``shadows''します。"
"詳細は、@code{hide-ifdef-mode}のドキュメント文字列を参照してください。"

#. type: item
#: original_texis/programs.texi:1802
#, no-wrap
msgid "M-x ff-find-related-file"
msgstr "M-x ff-find-related-file"

#. type: cindex
#: original_texis/programs.texi:1803
#, no-wrap
msgid "related files"
msgstr "related files"

#. type: findex
#: original_texis/programs.texi:1804
#, no-wrap
msgid "ff-find-related-file"
msgstr "ff-find-related-file"

#. type: vindex
#: original_texis/programs.texi:1805
#, no-wrap
msgid "ff-related-file-alist"
msgstr "ff-related-file-alist"

#. type: table
#: original_texis/programs.texi:1811
msgid ""
"Find a file ``related'' in a special way to the file visited by the current "
"buffer.  Typically this will be the header file corresponding to a C/C++ "
"source file, or vice versa.  The variable @code{ff-related-file-alist} "
"specifies how to compute related file names."
msgstr ""
"カレントバッファーでvisitされたファイルに``関連する''ファイルを、特別な方法で"
"検索します。通常これはC/C++ソースファイルにたいするヘッダーファイル、またはそ"
"の逆です。変数@code{ff-related-file-alist}は、関連するファイル名をどのように"
"計算するかを指定します。"

#. type: cindex
#: original_texis/programs.texi:1816
#, no-wrap
msgid "Asm mode"
msgstr "Asm mode"

#. type: cindex
#: original_texis/programs.texi:1817
#, no-wrap
msgid "assembler mode"
msgstr "assembler mode"

#. type: Plain text
#: original_texis/programs.texi:1820
msgid ""
"Asm mode is a major mode for editing files of assembler code.  It defines "
"these commands:"
msgstr ""
"Asmモードは、アセンブラーコードのファイルを編集するためのメジャーモードです。"
"このモードは、以下の3つのコマンドを定義します:"

#. type: table
#: original_texis/programs.texi:1825
msgid "@code{tab-to-tab-stop}."
msgstr "@code{tab-to-tab-stop}."

#. type: item
#: original_texis/programs.texi:1825
#, no-wrap
msgid "C-j"
msgstr "C-j"

#. type: table
#: original_texis/programs.texi:1827
msgid "Insert a newline and then indent using @code{tab-to-tab-stop}."
msgstr "改行を挿入してから、@code{tab-to-tab-stop}を使ってインデントします。"

#. type: item
#: original_texis/programs.texi:1827
#, no-wrap
msgid ":"
msgstr ":"

#. type: table
#: original_texis/programs.texi:1830
msgid ""
"Insert a colon and then remove the indentation from before the label "
"preceding colon.  Then do @code{tab-to-tab-stop}."
msgstr ""
"コロンを挿入してから、コロンの前のラベルからインデントを削除します。その後、"
"@code{tab-to-tab-stop}を実行します。"

#. type: item
#: original_texis/programs.texi:1830
#, no-wrap
msgid ";"
msgstr ";"

#. type: table
#: original_texis/programs.texi:1832
msgid "Insert or align a comment."
msgstr "コメントの挿入または位置揃えをします。"

#. type: Plain text
#: original_texis/programs.texi:1836
msgid ""
"The variable @code{asm-comment-char} specifies which character starts "
"comments in assembler syntax."
msgstr ""
"変数@code{asm-comment-char}はアセンブラー構文でコメントを開始する文字を指定し"
"ます。"

#. type: include
#: original_texis/programs.texi:1838
#, no-wrap
msgid "fortran-xtra.texi"
msgstr "fortran-xtra.texi"
