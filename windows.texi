@c ===========================================================================
@c
@c This file was generated with po4a. Translate the source file.
@c
@c ===========================================================================
@c This is part of the Emacs manual.
@c Copyright (C) 1985-1987, 1993-1995, 1997, 2000-2015 Free Software
@c Foundation, Inc.
@c See file emacs.texi for copying conditions.
@node Windows
@chapter Multiple Windows
@cindex windows in Emacs
@cindex multiple windows in Emacs

  Emacsのフレームは、2つ以上のウィンドウに分割できます。複数のウィンドウで異なるバッファーを表示したり、1つのバッファーの異なる部分を表示できます。複数フレームは自ずと複数ウィンドウになります。なぜならフレームには、それぞれウィンドウがあるからです。ウィンドウは1つのフレームだけに属します。

@menu
* Basic Window::             Emacsウィンドウの紹介。
* Split Window::             既存のウィンドウを分割して新しいウィンドウを作る。
* Other Window::             他のウィンドウへの移動と操作。
* Pop Up Window::            他のウィンドウのファイルまたはバッファーの検索。
* Change Window::            ウィンドウの削除とサイズ変更。
* Displaying Buffers::       Emacsがバッファーを表示するためにウィンドウを選択する方法。
* Window Convenience::       ウィンドウ処理の便利な機能。
@end menu

@node Basic Window
@section Concepts of Emacs Windows

  Emacsの各ウィンドウには、常に1つのEmacsバッファーが表示されます。1つのバッファーは、複数のウィンドウに表示される場合があります。この場合、バッファーのテキストへの任意の変更は、それが表示されているすべてのウィンドウで表示されます。しかし各ウィンドウは独自にポイント値をもっているので、ウィンドウごとにバッファーの異なる部分を表示できます。

@cindex selected window
  常に1つのEmacsウィンドウが、@dfn{選択されたウィンドウ}となります。このウィンドウに表示されているバッファーが、カレントバッファーとなります。グラフィカルなディスプレーでは、選択されたウィンドウのカーソルは、点滅する塗りつぶされたカーソルとなり、選択されていないウィンドウでは、中抜きボックスのカーソルになります。テキスト端末では、カーソルは選択されたウィンドウだけで描画されます。@ref{Cursor
Display}を参照してください。

  ポイントを移動するコマンドは、選択されたEmacsウィンドウのポイント値だけに影響します。他のEmacsウィンドウのポイント値は、たとえ同じバッファーを表示していたとしても変更されません。これと同じことは、@kbd{C-x
b}のようなバッファー切り替えコマンドについても言えます。これらは他のウィンドウには影響を与えません。しかし@kbd{C-x 4
b}のような、別のウィンドウを選択して、バッファーを切り替えるコマンドもあります。(たとえば)@kbd{C-h f}
(@code{describe-function})や@kbd{C-x C-b}
(@code{list-buffers})を含む、ウィンドウで情報を表示するコマンドは、選択されたウィンドウに影響を与えることなく、選択されていないウィンドウのバッファーを切り替えます。

  複数ウィンドウで同じバッファーを表示しているとき、これらは異なるリージョンを持ちます。なぜなら、それらは異なるポイント値を持つことができるからです。しかしバッファーごとにマーク位置は1つだけなので、これらは同じマーク位置をもちます。

  それぞれのウィンドウには、独自のモードラインがあり、それにはバッファー名、変更状態、そのウィンドウに表示されているバッファーのメジャーモードとマイナーモードが表示されます。選択されたウィンドウのモードラインは、異なる色で表示されます。詳細については、@ref{Mode
Line}を参照してください。

@node Split Window
@section Splitting Windows

@table @kbd
@item C-x 2
選択されたウィンドウを上下に2分割します(@code{split-window-below})。
@item C-x 3
選択されたウィンドウを左右に2分割します(@code{split-window-right})。
@item C-Mouse-2
ウィンドウのモードライン上では、ウィンドウを分割します。
@end table

@kindex C-x 2
@findex split-window-below
  @kbd{C-x 2}
(@code{split-window-below})は、選択されたウィンドウを上下に2つのウィンドウに分割します。分割した後は、上が選択されたウィンドウになり、新たに分割されたウィンドウが下になります。2つのウィンドウは最初同じポイント値をもち、(可能な限り)同じバッファー部分を表示します。必要ならポイントをスクリーン上に残したまま、ウィンドウをスクロールできます。デフォルトでは2つのウィンドウの高さは、元のウィンドウの高さの半分になります。正の数引数は上のウィンドウの高さが何行分かを指定し、負の数引数は下のウィンドウが何行分の高さかを指定します。

@vindex split-window-keep-point
  変数@code{split-window-keep-point}を@code{nil}に変更すると、@kbd{C-x
2}はスクリーンに表示されるテキストができるだけ前と同じになるように、ウィンドウに表示されるバッファー部分と、各ウィンドウのポイント位置を調整します。さらにポイントが元のウィンドウの下半分にあったときは、上ではなく下のウィンドウが選択されます。

@kindex C-x 3
@findex split-window-right
  @kbd{C-x 3}
(@code{split-window-right})は、選択されたウィンドウを左右に2つのウィンドウに分割します。左のウィンドウが選択されたウィンドウとなり、右のウィンドウには同じバッファーの同じ部分が表示され、ポイント位置も同じです。正の数引数は左のウィンドウの幅を列数で指定し、負の数引数は右のウィンドウの幅を数引数で指定します。

@vindex truncate-partial-width-windows
  ウィンドウを@kbd{C-x
3}で分割すると、分割されたウィンドウの幅はフレーム全体の幅より小さくなります。ウィンドウの幅が狭くなりすぎると、継続行が使われたバッファーを読むことが困難になる場合があります(@ref{Continuation
Lines}を参照してください)。したがってウィンドウの幅が50列より狭くなったとき、Emacsは自動的に行を切り詰めに切り替えます。この切り詰めは、変数@code{truncate-lines}の値に関係なく発生します(@ref{Line
Truncation}を参照してください)。@code{truncate-lines}のかわりに、この自動切り詰めを制御するのは、変数@code{truncate-partial-width-windows}です。この変数の値が正の整数(デフォルトは50)の場合、それは自動的な行切り詰めが発生する前の、分割ウィンドウの最小幅を指定します。この値が@code{nil}の場合、自動的な行切り詰めは無効です。他の非@code{nil}値では、分割されたウィンドウの幅に関係なく、Emacsは行を切り詰めます。

  テキスト端末では、左右に分割されたウィンドウを垂直に分割する分割線は、@code{vertical-border}フェイスで描画されます。

@kindex C-Mouse-2 @r{(mode line)}
@kindex C-Mouse-2 @r{(scroll bar)}
  ウィンドウのモードライン上で@kbd{C-Mouse-2}をクリックすると、クリックした位置に垂直分割線を配してウィンドウを分割します。Emacsがコンパイルされた方法に依存しますが、ウィンドウのスクロールバー上で@kbd{C-Mouse-2}をクリックすると、クリックした位置に水平分割線を配してウィンドウを分割します(この機能は、EmacsがGTK+のスクロールバーを使っているときは機能しません)。

@vindex window-resize-pixelwise
  デフォルトでは、ウィンドウを分割したとき、Emacsは分割されたウィンドウのサイズをフレームのデフォルトフォントの整数倍にします。これによりスクリーンが正確に2分割されない場合があります。変数@code{window-resize-pixelwise}を非@code{nil}値にセットすると、Emacsは分割されたウィンドウのサイズを、同じピクセル数にします(元のサイズが奇数のピクセル数の場合、1ピクセル増減されます)。フレームのピクセル数がフレームの文字サイズ倍でない場合、このオプションが@code{nil}でも、少なくとも1つのウィンドウがピクセル幅のサイズ変更をされることに注意してください。

@node Other Window
@section Using Other Windows

@table @kbd
@item C-x o
他のウィンドウを選択します(@code{other-window})。
@item C-M-v
次のウィンドウをスクロールします(@code{scroll-other-window})。
@item Mouse-1
ウィンドウのテキスト領域を@kbd{Mouse-1}でクリックすると、そのウィンドウを選択してクリックした位置にポイントを移動します。モードラインをクリックすると、ポイントを移動せずにそのウィンドウを選択します。
@end table

@kindex C-x o
@findex other-window
キーボードで@kbd{C-x o}
(@code{other-window})をタイプして、ウィンドウを切り替えることができます。@kbd{o}は``other''のoで、0(ゼロ)ではありません。2つ以上のウィンドウがある時、このコマンドはすべてのウィンドウを順繰りに選択します(一般的に上からした、左から右)。一番右または一番下のウィンドウの後は、左上のウィンドウに戻ります。数引数は上記の順番で何番目のウィンドウに移動するかを意味します。負の引数は逆向きで同じことを行います。ミニバッファーがアクティブのとき、ミニバッファーはこの順番では最後のウィンドウになります。ミニバッファーのウィンドウから他のウィンドウに切り替えて、後からミニバッファーに戻って引数の入力を終了させることができます。@ref{Minibuffer
Edit}を参照してください。

@kindex C-M-v
@findex scroll-other-window
  通常のスクロールコマンド(@ref{Display}を参照してください)は、選択されたウィンドウだけに適用されますが、次のウィンドウをスクロールするコマンドが1つあります。@kbd{C-M-v}
(@code{scroll-other-window})は、@kbd{C-x
o}が選択するウィンドウをスクロールします(このコマンドは@kbd{C-v}のように正または負の引数をとります。ミニバッファーでの@kbd{C-M-v}は、ミニバッファーに関連付けられたヘルプウィンドウがあれば、標準的な次のウィンドウではなくヘルプウィンドウをスクロールします。@ref{Minibuffer
Edit}を参照してください)。

@vindex mouse-autoselect-window
  @code{mouse-autoselect-window}を非@code{nil}値にセットしている場合、マウスが選択されたウィンドウ以外のウィンドウに移動すると、そのウィンドウが選択されます。この機能はデフォルトでオフです。

@node Pop Up Window
@section Displaying in Another Window

@cindex selecting buffers in other windows
@kindex C-x 4
  @kbd{C-x
4}は、異なるウィンドウ(他の既存のウィンドウや、選択されたウィンドウを分割することにより新たに作成されたウィンドウ)のバッファーに切り替える、さまざまなコマンドのプレフィクスキーです。Emacsがウィンドウを選択または作成する方法については、@ref{Window
Choice}を参照してください。

@table @kbd
@findex switch-to-buffer-other-window
@item C-x 4 b @var{bufname} @key{RET}
他のウィンドウのバッファー@var{bufname}を選択します(@code{switch-to-buffer-other-window})。

@findex display-buffer
@item C-x 4 C-o @var{bufname} @key{RET}
@kindex C-x 4 C-o
バッファー@var{bufname}を選択せずに、別のウィンドウに表示します(@code{display-buffer})。ウィンドウが選択される方法についての詳細は、@ref{Displaying
Buffers}を参照してください。

@findex find-file-other-window
@item C-x 4 f @var{filename} @key{RET}
ファイル@var{filename}をvisitして、他のウィンドウでバッファーを選択します(@code{find-file-other-window}).
@ref{Visiting}を参照してください。

@findex dired-other-window
@item C-x 4 d @var{directory} @key{RET}
@var{directory}のDiredバッファーを、別のウィンドウで選択します(@code{dired-other-window})。@ref{Dired}を参照してください。

@findex mail-other-window
@item C-x 4 m
@kbd{C-x m} (@ref{Sending
Mail}を参照してください)と同様に、メールメッセージの編集を開始しますが、別のウィンドウで行います(@code{mail-other-window})。

@findex find-tag-other-window
@item C-x 4 .
@kbd{M-.}
(@ref{Tags}を参照してください)と同様に、現在のtagsテーブルのタグを検索しますが、別のウィンドウで行います(@code{find-tag-other-window})。
@item C-x 4 r @var{filename} @key{RET}
ファイル@var{filename}を読み取り専用でvisitして、別のウィンドウでバッファーを選択します(@code{find-file-read-only-other-window})。@ref{Visiting}を参照してください。
@end table

@node Change Window
@section Deleting and Rearranging Windows

@table @kbd
@item C-x 0
選択されたウィンドウを削除します(@code{delete-window})。
@item C-x 1
フレームから選択されたウィンドウ以外のすべてのウィンドウを削除します(@code{delete-other-windows})。
@item C-x 4 0
選択されていたウィンドウを削除して、それに表示されていたバッファーをkillします(@code{kill-buffer-and-window})。このキーシーケンスの最後の文字はゼロです。
@item C-x ^
選択されたウィンドウの高さを増やします(@code{enlarge-window})。
@item C-x @}
選択されたウィンドウの幅を増やします(@code{enlarge-window-horizontally})。
@item C-x @{
選択されたウィンドウの幅を減らします(@code{shrink-window-horizontally})。
@item C-x -
バッファーに多くの行数が必要ない場合、そのウィンドウを縮小します(@code{shrink-window-if-larger-than-buffer})。
@item C-x +
すべてのウィンドウの高さを同じにします(@code{balance-windows})。
@end table

@kindex C-x 0
@findex delete-window
  選択されたウィンドウを削除するには、@kbd{C-x 0}
(@code{delete-window})とタイプします(これはゼロです)。一度ウィンドウが削除されると、そのウィンドウが占めていたスペースは隣接したウィンドウに与えられます(しかしミニバッファーの場合、それがアクティブな場合でも適用されません)。ウィンドウの削除は、ウィンドウを表示用に使っていたバッファーに影響を与えません。そのバッファーは存在し続け、@kbd{C-x
b}で切り替えることができます。

@findex kill-buffer-and-window
@kindex C-x 4 0
  @kbd{C-x 4 0} (@code{kill-buffer-and-window})は、コマンド@kbd{C-x
0}より強力なコマンドです。これはカレントバッファーをkillしてから、選択されたウィンドウを削除します。

@kindex C-x 1
@findex delete-other-windows
  @kbd{C-x 1}
(@code{delete-other-windows})は、選択されたウィンドウ@emph{以外}のすべてのウィンドウを削除します。選択されたウィンドウはフレーム全体に拡張されます(このコマンドは、ミニバッファーのウィンドウがアクティブのとき使うことができません。これを試みるとエラーがシグナルされます)。

@kindex C-x ^
@findex enlarge-window
@kindex C-x @}
@vindex window-min-height
  コマンド@kbd{C-x ^}
(@code{enlarge-window})は、フレームの高さを変えずに垂直方向に隣接するウィンドウのスペースを縮小して、選択されたウィンドウの高さを増やします。正の数引数を与えると、このコマンドは指定した行数分ウィンドウの高さを増やします。負の数引数を与えると、指定した行数分ウィンドウの高さを増やします。垂直方向に隣接するウィンドウが存在しない場合(たとえばウィンドウの高さがフレーム全体の高さと同じとき)、エラーをシグナルします。このコマンドは変数@code{window-min-height}(デフォルトは4)で指定された、最小行数よりウィンドウの高さを縮小しようとしても、エラーをシグナルします。

@findex enlarge-window-horizontally
@findex shrink-window-horizontally
@vindex window-min-width
  同様に@kbd{C-x @}}
(@code{enlarge-window-horizontally})は、選択されたウィンドウの幅を増やし、@kbd{C-x @{}
(@code{shrink-window-horizontally})は幅を減らします。これらのコマンドは、変数@code{window-min-width}(デフォルトは10)で指定された最小列数よりウィンドウの幅を縮小すると、エラーをシグナルします。

@kindex C-x -
@findex shrink-window-if-larger-than-buffer
  @kbd{C-x -}
(@code{shrink-window-if-larger-than-buffer})は、バッファー全体を表示するのに必要な高さより選択されたウィンドウの高さが大きいときは、選択されたウィンドウの高さを減らします。余った行数はフレームの他のウィンドウに与えられます。

@kindex C-x +
@findex balance-windows
  @kbd{C-x +}
(@code{balance-windows})を使って、選択されたフレームのすべてのウィンドウの高さを均等にすることもできます。

  モードライン上でマウスをクリックすることにより、ウィンドウの高さの変更およびウィンドウを削除する、別の方法が提供されます。@ref{Mode Line
Mouse}を参照してください。

@node Displaying Buffers
@section Displaying a Buffer in a Window

  ユーザーのコマンドの結果として、任意のバッファーが表示または``ポップアップ''されるのは、Emacsでは一般的な処理です。コマンドがこれを行うには、いくつかの異なる方法があります。

  @kbd{C-x C-f}
(@code{find-file})のような多くのコマンドは、選択されたウィンドウを``乗っ取って''バッファーを表示します。これらのコマンドは通常、@code{switch-to-buffer}を内部的に呼び出すことにより機能します(@ref{Select
Buffer}を参照してください)。

@findex display-buffer
  選択されたウィンドウを乗っ取らずに、たとえばウィンドウを分割して新しいウィドウを作り、そこにバッファーを表示するといったような、``利口な''表示を試みるコマンドがいくつかあります。さまざまなヘルプコマンド(@ref{Help})を含む、そのようなコマンドは内部的に@code{display-buffer}を呼び出すことにより機能します。詳細は、@ref{Window
Choice}を参照してください

  他のコマンドは@code{display-buffer}と同じことを行いますが、それに加えてバッファーの編集を開始できるように、表示されたウィンドウを選択します。コマンド@kbd{C-x
`} (@code{next-error})が1つの例です(@ref{Compilation
Mode}を参照してください)。そのようなコマンドは、内部的に関数@code{pop-to-buffer}を呼び出すことにより機能します。@ref{Switching
Buffers,,Switching to a Buffer in a Window, elisp, The Emacs Lisp Reference
Manual}を参照してください。

  名前が@code{-other-window}で終わるコマンドは、@code{display-buffer}と同じように振る舞います。例外はそれらが決して選択されたウィンドウに表示しない点です。これらのコマンドのいくつかは、プレフィクスキー@kbd{C-x
4}にバインドされています(@ref{Pop Up Window}を参照してください)。

  名前が@code{-other-frame}で終わるコマンドは、@code{display-buffer}と同じように振る舞います。例外は、i)選択されたウィンドウに決して表示しない、ii)ウィンドウを分割してバッファーを表示するのではなく新しいフレームを作成して表示する(あたかも変数@code{pop-up-frames}が@code{t}されているかのように)、という2点です(@ref{Window
Choice}を参照してください)。これらのコマンドのいくつかは、プレフィクスキー@kbd{C-x 5}にバインドされています。

@menu
* Window Choice::            @code{display-buffer}が機能する方法。
@end menu

@node Window Choice
@subsection How @code{display-buffer} works
@findex display-buffer

@code{display-buffer}コマンド(およびこのコマンドを内部的に呼び出すコマンド)は、以下で与えられたステップに従って、表示するウィンドウを選択します。このステップの順番を変更する方法については、@ref{Choosing
Window,,Choosing a Window for Display, elisp, The Emacs Lisp Reference
Manual}を参照してください。

@itemize
@vindex same-window-buffer-names
@vindex same-window-regexps
@item
最初に、他のバッファーを考慮せずに、そのバッファーが選択されたウィンドウに表示されるべきかをチェックします。これを行うようEmacsに指示するには、望むバッファー名をリスト@code{same-window-buffer-names}に加えるか、リスト@code{same-window-regexps}にバッファー名にマッチする正規表現を追加します。デフォルトではこれらの変数は@code{nil}なので、このステップはスキップされます。

@item
上記以外の場合、バッファーがすでに既存のウィンドウに表示されているときは、そのウィンドウを``再利用''します。通常は選択されたフレームのウィンドウだけが考慮されますが、変数@code{pop-up-frames}を@code{t}に変更している場合(以下参照)、他のフレームのウィンドウも再利用可能です、

@vindex pop-up-frames
@item
上記以外の場合、オプションで新しいフレームを作成して、バッファーをそこに表示します。デフォルトではこのステップはスキップされます。これを有効にするには変数@code{pop-up-frames}を非@code{nil}値に変更します。特別な値@code{graphic-only}は、グラフィカルなディスプレーだけで、これを行うことを意味します。

@item
上記以外の場合、選択されたウィンドウを分割することにより、新しいウィンドウを作成して、バッファーを新しく作成したウィンドウに表示しようと試みます。

@vindex split-height-threshold
@vindex split-width-threshold
分割は垂直または水平に行われる可能性があり、それは変数@code{split-height-threshold}および@code{split-width-threshold}に依存します。これらの変数には整数値を指定します。@code{split-height-threshold}が選択されたウィンドウの高さより小さい場合、分割により下が新しいウィンドウになります。上記以外の場合、@code{split-width-threshold}が選択されたウィンドウの幅より小さい場合、分割により右が新しいウィンドウになります。どちらの条件も適用できなかったとき、Emacsは分割により下を新しいウィンドウにしようと試みますが、それは選択されたウィンドウが以前に分割されていなかった場合に限られます(過剰な分割を避けるため)。

@item
上記以外の場合、選択されたフレームの既存のウィンドウのバッファーを表示します。

@item
何らかの理由により上記すべてが失敗した場合、新しいフレームを作成して、そこにバッファーを表示します。
@end itemize

@node Window Convenience
@section Convenience Features for Window Handling

@findex winner-mode
@cindex Winner mode
@cindex mode, Winner
@cindex undoing window configuration changes
@cindex window configuration changes, undoing
  Winnerモードは、ウィンドウの設定変更(たとえばフレームのウィンドウがどのように分割されたか)を記録するグローバルマイナーモードなので、それらを``undo''できます。Winnerモードは@kbd{M-x
winner-mode}、または変数@code{winner-mode}をカスタマイズすることにより、切り替えることができます。このモードが有効な場合、@kbd{C-c
left} (@code{winner-undo})は、左のウィンドウの設定変更をundoします。undoしてから気が変わった場合、@kbd{C-c
right} (@code{M-x winner-redo})を使って、undoした変更を再実行することができます。

  Followモード(@kbd{M-x
follow-mode})は、複数のウィンドウの同じバッファーを同期するので、バッファーの隣接した部分が常に表示されます。@ref{Follow
Mode}を参照してください。

@cindex Windmove package
@cindex directional window selection
@findex windmove-right
@findex windmove-default-keybindings
  Windmoveパッケージは、フレーム内の隣接したウィンドウ間を直接移動するコマンドを定義します。``right''の部分を``left''、``up''、``down''に置き換えると、対応する方向の隣接するウィンドウを選択します。@kbd{M-x
windmove-default-keybindings}は、これらのコマンドを@kbd{S-right}などにバインドします。これにより、これらのキーを使ったシフト選択が無効になります(@ref{Shift
Selection}を参照してください)。

  コマンド@kbd{M-x compare-windows}は、異なるウィンドウに表示されたテキストを比較します。@ref{Comparing
Files}を参照してください。

@vindex scroll-all-mode
@cindex scrolling windows together
@cindex Scroll-all mode
@cindex mode, Scroll-all
  Scroll Allモード(@kbd{M-x
scroll-all-mode})は、スクロールおよびポイント移動コマンドが、表示されているすべてのウィンドウに適用されるグローバルマイナーモードです。
