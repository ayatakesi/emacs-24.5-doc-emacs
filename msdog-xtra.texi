@c ===========================================================================
@c
@c This file was generated with po4a. Translate the source file.
@c
@c ===========================================================================
@c This is part of the Emacs manual.
@c Copyright (C) 2004-2015 Free Software Foundation, Inc.
@c See file emacs.texi for copying conditions.
@c
@c This file is included either in emacs-xtra.texi (when producing the
@c printed version) or in the main Emacs manual (for the on-line version).
@node MS-DOS
@section EmacsとMS-DOS
@cindex MS-DOG
@cindex MS-DOS peculiarities

  このセクションでは、EmacsをMS-DOS``オペレーティングシステム''(``MS-DOG''としても知られています)で使用する際の特質を、簡単に説明します。
@iftex
EmacsとMicrosoftの現在のオペレーティングシステムのWindows(``Losedows''としても知られています)についての情報は、Emacsのメインマニュアル(@ref{Microsoft
Windows,,, emacs, the Emacs Manual}を参照してください)の中にあります。
@end iftex
@ifnottex
MS-DOSとMicrosoftの現在のオペレーティングシステムのWindows(``Losedows''としても知られています)についての情報は、@ref{Microsoft
Windows}の中にあります。
@end ifnottex

  EmacsをMS-DOSにたいしてビルドした場合、そのバイナリーはWindows 3.X、Windows NT、Windows
9X/ME、Windows
2000/XP、またはOS/2でも、DOSアプリケーションとして実行されます。MS-DOSにたいしてビルドされたEmacsを使用する場合、このチャプターの内容は、それらすべてのシステムに適用されます。

@iftex
  MS-DOS(およびWindows)でのテキストファイルにたいするEmacsの特別な処理については、@ref{Text and
Binary,,,emacs, the Emacs Manual}を参照してください。
@end iftex
@ifnottex
  MS-DOS(およびWindows)でのテキストファイルにたいするEmacsの特別な処理については、@ref{Text and
Binary}を参照してください
@end ifnottex
。

@menu
* Keyboard: MS-DOS Keyboard.  MS-DOSでのキーボードの慣習。
* Mouse: MS-DOS Mouse.       MS-DOSでのマウスの慣習。
* Display: MS-DOS Display.   MS-DOSでのフォント、フレーム、ディスプレーのサイズ。
* Files: MS-DOS File Names.  MS-DOSでのファイル名の慣習。
* Printing: MS-DOS Printing.  MS-DOSでの印刷の特性。
* I18N: MS-DOS and MULE.     MS-DOSでの国際化のサポート。
* Processes: MS-DOS Processes.  MS-DOSでのサブプロセスの実行。
@end menu

@node MS-DOS Keyboard
@subsection MS-DOSでのキーボードの使用方法

@kindex DEL @r{(MS-DOS)}
@kindex BS @r{(MS-DOS)}
  Emacsで@key{DEL}と呼ばれるキー(ほとんどのワークステーションでそれが指定されているのが由来です)は、PCでは@key{BS}(バックスペース)として知られています。PC固有の端末の初期化で、@key{BS}が@key{DEL}として動作するよう再マップされるのは、これが理由です。同じ理由により、@key{Delete}キーは@kbd{C-d}として動作するように、再マップされます。

@kindex C-g @r{(MS-DOS)}
@kindex C-Break @r{(MS-DOS)}
@cindex quitting on MS-DOS
  MS-DOSにたいしてビルドされたEmacsは、@kbd{C-@key{Break}}を@kbd{C-g}のような、中止(quit)文字として認識します。新たな入力にたいして準備ができるまで、@kbd{C-g}をタイプしてもEmacsが検知できないのは、これが理由です。そのため、実行中のコマンドを停止させるために、@kbd{C-g}を使用することはできません
@iftex
(@ref{Quitting,,,emacs, the Emacs Manual}を参照してください)。
@end iftex
@ifnottex
(@ref{Quitting}を参照してください)。
@end ifnottex
対照的に@kbd{C-@key{Break}}は、(他のシステムでの@kbd{C-g}のように)、タイプされるとすぐに検知されるので、実行中のコマンドを停止したり、緊急エスケープのために使用されます
@iftex
(@ref{Emergency Escape,,,emacs, the Emacs Manual}を参照してください)。
@end iftex
@ifnottex
(@ref{Emergency Escape}を参照してください)。
@end ifnottex

@cindex Meta (under MS-DOS)
@cindex Hyper (under MS-DOS)
@cindex Super (under MS-DOS)
@vindex dos-super-key
@vindex dos-hyper-key
  PCのキーボードマップは、左@key{Alt}キーを@key{META}キーとして使用します。@key{SUPER}キーと@key{HYPER}キーをエミュレートするために、2つの選択肢があります。変数@code{dos-hyper-key}および@code{dos-super-key}に、1または2をセットすることにより、右@key{Ctrl}キーと右@key{Alt}キーのどちらかを選択します。@code{dos-super-key}と@code{dos-hyper-key}がどちらも1以外の場合、デフォルトにより右@key{Alt}キーも@key{META}キーにマップされます。しかしMSｰDOSの国際化キーボードサポートプログラム@file{KEYB.COM}がインストールされている場合、非US配列のキーボードでは右@key{Alt}は@kbd{~}や@kbd{@@}のような文字を入力するために使用されるので、Emacsは右@key{Alt}を@key{META}にマップしません。この場合、左@key{Alt}キーだけを@key{META}キーとして使用することになるでしょう。

@kindex C-j @r{(MS-DOS)}
@vindex dos-keypad-mode
  変数@code{dos-keypad-mode}は、テンキーにより返されるキーコードを制御するフラグ変数です。以下の行を@file{_emacs}ファイルに記述して、テンキーの@key{ENTER}キーを、@kbd{C-j}のように定義することもできます:

@smallexample
;; @r{Make the @key{ENTER} key from the numeric keypad act as @kbd{C-j}.}
(define-key function-key-map [kp-enter] [?\C-j])
@end smallexample

@node MS-DOS Mouse
@subsection MS-DOSでびマウスの使用方法

@cindex mouse support under MS-DOS
  MS-DOSのEmacsはマウスをサポートします(デフォルト端末のみ)。メニューやメニューバーの使用を含めて、マウスコマンドはドキュメントされているように機能します
@iftex
(@ref{Menu Bar,,,emacs, the Emacs Manual}を参照してください)。
@end iftex
@ifnottex
(@ref{Menu Bar}を参照してください)。
@end ifnottex
 MS-DOSのEmacsではスクロールバーは機能しません。PCマウスには通常2つしかボタンがありません。これらは@kbd{Mouse-1}、@kbd{Mouse-2}として機能しますが、これらのボタンを一緒に押すと、@kbd{Mouse-3}の効果をもちます。マウスにボタンが3つある場合、Emacsは開始時にそれを検知し、Xのようにすべての3ボタンは通常のように機能します。

  メニューアイテムの上にマウスポインターが移動すると、メニューバーとポップアップメニューにたいするヘルプ文字列が、エコーエリアに表示されます。マウスに反応するテキストはハイライト
@iftex
(@ref{Mouse References,,,emacs, the Emacs Manual}を参照してください)
@end iftex
@ifnottex
(@ref{Mouse References}を参照してください)
@end ifnottex
もサポートされます。

@cindex mouse, set number of buttons
@findex msdos-set-mouse-buttons
  マウスドライバーのいくつかのバージョンは、マウスのボタン数を正しく報告しません。たとえばホイールつきのマウスは3つボタンがあると報告されますが、Emacsに渡されるのはそのうち2つだけです。真ん中のボタンとして使用されるホイールのクリックも渡されません。このような場合、マウスボタンがいくつあるかEmacsに指示するために、@kbd{M-x
msdos-set-mouse-buttons}コマンドを使用できます。initファイル@file{_emacs}に以下の行を追加することにより、そのようなセッティングを永続化できます:

@example
;; @r{Treat the mouse like a 2-button mouse.}
(msdos-set-mouse-buttons 2)
@end example

@cindex Windows clipboard support
  MS-DOSにたいしてビルドされたEmacsは、Windows上で実行されているときは、クリップボード操作をサポートします。killリングにテキストを置くコマンド、またはkillリングからテキストをyankするコマンドは、EmacsがXウィンドウシステムで行なうように、最初にWindowsのクリップボードをチェックします
@iftex
(@ref{Mouse Commands,,,emacs, the Emacs Manual}を参照してください)。
@end iftex
@ifnottex
(@ref{Mouse Commands}を参照してください)。
@end ifnottex
Windows上でのMS-DOS版のEmacsは、プライマリー選択とカットバッファーだけをサポートします。セカンダリー選択は常に空になります。

  クリップボードに対するアクセス方法はWindowsにより実装されているため、クリップボードに置くことができるテキストの長さは、Emacsが利用可能なDOSメモリー量により制限されます。通常はクリップボードに最大620KBのテキストを置くことができますが、この制限はシステム設定に依存し、Emacsを他のプログラムのサブプロセスとして実行している場合は、もっと少なくなります。killしたテキストが一致しない場合、Emacsはその旨を告げるメッセージを出力して、クリップボードにテキストを置きません。

  ヌル文字をWindowsクリップボードに置くこともできません。killされたテキストにヌル文字が含まれる場合、Emacsはそのようなテキストをクリップボードに置かず、その結果にたいするメッセージをエコーエリアに表示します。

@vindex dos-display-scancodes
  変数@code{dos-display-scancodes}が非@code{nil}の場合、Emacsは各キーストロークの@acronym{ASCII}値とキーボードのスキャンコードを表示します。この機能は、デバッグのための@code{view-lossage}コマンドを補足するためのものです。

@node MS-DOS Display
@subsection MS-DOSでの表示
@cindex faces under MS-DOS
@cindex fonts, emulating under MS-DOS

  MS-DOSのディスプレーでは、boldやitalicのようなフォントの変種が使用できませんが、複数のフェイスをサポートしており、それぞれのフェイスでフォアグラウンドとバックグラウンドのカラーを指定できます。したがってm異なるカラーを使用するために関連するフェイスを定義することにより、フォントを使用するEmacsパッケージ(@code{font-lock}やEnriched
Textモードなそ)の完全な機能を使用することができます。利用できるカラーとフェイスと、それらの外観を確認するには、@code{list-colors-display}コマンド
@iftex
(@ref{Colors,,,emacs, the Emacs Manual}を参照してください)
@end iftex
@ifnottex
(@ref{Colors}を参照してください)
@end ifnottex
、および@code{list-faces-display}
@iftex
(@ref{Faces,,,emacs, the Emacs Manual}を参照してください)
@end iftex
@ifnottex
(@ref{Faces}を参照してください)
@end ifnottex
を使用してください。

  DOSディスプレーでネイティブにサポートされていないグリフと文字をEmacsが表示する方法については、このチャプターの後のほうの、@ref{MS-DOS
and MULE}を参照してください。

@cindex cursor shape on MS-DOS
  Emacsを開始したとき、Emacsはカーソルの形状を塗りつぶしたボックスに変更します。他のシステムではボックスカーソルがEmacsのデフォルトなので、これは互換性のためです。デフォルトのカーソル形状は、変数@code{default-frame-alist}の中の@code{cursor-type}パラメーターでbarを指定することにより変更できます
@iftex
(@ref{Creating Frames,,,emacs, the Emacs Manual}を参照してください)。
@end iftex
@ifnottex
(@ref{Creating Frames}を参照してください)。
@end ifnottex
MS-DOS端末は垂直バーのカーソルをサポートしないので、カーソルは水平バーになり、フレームのパラメターで@code{@var{width}}パラメーターが指定された場合、それは実際には水平バーの高さになります。この理由により、MS-DOSではカーソルタイプ@code{bar}と@code{hbar}は同じ効果を生みます。拡張として、以下のようにして、バーカーソル指定にはwidthと同様に、カーソルが行を読み取る開始位置を含めることができます:

@example
 '(cursor-type bar @var{width} . @var{start})
@end example

@noindent
これに加えて、@var{width}パラメーターが負の場合、カーソルバーはその文字セルの最上部から開始されます。

@cindex frames on MS-DOS
  MS-DOS端末は1度に1つのフレームだけを表示できます。MS-DOSで動作するEmacsのフレーム機能は、Emacsがテキスト端末で動作する場合と同じように機能します
@iftex
(@ref{Frames,,,emacs, the Emacs Manual}を参照してください)。
@end iftex
@ifnottex
(@ref{Frames}を参照してください)。
@end ifnottex
MS-WindowsでDOS窓からEmacsを実行した場合、フルスクリーンより小さい可視フレームを作成できますが、それでもEmacsは1度に1つのフレームしか表示できません。

@cindex frame size under MS-DOS
@findex dos-mode4350
@findex dos-mode25
  @code{dos-mode4350}コマンドはディスプレーを43行または50行に切り替え、それはハードウェアーに依存します。@code{dos-mode25}コマンドはスクリーンサイズをデフォルトの80x25に切り替えます。

  デフォルトではEmacsが理解するするスクリーンサイズは、列を80列、行を25、28、35、40、43、50行にセットする方法だけです。しかしビデオアダプターが、ディスプレーを他のサイズに切り替える特別なビデオモードをもつ場合、Emacsもそれをサポートするようにできます。Emacsにフレームを@var{n}行@var{m}列のサイズに切り替えるように指示した場合、Emacsは@code{screen-dimensions-@var{n}x@var{m}}という名前があるかチェックして、もしあれば切り替えるビデオモードの値(整数でなければなりません)としてそれを使用します(Emacsは@code{AL}レジスターに@code{screen-dimensions-@var{n}x@var{m}}の値をセットして、BIOS関数の@code{Set
Video
Mode}を呼び出すことによりそのビデオモードに切り替えます)。たとえばビデオアダプターがビデオモードを85にしたとき、サイズ66x80に切り替わるとしましょう。その場合、以下を@file{_emacs}ファイルに記述して、Emacsにそれをサポートさせることができます:

@example
(setq screen-dimensions-66x80 85)
@end example

  MS-DOSのEmacsは特定のサポートされたフレームサイズだけしかセットできないので、可能性のあるすべてのフレームのサイズ変更要求に従うことはできません。サポートされていないサイズが要求された場合、Emacsは指定されたサイズを越える、次に大きなサポートされたサイズを選択します。この場合、たとえば36x80フレームを要求して、かわりに40x80を得ることになります。

  変数@code{screen-dimensions-@var{n}x@var{m}}は、指定されたサイズに正確にマッチするときだけ使用され、サポートされた次に大きなサイズを検索するときには、無視されます。上記の例ではVGAは38x80のサイズをサポートし、@code{screen-dimensions-38x80}を適切な値で定義していても、36x80フレームを要求すると40x80のスクリーンになります。この場合サイズを38x80にするには、@code{screen-dimensions-36x80}という名前の変数に、@code{screen-dimensions-38x80}と同じビデオもーどの値をセットして、これを行なうことができます。

  MS-DOSでフレームサイズを変更すると、他のすべてのフレームも新しいサイズに変更されます。

@node MS-DOS File Names
@subsection MS-DOSでのファイル名
@cindex file names under MS-DOS
@cindex init file, default name under MS-DOS

  MS-DOSでは、ファイル名は大文字小文字を区別せず8文字に制限され、それに加えてオプションでピリオドと追加の3文字を使用できます。Emacsは他のオペレーティングシステムで、ファイル名を処理するためのこれらの制限を充分認識しています。たとえばファイル名の前のドット@samp{.}はMS-DOSでは無効なので、Emacsはそれらを透過的にアンダースコアー@samp{_}に変換します。したがって、MS-DOSではデフォルトのinitファイル
@iftex
(@ref{Init File,,,emacs, the Emacs Manual}を参照してください)
@end iftex
@ifnottex
(@ref{Init File}を参照してください)
@end ifnottex
は@file{_emacs}と呼ばれます。ピリオドの前後の余分な文字は、一般的にMS-DOS自身により無視されます。したがってファイル@file{LongFileName.EvenLongerExtension}をvisitした場合、それは暗黙に@file{longfile.eve}となりますが、それでもEmacsはモードラインに長いファイル名を表示し続けます。それ以外ではMS-DOSで有効なファイル名を指定するのはユーザーの責任です。上記の透過的な変換は、Emacsに組み込まれたファイル名だけにたいして機能します。

@cindex backup file names on MS-DOS
  MS-DOSでのファイル名にたいする上記の制限は、オリジナルのファイル名の文字を失うことなしにバックアップファイルの名前を構築するのを、ほとんど不可能にします
@iftex
(@ref{Backup Names,,,emacs, the Emacs Manual}を参照してください)。
@end iftex
@ifnottex
(@ref{Backup Names}を参照してください)。
@end ifnottex
たとえば@file{docs.txt}というファイルにたいするバックアップファイルの名前は、単一のバックアップを使用しているときでさえ@file{docs.tx~}になります。

@cindex file names under Windows 95/NT
@cindex long file names in DOS box under Windows 95/NT
  Windows 9X、Windows ME、Windows
2000/XPでEmacsをDOSアプリケーションとして実行する場合、長いファイル名のサポートをオンに切り替えることができます。これを行なうと、Emacsはファイル名を切り詰めたり、ファイル名を小文字に変換するかわりに、指定された文字通りのファイル名を使用します。長いファイル名のサポートを有効にするには、Emacsを開始する前に、環境変数@env{LFN}を@samp{y}にセットします。残念なことにWindows
NTはDOSプログラムが長いファイル名にアクセスすることを許さないので、MS-DOSにたいしてビルドされたEmacsは、短い8+3のエイリアスだけを見ることになります。

@cindex HOME directory under MS-DOS
  MS-DOSにはホームディレクトリーという概念がないので、MS-DOS上のEmacsはEmacsがインストールされた場所が、環境変数@env{HOME}の値であるかのように振る舞います。つまりEmacsのバイナリー@file{emacs.exe}がディレクトリー@file{c:/utils/emacs/bin}にある場合、Emacsは@env{HOME}が@samp{c:/utils/emacs}にセットされているかのように動作します。この場所は特に、Emacsがinitファイル@file{_emacs}を探す場所でもあります。これを念頭におけば、GNUやUnixのように、ファイル名の中で@samp{~}をホームディレクトリーのエイリアスとして使用できます。Emacsを開始する前に、その環境で@env{HOME}変数をセットすることもできます。この変数の値は、上記のデフォルトの振る舞いをオーバーライドします。

  MS-DOSのEmacsは、@file{/dev}というディレクトリー名を特別に使います。なぜならGJGPPのエミュレーターライブラリーの機能は、I/Oデバイスの名前がそのディレクトリーにあるかのように振る舞うからです。わたしたちは任意のディスクにたいして、@file{/dev}という名前のディレクトリーの使用を避けることを推奨します。

@node MS-DOS Printing
@subsection 印刷とMS-DOS

  @code{lpr-buffer}
@iftex
(@ref{Printing,,,emacs, the Emacs Manual}を参照してください)や、@code{ps-print-buffer}
(@ref{PostScript,,,emacs, the Emacs Manual}を参照してください)
@end iftex
@ifnottex
(@ref{Printing}を参照してください)や、@code{ps-print-buffer}
(@ref{PostScript}を参照してください)
@end ifnottex
のようなコマンドは、Posixスタイルの@code{lpr}プログラムが利用できない場合、出力を1つのプリンターポートに送ることにより、MS-DOSで機能します。同じEmacs変数がすべてのシステムでの印刷を制御しますが、MS-DOSでは異なるデフォルト値をもつ場合もあります。

@iftex
ネットワークプリンターでの印刷のセットアップに関する詳細は、@ref{Windows Printing,,,emacs, the Emacs
Manual}を参照してください
@end iftex
@ifnottex
ネットワークプリンターでの印刷のセットアップに関する詳細は、@ref{Windows Printing}を参照してください
@end ifnottex
。

  プリンターが同じlocaleにたいして異なるエンコーディングを使用するWindows機に接続されている場合にも、非@acronym{ASCII}テキストのDOSコードページによるエンコーディングを期待するプリンターがいくつかあります。たとえばlocaleがLatin-1のとき、Windowsはコードページ1252を使用しますが、DOSはコードページ850を使用します。@ref{MS-DOS
and MULE}を参照してください。Windowsからそのようなプリンターで印刷する場合、@kbd{M-x
lpr-buffer}の前に、@kbd{C-x @key{RET} c}
(@code{universal-coding-system-argument})を使用することができます。その場合、Emacsは指定したDOSコードページにテキストを変換します。たとえば@kbd{C-x
@key{RET} c cp850-dos @key{RET} M-x lpr-region
@key{RET}}は、リージョンをコードページ850のエンコーディングに変換して印刷します。

@vindex dos-printer
@vindex dos-ps-printer
  MS-DOSでは後方互換のため、@code{dos-printer}
(@code{dos-ps-printer})に値がセットされている場合、@code{printer-name}
(@code{ps-printer-name})の値をオーバーライドします。


@node MS-DOS and MULE
@subsection MS-DOSでの国際化サポート
@cindex international support @r{(MS-DOS)}

  MS-DOSのEmacsは、異なる文字セット同士を変換するためのコーディングシステムを含む、GNU、Unix、その他のプラットフォームでサポートされているのと同じ国際化文字セットをサポートします
@iftex
(@ref{International,,,emacs, the Emacs Manual}を参照してください)。
@end iftex
@ifnottex
(@ref{International}を参照してください)。
@end ifnottex
しかしMS-DOSと、MS-Windowsや他のシステムとの間の非互換により、このサポートには知っておくべきいくつかのDOS特有の状況があります。このセクションではこれらの状況について説明します。

  以下の説明では、主にEmacsのMS-DOSポートについて、特に経験豊富なEmacsユーザーにとって密接に関係する部分について説明します。

@table @kbd
@item M-x dos-codepage-setup
カレントDOSコードページにたいして、適切なEmacsディスプレーとコーディングシステムをセットアップします。
@end table

@cindex codepage, MS-DOS
@cindex DOS codepages
  MS-DOSは常に256文字の文字セットをサポートするようにデザインされていますが、それからさまざまな文字セットを選択できます。選択できる文字セットは@dfn{DOSコードページ}として知られます。各コードページはすべて128文字の@acronym{ASCII}文字を含みますが、それ以外の128文字(コード128から255)は、コードページごとに異なります。各コードページは850、862のように3桁の数字で識別されます。

  同時に複数のフォントを使用できるXとは対照的に、通常MS-DOSは1つのセッションで複数のコードページを使用できません。MS-DOSはシステムの開始時に1つのコードページをロードするようにデザインされており、それを変更するには再起動が必要です@footnote{通常1つの特定のコードページがディスプレーメモリーに組み込まれていて、@file{CONFIG.SYS}のようなシステム設定ファイルを変更して再起動することにより他のコードページをインストールできます。再起動なしでコードページを変更できるサードパーティーのソフトウェアーもありますが、ここでは普通のMS-DOSシステムが振る舞う方法を説明します。}。MS-Windowsのような他のシステムでDOSの実行可能ファイルを実行するときも、ほぼ同じ制限が適用されます。

@vindex dos-codepage
  MS-DOSでのマルチバイト処理にたいして、Emacsは選択されたDOSコードページで表示できる文字を知る必要があります。そのため起動後に、選択されたコードページ番号を得るためにシステムに問い合わせを行い、その番号を変数@code{dos-codepage}に格納します。実際のコードページは異なっていても、カレントコードページにたいしてデフォルト値437を返すシステムがいくつかあります(通常これはディスプレーハードウェアーに組み込まれているコードページを使用しているとき発生します)。initファイルで変数@code{dos-codepage}をセットすることにより、Emacsに別のコードページを指定できます。

@cindex language environment, automatic selection on @r{MS-DOS}
  マルチバイトのEmacsは特定のDOSコードページ --- 日本語コードページ932のような極東アジアのスクリプトを表示できるものや、1つのISO
8859文字セットをエンコードするものがあります。

  極東アジアのコードページは、それらの国々にたいするMULE文字セットの1つを直接表示できるので、Emacsはそのコードページでサポートされる適切な端末コーディングシステムを使用するためにセットアップを行なうだけです。このセクションの残りの部分で説明する特別な機能は、主にISO
8859文字セットをエンコードするコードページに関するものです。

  ISO文字セットの1つに対応するコードページにたいして、Emacsはそのコードページ番号にもとづいた文字セットを認識します。Emacsは、カレントコードページを使用したファイルの読み書きをサポートするためのコーディングシステムを自動的に作成して、そのコーディングシステムをデフォルトとして使用します。このコーディングシステムの名前は@code{cp@var{nnn}}で、@var{nnn}はコードページ番号です。@footnote{ISO
8859にたいすEmacsの標準コーディングシステムは、この目的に完全に沿っているとは言えません。なぜならDOSコードページは通常、標準ISO文字コードにマッチしないからです。たとえば文字@samp{@,{c}}(cedillaつきの@samp{c})は標準Latin-1文字セットのコード231ですが、それに対応するDOSコードページ850はこのグリフにコード135を使用します。}

@cindex mode line @r{(MS-DOS)}
  @code{cp@var{nnn}}というコーディングシステムはすべて、モードラインのニーモニックに文字@samp{D}
(``DOS'')を使用します。端末のコーディングシステムと、ファイルI/Oにたいするデフォルトのコーディングシステムは、開始時に適切な@code{cp@var{nnn}}コーディングシステムにセットされているので、普通はMS-DOSのモードラインは@samp{-DD\-}で始まります。
@iftex
@ref{Mode Line,,,emacs, the Emacs Manual}を参照してください。
@end iftex
@ifnottex
@ref{Mode Line}を参照してください。
@end ifnottex
極東アジアのDOS端末は@code{cp@var{nnn}}コーディングシステムを使用しないので、Emacsデフォルトのモードラインが初期表示されます。

  コードページ番号は使用しているスクリプトも示すので、Emacsはそのスクリプトにたいする言語環境を選択するために、自動的に@code{set-language-environment}を実行します
@iftex
(@ref{Language Environments,,,emacs, the Emacs Manual}を参照してください)。
@end iftex
@ifnottex
(@ref{Language Environments}を参照してください)。
@end ifnottex

  バッファーにISO
8859文字セット以外の文字が含まれていて、それが選択されたDOSコードページでサポートされていない場合、Emacsは@acronym{ASCII}文字のシーケンスを使用して、それを表示します。たとえばカレントコードページが文字@samp{@`o}(grave
accentつきの小文字の@samp{o})にたいするグリフをもたない場合、その文字は@samp{@{`o@}}と表示されます。ここで中カッコ(braces)はそれが1つの文字であることを示す指標です(これはギリシャ文字やヘブライのアルファベットのような非ラテン文字にたいして不格好に見えるかもしれませんが、その言語を知る人はこれを読むことができます)。その文字がスクリーンの複数列を占めていても、それは単なる1つの文字であり、Emacsコマンドは、それを1文字として扱います。

@cindex MS-Windows codepages
  MS-Windowsは独自のコードページを提供し、同じロケールにたいするDOSコードページとは異なります。たとえばDOSコードページと同じ文字をサポートするWindowsコードページは1252で、DOSコードページ855と同じ文字をサポートするWindowsコードページは1252、などです。EmacsのMS-Windowsバージョンを@samp{-nw}オプションで呼び出したとき、Emacsはカレントコードページを使用して表示を行ないます。

@node MS-DOS Processes
@subsection MS-DOSでのサブプロセス

@cindex compilation under MS-DOS
@cindex inferior processes under MS-DOS
@findex compile @r{(MS-DOS)}
@findex grep @r{(MS-DOS)}
  MS-DOSは単一プロセスの``オペレーティングシステム''なので、非同期サブプロセスは利用できません。特にShellモードと、その変種は機能しません。非同期サブプロセスを使用するEmacs機能のほとんどは、ShellモードやGUDを含めて、MS-DOSでは動作しません。疑わしいときは、コマンドを実行してみれば、機能しない場合は非同期プロセスがサポートされない旨を告げるメッセージが出力されます。

  @kbd{M-x compile}によるEmacsでのコンパイル、@kbd{M-x grep}によるファイル検索、@kbd{M-x
diff}によるファイル間の相違の表示は、同期的に内部プロセスを実行することにより機能します。これはその内部プロセスが終了するまで、編集を行なうことができないことを意味します。

  @code{ispell}プログラムの同期呼び出しにたいする特別なサポートにより、スペルチェックも機能します。これは他のプラットフォームでの非同期呼び出しより遅くなります。

  MS-DOSでは、機能しないShellモードのかわりに、@kbd{M-x
eshell}コマンドを使用することができます。これはPosix-likeなシェルを、Emacs
Lispで実装したEshellパッケージを呼び出します。

  対照的に、ネイティブなWindowsアプリケーションとしてコンパイルされたEmacsは、非同期サブプロセスを@strong{サポートします}
@iftex
@ref{Windows Processes,,,emacs, the Emacs Manual}を参照してください。
@end iftex
@ifnottex
@ref{Windows Processes}を参照してください。
@end ifnottex

@cindex printing under MS-DOS
  @code{lpr-buffer}
@iftex
(@ref{Printing,,,emacs, the Emacs Manual})と、@code{ps-print-buffer}
(@ref{PostScript,,,emacs, the Emacs
Manual}を参照してください)は、プリンターポートの1つに出力を送ることにより、MS-DOSでも機能します。@ref{MS-DOS
Printing,,,emacs, the Emacs Manual}を参照してください。
@end iftex
@ifnottex
(@ref{Printing}を参照してください)と、@code{ps-print-buffer}
(@pxref{PostScript}を参照してください)は、プリンターポートの1つに出力を送ることにより、MS-DOSでも機能します。@ref{MS-DOS
Printing}を参照してください。
@end ifnottex

  MS-DOSでサブプロセスを同期実行する場合は、そのプログラムが終了することと、そのプログラムがキーボード入力の読み取りを試みないことを確認してください。プログラムが自分で終了しない場合、それを終了させることはできません。なぜならMS-DOSはプロセスを終了させる一般的な方法を提供しないからです。このような場合、@kbd{C-c}や@kbd{C-@key{Break}}を押すことが助けになる場合もあります。

  MS-DOSでは、他のマシンにあるファイルへのアクセスもサポートされません。何らかのネットワークリダイレクト処理により、MS-DOSにネットワークアクセス機能が組み込まれていない限り、メール送信、ウェブ閲覧、リモートログインなどのようなネットワーク指向のコマンドは機能しません。

@cindex directory listing on MS-DOS
@vindex dired-listing-switches @r{(MS-DOS)}
  MS-DOSのDiredは@code{ls-lisp}パッケージを使用します
@iftex
(@ref{ls in Lisp,,,emacs, the Emacs Manual}を参照してください)。
@end iftex
@ifnottex
(@ref{ls in Lisp}を参照してください)。
@end ifnottex
したがってMS-DOSのDiredは、変数@code{dired-listing-switches}に記述できる、利用可能なオプションは限られます。機能するオプションは@samp{-A}、@samp{-a}、@samp{-c}、@samp{-i}、@samp{-r}、@samp{-S}、@samp{-s}、@samp{-t}、@samp{-u}です。
