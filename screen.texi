@c ===========================================================================
@c
@c This file was generated with po4a. Translate the source file.
@c
@c ===========================================================================
@c This is part of the Emacs manual.
@c Copyright (C) 1985-1987, 1993-1995, 1997, 2001-2015 Free Software
@c Foundation, Inc.
@c See file emacs.texi for copying conditions.
@node Screen
@chapter 画面の構成
@cindex screen
@cindex frame

  Xウィンドウシステムを使うGNU/Linuxのようなグラフィカルなディスプレーの場合、Emacsは``グラフィカルなウィンドウ''に表示されます。テキスト端末の場合、Emacsは端末スクリーン全体を表示領域として使います。Emacsが占有する画面スクリーンや、グラフィカルなウィンドウを指して、@dfn{フレーム(frame)}という用語を使用します。Emacsの振る舞いは、どちらのフレームでも同じです。通常は1個のフレームだけで始まりますが、必要ならば新たにフレームを作れます(@ref{Frames}を参照してください)。

  それぞれのフレームにはいくつかの領域が含まれています。いちばん上のフレームは@dfn{メニューバー(menu
bar)}で、メニューにある一連のコマンドにアクセスできます。グラフィカルなディスプレーでは、メニューバーのすぐ下に@dfn{ツールバー(tool
bar)}があり、アイコンをクリックすることにより編集コマンドを実行できます。いちばん下のフレームは@dfn{エコーエリア(echo
area)}で、メッセージが表示されたり、Emacsが入力を求める際に使用されます。

  (もしあれば)ツールバーの下とエコーエリアの間の、フレームの主要な領域の部分を、@dfn{ウィンドウ(the
window)}といいます。このマニュアルでは``ウィンドウ''という言葉を、上記のような場合に使います。グラフィカルなディスプレーのシステムでは、``ウィンドウ''という言葉を違う意味で用いますが、上述したとおり、そのような``グラフィカルなウィンドウ''のことは、``フレーム''と呼ぶことにします。

  Emacsのウィンドウには、@dfn{バッファー(buffer)} --- 編集中のテキスト ---
が表示されます。グラフィカルなディスプレーでは、ウィンドウの片側に@dfn{スクロールバー(scroll
bar)}あり、これを使ってバッファー内をスクロールできます。ウィンドウのいちばん下の行は、@dfn{モードライン(mode
line)}です。これには保存されてない変更や、使用されている編集モード、現在のライン番号など、バッファーについての様々な情報が表示されます。

  Emacsを起動すると、通常フレームには1つのウィンドウが表示されます。しかしこのウィンドウを水平方向、または垂直方向に分割して複数のウィンドウを作成し、それぞれ異なるバッファーを表示することもできます(@ref{Windows}を参照してください)。

  どんな時でも、1つのウィンドウが@dfn{選択されたウィンドウ(selected
window)}となります。グラフィカルなディスプレーでは、選択されたウィンドウには目立つカーソル(通常は塗りつぶされて点滅している)が表示され、他のウィンドウには目立たないカーソル(通常はぬりつぶされていない四角)が表示されます。テキスト端末では、選択されたウィンドウのカーソルだけが表示されます。選択されたウィンドウ上に表示されているバッファーを、@dfn{カレントバッファー(current
buffer)}と呼び、それが編集が行われているバッファーとなります。多くのEmacsコマンドはカレントバッファーに暗黙に適用され、選択されてないウィンドウに表示されているテキストは参照用に使用します。もしグラフィカルなディスプレーで複数のフレームを使っている場合、特定のフレームを選択すると、そのフレームのウィンドウが選択されます。

@menu
* Point::                    テキスト内で編集コマンドが作用する場所
* Echo Area::                スクリーンのいちばん下で、短いメッセージが表示されます
* Mode Line::                モードを説明するライン
* Menu Bar::                 メニューバーの使い方
@end menu

@node Point
@section ポイント
@cindex point
@cindex cursor

  カーソルは、選択されたウィンドウで多くの編集コマンドが作用する場所を示し、その場所を@dfn{ポイント(point)}@footnote{``point''という用語は、文字@samp{.}に由来します。この文字は、現在ポイントと呼んでいる値を参照するためのTECO(オリジナルのEmacsを記述していた言語)のコマンドです。}と呼びます。多くのEmacsコマンドはポイントをテキスト中で移動し、テキスト中のさまざまな箇所で編集できるようにします。マウスのボタン1(通常は左ボタン)をクリックしても、ポイントを移動できます。

  デフォルトでは、選択されたウィンドウ上にある、塗りつぶされたボックスのカーソルは文字の@emph{上}に表示されますが、ポイントは2つの文字の@emph{間}にあると考える必要があります。つまりポイントは、カーソルが重なっている文字の@emph{前}にあります。たとえば、@samp{frob}というテキストで、@samp{b}にカーソルがある場合、ポイントは@samp{o}と@samp{b}の間にあります。その位置に@samp{!}という文字を挿入すると、@samp{fro!b}という結果になり、ポイントは@samp{!}と@samp{b}の間にあります。つまりカーソルは@samp{b}の上にあり、実行前と同じです。 

  Emacsでいくつかのファイルを編集して、各ファイルがそれぞれ専用のバッファーにある場合、各バッファには独自のポイント位置があります。バッファーが表示されていなくても、後で表示されるときに備えて、ポイント位置を記録しています。1つのフレームに複数のウィンドウがある場合、各ウィンドウには独自のポイント位置があります。

  Emacsがカーソルをどのように表示するか制御する方法については、@ref{Cursor Display}を参照してください。

@node Echo Area
@section エコーエリア
@cindex echo area

  フレームの1番下の行は、@dfn{エコーエリア(echo area)}です。ここは、いろいろな目的向けの短いテキスト表示に使われます。

@cindex echoing
  エコーエリアという名前は、あなたが打った文字が@dfn{エコーされる}ことが由来で、これは複数の文字からなるコマンドが表示されることを意味します。1文字のコマンドをエコーすることはありません。複数の文字からなるコマンド(@ref{Keys}を参照してください)の途中で、入力中に1秒以上間を置くとエコーされます。Emacsはそれまでに入力されたコマンドの文字を表示し、ユーザーに残りの文字の入力を促します。いったんエコーが始まると、コマンドの残りは、打つと同時にただちにエコーされます。これは、タイプに自信のあるユーザーには速い応答を提供する一方で、自信のないユーザーには最大限のフィードバックを与えるための機能です。

@cindex error message
@cindex echo area message
  エコーエリアは、コマンドを実行できなかったときに、@dfn{エラーメッセージ(error
message)}を表示するためにも使用されます。エラーメッセージと共に、ビープ音が鳴ったり、画面が点滅する場合もあります。

  エコーエリアに有用なメッセージを表示するコマンドもあります。これらの@dfn{有用}なメッセージは、エラーメッセージによく似ていますが、ビープ音を伴わず点滅もしません。たとえば、コマンド@kbd{C-x
=}(@key{Ctrl}を押したまま@kbd{x}をタイプし、@key{Ctrl}を離してから@kbd{=}をタイプします)は、テキスト中のポイントの文字位置と、ウィンドウの現在の列位置を示すメッセージを表示します。処理に時間のかかるコマンドでは、実行中に@samp{...}(どの程度進行したかをパーセント表示で示す場合もあります)で終わるメッセージをエコーエリアに表示し、完了時には@samp{done}を最後に付け加えることがよくあります。

@cindex @file{*Messages*} buffer
@cindex saved echo area messages
@cindex messages saved from echo area
@vindex message-log-max
  エコーエリアに表示される有益なメッセージは、@file{*Messages*}と呼ばれる特別なバッファーに保存されます(まだバッファーについては説明していませんが、詳細は@ref{Buffers}を参照してください)。画面上に短時間しか表示されないメッセージを見逃してしまった場合には、@file{*Messages*}バッファーに切り替えて、もう一度そのメッセージを見ることができます。@file{*Messages*}のサイズは、ある行数に制限されています。変数@code{message-log-max}は、その行数を指定します(まだ変数については説明していませんが、詳細は@ref{Variables}を参照してください)。いったんバッファーがこの行数を超えると、最後に1行加わるごとに先頭の1行を削除します。

  Emacsがエコーエリアをどのように使用するか制御するオプションについては、@ref{Display Custom}を参照してください。

@cindex minibuffer
  エコーエリアは@dfn{ミニバッファー(minibuffer)}の表示にも使われます。これは、編集しようとするファイル名のような、コマンドへの引数を読むのに使われるウィンドウです。ミニバッファーが使用されているとき、エコーエリアには@dfn{プロンプト文字列(prompt
string)}で始まるテキストが表示され、エコーエリアが一時的に選択されたウィンドウとなり、カーソルもその行に表示されます。@kbd{C-g}を打つと、いつでもミニバッファーから抜けられます。@ref{Minibuffer}を参照してください。

@node Mode Line
@section モードライン
@cindex mode line
@cindex top level

  ウィンドウの最後の行は@dfn{モードライン(mode
line)}で、そのウィンドウで何が進行しているか表示します。ウィンドウが1つしかない場合、モードラインはエコーエリアのすぐ上に表示されます。フレームでは最後から2番目の行になります。グラフィカルなディスプレーでは、モードラインは立体的に描画されます。通常、Emacsは目立つように選択されたウィンドウのモードラインを、選択されていないウィンドウと異なるカラーで描画します。

  モードラインに表示されるテキストは以下の書式です:

@example
 @var{cs}:@var{ch}-@var{fr}  @var{buf}      @var{pos} @var{line}   (@var{major} @var{minor})
@end example

@noindent
テキスト端末では、上記テキストの後ろからウィンドウの右端まで一連のダッシュ表示されます。これらのダッシュはグラフィカルなディスプレーでは省略されます。

@var{cs}とその後ろのコロンは、カレントバッファーのキャラクターセットと改行の規則を説明しています。通常Emacsはこれらの設定を自動的に処理しますが、このメッセージが便利なときもあります。

  @var{cs}はバッファーのキャラクターセットを説明します(@ref{Coding
Systems}を参照してください)。もしこれがダッシュ(@samp{-})の場合、特定のキャラクターセットの処理が行われていないことを意味します(例外として、以降で説明する行末規則があります)。@samp{=}の場合は、変換が行われていないことを意味し、通常はテキストに非テキストデータが含まれているときに使用されます。他の文字はさまざまな@dfn{コーディングシステム(coding
systems)} --- たとえば@samp{1}はISO Latin-1を表します。

  テキスト端末では@var{cs}の前に追加で2つの文字が表示され、それによりキーボード入力と端末出力のコーディングシステムが示されます。さらに何らかの入力メソッドを使用している場合は、@var{cs}の前に入力メソッドを識別する文字列が表示されます(@ref{Input
Methods}を参照してください)。

@cindex end-of-line convention, mode-line indication
  @var{cs}の後ろの文字は、通常コロンです。もし違う文字が表示されている場合、それはファイルのエンコーディングに特別な行末規則が使われていることを意味します。通常ファイル内のテキストの各行は@dfn{改行文字(newline
characters)}で区切られていますが、他の2つの規則が使われる場合もあります。MS-DOSのファイルを編集する場合には``キャリッジリターン(carriage-return)''と``ラインフィード(linefeed)''が使われ、コロンではなくバックスラッシュ(@samp{\})または@samp{(DOS)}(オペレーティングシステムに依存する)が表示されます。古いマッキントッシュシステムのファイルでは、改行文字の代わりに``キャリッジリターン(carriage-return)''が使われ、そのような場合コロンではなくスラッシュ(@samp{/})または@samp{(Mac)}が表示されます。いくつかのシステムでは行の区切りとして改行文字を使う場合、コロンではなく@samp{(Unix)}と表示されます。

  モードラインの次の要素は@var{ch}で示される文字列です。2つのダッシュ(@samp{--})が表示されている場合、ウィンドウに表示されているバッファーとディスク上のファイルの内容が同じことを意味し、たとえばバッファーが``未変更(unmodified)''の場合です。バッファーが変更されている場合には2つの星印(@samp{**})が表示されます。読み出し専用のバッファーの場合には、バッファーが編集されている場合には@samp{%*}になり、バッファーが編集されていない場合には@samp{%%}となります。

  通常、@var{ch}の後ろの文字はダッシュ(@samp{-})です。しかしカレントバッファーのデフォルトディレクトリーがリモートマシン上にある場合、かわりに@samp{@@}が表示されます(@ref{File
Names}を参照してください)。

  @var{fr}は選択されているフレームの名前です(@ref{Frames}を参照してください)。これはテキスト端末でだけ表示されます。フレーム名の初期値は@samp{F1}です。

  @var{buf}は、ウィンドウに表示されているバッファーの名前です。通常は編集中のファイル名と同じです。@ref{Buffers}を参照してください。

  @var{pos}はウィンドウの上またはウィンドウの下に、まだテキストがあるかを知らせます。もしバッファーが小さくてウィンドウに全体が表示されている場合、@var{pos}には@samp{All}が表示されます。そうではなくバッファーの一部が表示されているときには、バッファーの先頭が表示されている場合には@samp{Top}、バッファーの最後が表示されている場合には@samp{Bot}、@samp{@var{nn}%}と表示されている場合、@var{nn}はウィンドウの上部がバッファーのどこかをパーセント表示したものです。Size
Indication(サイズ表示)モードでは、バッファー全体のサイズを表示できます。

  @var{line}は、@samp{L}のあとに現在ポイントがある行の番号が続いたものです(Column
Number(列番号)モードをオンにすると、現在の列番号も表示できます。@ref{Optional Mode Line}を参照してください)。

  majorは、そのバッファの@dfn{メジャーモード(major
mode)}の名前です。メジャーモードはバッファーを編集する際の主要なモードで、Textモード、Lispモード、Cモードなどがあります。@ref{Major
Modes}を参照してください。メジャーモード名の後ろに追加の情報を表示するメジャーモードもあります。たとえばCompilation
buffer(コンパイルバッファー)やShell buffer(Shellバッファー)などは、サブプロセスの状態を表示します。

  @var{minor}は有効になっている@dfn{マイナーモード(minor
modes)}の一覧で、上位のメジャーモードに追加の機能を提供するための編集モードです。@ref{Minor Modes}を参照してください。

  いくつかの機能は、それらが本当はマイナーモードではなくても、有効になっていればマイナーモードの一覧とともに表示されます。@samp{Narrow}は、表示中のバッファーが、そのテキストの一部のみを編集するように制限されていることを示します(@ref{Narrowing}を参照してください)。@samp{Def}は、キーボードマクロを定義中であることを示します(@ref{Keyboard
Macros}を参照してください)。

  さらにEmacsがリカーシブエディットにあるときには、モードを囲んでいるカッコの周りに角カッコ(@samp{[@dots{}]})が現れます。リカーシブエディット中も別のリカーシブエディットに入ると、角カッコは2重になります。リカーシブエディットは、特定のバッファにだけ関係するものではなく、Emacs全体に影響するので、角カッコはすべてのウィンドウのモード行に表示されるか、まったく表示されないのどちらかです。@ref{Recursive
Edit}を参照してください。

  モードラインの外観は、その内容の書式と同様、変更できます。@ref{Optional Mode
Line}を参照してください。さらにモードラインはマウスに反応します。モードラインの違う部分をクリックすることでさまざまなコマンドを実行できます。@ref{Mode
Line Mouse}を参照してください。

@node Menu Bar
@section メニューバー
@cindex menu bar

  各Emacsフレームには通常、最上部に@dfn{メニューバー(menu
bar)}があり、よく使われる操作を実行するために使用できます。これはあなた自身で簡単に確かめられますから、ここではそれらを列挙する必要はないでしょう。

  マウスをサポートするディスプレー上では、マウスを使ってメニューバーからコマンドを選ぶことができます。メニューアイテムの後にある右矢印は、そのアイテムにサブメニューがあることを示します。アイテムの最後に@samp{...}がある場合は、コマンドを実際に実行する前に、そのコマンドがキーボードから引数を読み取ることを意味します。

  メニューのコマンドの中には、他のコマンドと同様、キーが割り当てられているものもあります。そのような場合、メニューのアイテムの後ろのカッコ内にキーバインディングが表示されます。メニューアイテムの完全なコマンド名や説明文を見るには、@kbd{C-h
k}とタイプしてから、通常どおりにマウスでメニューバーを選択してください(@ref{Key Help}を参照してください)。

@kindex F10
@findex menu-bar-open
@cindex menu bar access using keyboard
  マウスを使う代わりに@key{F10}(コマンド@code{menu-bar-open}を実行します)を押せば、メニューバーの最初のアイテムを呼び出すことができます。その後は矢印キーでメニュー操作できます。選択されたメニューアイテムを起動するときは@key{RET}、メニュー操作をキャンセルするときは@kbd{C-g}か@kbd{@key{ESC}
@key{ESC} @key{ESC}}を押します。

@kindex M-`
@findex tmm-menubar
@vindex tty-menu-open-use-tmm
  テキスト端末では、エコーエリアからメニューバーのメニューにアクセスすることもできます。これを行うには、変数@code{tty-menu-open-use-tmm}をカスタマイズして、非@code{nil}値にします。その後は@key{F10}をタイプするとメニューをドロップダウンせずに、コマンド@code{tmm-menubar}が実行されます(@kbd{M-`}は常に@code{tmm-menubar}を呼び出します)。@code{tmm-menubar}では、キーボードでメニューアイテムを選択できます。暫定的な候補がエコーエリアに表示されるので、上矢印か下矢印でメニューの異なるアイテムを表示し、@key{RET}を押せばアイテムを選択できます。各メニューアイテムを文字か数字で指定することもできます(通常メニューアイテム名のイニシャル)。この文字または数字とアイテム名は@samp{==>}で区切られています。アイテムの文字または数字を押せばアイテムを選択することができます。
