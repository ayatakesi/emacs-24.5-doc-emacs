# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2016-06-25 01:15+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: node
#: vc1-xtra.texi.orig:8
#, no-wrap
msgid "Miscellaneous VC"
msgstr ""

#. type: subsection
#: vc1-xtra.texi.orig:9
#, no-wrap
msgid "Miscellaneous Commands and Features of VC"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:12
msgid "This section explains the less-frequently-used features of VC."
msgstr ""

#. type: subsubsection
#: vc1-xtra.texi.orig:18 vc1-xtra.texi.orig:20 vc1-xtra.texi.orig:21
#, no-wrap
msgid "Change Logs and VC"
msgstr ""

#. type: menuentry
#: vc1-xtra.texi.orig:18
msgid "Generating a change log file from log entries."
msgstr ""

#. type: node
#: vc1-xtra.texi.orig:18 vc1-xtra.texi.orig:106
#, no-wrap
msgid "VC Delete/Rename"
msgstr ""

#. type: menuentry
#: vc1-xtra.texi.orig:18
msgid "Deleting and renaming version-controlled files."
msgstr ""

#. type: subsubsection
#: vc1-xtra.texi.orig:18 vc1-xtra.texi.orig:149 vc1-xtra.texi.orig:150
#, no-wrap
msgid "Revision Tags"
msgstr ""

#. type: menuentry
#: vc1-xtra.texi.orig:18
msgid "Symbolic names for revisions."
msgstr ""

#. type: node
#: vc1-xtra.texi.orig:18 vc1-xtra.texi.orig:225
#, no-wrap
msgid "Version Headers"
msgstr ""

#. type: menuentry
#: vc1-xtra.texi.orig:18
msgid "Inserting version control headers into working files."
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:24
msgid "If you use RCS or CVS for a program with a @file{ChangeLog} file"
msgstr ""

#. type: iftex
#: vc1-xtra.texi.orig:26
msgid "(@pxref{Change Log,,,emacs, the Emacs Manual}),"
msgstr ""

#. type: ifnottex
#: vc1-xtra.texi.orig:29
msgid "(@pxref{Change Log}),"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:32
msgid ""
"you can generate change log entries from the version control log entries of "
"previous commits."
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:39
msgid ""
"Note that this only works with RCS or CVS@.  This procedure would be "
"particularly incorrect on a modern changeset-based version control system, "
"where changes to the @file{ChangeLog} file would normally be committed as "
"part of a changeset.  In that case, you should write the change log entries "
"first, then pull them into the @samp{*vc-log*} buffer when you commit"
msgstr ""

#. type: iftex
#: vc1-xtra.texi.orig:41
msgid "(@pxref{Log Buffer,,,emacs, the Emacs Manual})."
msgstr ""

#. type: ifnottex
#: vc1-xtra.texi.orig:44
msgid "(@pxref{Log Buffer})."
msgstr ""

#. type: kindex
#: vc1-xtra.texi.orig:47 vc1-xtra.texi.orig:48
#, no-wrap
msgid "C-x v a"
msgstr ""

#. type: findex
#: vc1-xtra.texi.orig:49
#, no-wrap
msgid "vc-update-change-log"
msgstr ""

#. type: table
#: vc1-xtra.texi.orig:54
msgid ""
"Visit the current directory's @file{ChangeLog} file and, for registered "
"files in that directory, create new entries for versions committed since the "
"most recent change log entry (@code{vc-update-change-log})."
msgstr ""

#. type: item
#: vc1-xtra.texi.orig:55
#, no-wrap
msgid "C-u C-x v a"
msgstr ""

#. type: table
#: vc1-xtra.texi.orig:57
msgid "As above, but only find entries for the current buffer's file."
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:64
msgid ""
"For example, suppose the first line of @file{ChangeLog} is dated 1999-04-10, "
"and that the only check-in since then was by Nathaniel Bowditch to "
"@file{rcs2log} on 1999-05-22 with log entry @samp{Ignore log messages that "
"start with `#'.}.  Then @kbd{C-x v a} inserts this @file{ChangeLog} entry:"
msgstr ""

#. type: iftex
#: vc1-xtra.texi.orig:67 vc1-xtra.texi.orig:77 vc1-xtra.texi.orig:88 vc1-xtra.texi.orig:98
msgid "@medbreak"
msgstr ""

#. type: group
#: vc1-xtra.texi.orig:71
#, no-wrap
msgid ""
"1999-05-22  Nathaniel Bowditch  <nat@@apn.org>\n"
"\n"
msgstr ""

#. type: group
#: vc1-xtra.texi.orig:73
#, no-wrap
msgid "        * rcs2log: Ignore log messages that start with `#'.\n"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:85
msgid ""
"If the version control log entry specifies a function name (in parenthesis "
"at the beginning of a line), that is reflected in the @file{ChangeLog} "
"entry.  For example, if a log entry for @file{vc.el} is "
"@samp{(vc-do-command): Check call-process status.}, the @file{ChangeLog} "
"entry is:"
msgstr ""

#. type: group
#: vc1-xtra.texi.orig:92
#, no-wrap
msgid ""
"1999-05-06  Nathaniel Bowditch  <nat@@apn.org>\n"
"\n"
msgstr ""

#. type: group
#: vc1-xtra.texi.orig:94
#, no-wrap
msgid "        * vc.el (vc-do-command): Check call-process status.\n"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:105
msgid ""
"When @kbd{C-x v a} adds several change log entries at once, it groups "
"related log entries together if they all are checked in by the same author "
"at nearly the same time.  If the log entries for several such files all have "
"the same text, it coalesces them into a single entry."
msgstr ""

#. type: subsubsection
#: vc1-xtra.texi.orig:107
#, no-wrap
msgid "Deleting and Renaming Version-Controlled Files"
msgstr ""

#. type: cindex
#: vc1-xtra.texi.orig:108
#, no-wrap
msgid "renaming version-controlled files"
msgstr ""

#. type: item
#: vc1-xtra.texi.orig:111
#, no-wrap
msgid "M-x vc-delete-file"
msgstr ""

#. type: table
#: vc1-xtra.texi.orig:114
msgid ""
"Prompt for a file name, delete the file from the working tree, and schedule "
"the deletion for committing."
msgstr ""

#. type: item
#: vc1-xtra.texi.orig:115
#, no-wrap
msgid "M-x vc-rename-file"
msgstr ""

#. type: table
#: vc1-xtra.texi.orig:118
msgid ""
"Prompt for two file names, @var{var} and @var{old}, rename them in the "
"working tree, and schedule the renaming for committing."
msgstr ""

#. type: findex
#: vc1-xtra.texi.orig:120
#, no-wrap
msgid "vc-delete-file"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:125
msgid ""
"If you wish to delete a version-controlled file, use the command @kbd{M-x "
"vc-delete-file}.  This prompts for the file name, and deletes it via the "
"version control system.  The file is removed from the working tree, and in "
"the VC Directory buffer"
msgstr ""

#. type: iftex
#: vc1-xtra.texi.orig:127
msgid "(@pxref{VC Directory Mode,,, emacs, the Emacs Manual}),"
msgstr ""

#. type: ifnottex
#: vc1-xtra.texi.orig:130
msgid "(@pxref{VC Directory Mode}),"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:133
msgid ""
"it is displayed with the @samp{removed} status.  When you commit it, the "
"deletion takes effect in the repository."
msgstr ""

#. type: findex
#: vc1-xtra.texi.orig:134
#, no-wrap
msgid "vc-rename-file"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:141
msgid ""
"To rename a version-controlled file, type @kbd{M-x vc-rename-file}.  This "
"prompts for two arguments: the name of the file you wish to rename, and the "
"new name; then it performs the renaming via the version control system.  The "
"renaming takes effect immediately in the working tree, and takes effect in "
"the repository when you commit the renamed file."
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:148
msgid ""
"On modern version control systems that have built-in support for renaming, "
"the renamed file retains the full change history of the original file.  On "
"CVS and older version control systems, the @code{vc-rename-file} command "
"actually works by creating a copy of the old file under the new name, "
"registering it, and deleting the old file.  In this case, the change history "
"is not preserved."
msgstr ""

#. type: cindex
#: vc1-xtra.texi.orig:151
#, no-wrap
msgid "revision tag"
msgstr ""

#. type: cindex
#: vc1-xtra.texi.orig:152
#, no-wrap
msgid "tags for version control"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:161
msgid ""
"Most version control systems allow you to apply a @dfn{revision tag} to a "
"specific version of a version-controlled tree.  On modern changeset-based "
"version control systems, a revision tag is simply a symbolic name for a "
"particular revision.  On older file-based systems like CVS, each tag is "
"added to the entire set of version-controlled files, allowing them to be "
"handled as a unit.  Revision tags are commonly used to identify releases "
"that are distributed to users."
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:164
msgid ""
"There are two basic commands for tags; one makes a tag with a given name, "
"the other retrieves a named tag."
msgstr ""

#. type: kindex
#: vc1-xtra.texi.orig:166
#, no-wrap
msgid "C-x v s"
msgstr ""

#. type: findex
#: vc1-xtra.texi.orig:167
#, no-wrap
msgid "vc-create-tag"
msgstr ""

#. type: item
#: vc1-xtra.texi.orig:168
#, no-wrap
msgid "C-x v s @var{name} @key{RET}"
msgstr ""

#. type: table
#: vc1-xtra.texi.orig:172
msgid ""
"Define the working revision of every registered file in or under the current "
"directory as a tag named @var{name} (@code{vc-create-tag})."
msgstr ""

#. type: kindex
#: vc1-xtra.texi.orig:173
#, no-wrap
msgid "C-x v r"
msgstr ""

#. type: findex
#: vc1-xtra.texi.orig:174
#, no-wrap
msgid "vc-retrieve-tag"
msgstr ""

#. type: item
#: vc1-xtra.texi.orig:175
#, no-wrap
msgid "C-x v r @var{name} @key{RET}"
msgstr ""

#. type: table
#: vc1-xtra.texi.orig:180
msgid ""
"For all registered files at or below the current directory level, retrieve "
"the tagged revision @var{name}. This command will switch to a branch if "
"@var{name} is a branch name and your VCS distinguishes branches from tags.  "
"(@code{vc-retrieve-tag})."
msgstr ""

#. type: table
#: vc1-xtra.texi.orig:184
msgid ""
"This command reports an error if any files are locked at or below the "
"current directory, without changing anything; this is to avoid overwriting "
"work in progress."
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:188
msgid ""
"You can give a tag or branch name as an argument to @kbd{C-x v =} or "
"@kbd{C-x v ~}"
msgstr ""

#. type: iftex
#: vc1-xtra.texi.orig:190
msgid "(@pxref{Old Revisions,,,emacs, the Emacs Manual})."
msgstr ""

#. type: ifnottex
#: vc1-xtra.texi.orig:193
msgid "(@pxref{Old Revisions})."
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:196
msgid ""
"Thus, you can use it to compare a tagged version against the current files, "
"or two tagged versions against each other."
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:201
msgid ""
"On SCCS, VC implements tags itself; these tags are visible only through "
"VC@.  Most later systems (including CVS, Subversion, bzr, git, and hg) have "
"a native tag facility, and VC uses it where available; those tags will be "
"visible even when you bypass VC."
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:205
msgid ""
"In file-based version control systems, when you rename a registered file you "
"need to rename its master along with it; the command @code{vc-rename-file} "
"will do this automatically"
msgstr ""

#. type: iftex
#: vc1-xtra.texi.orig:207
msgid "(@pxref{VC Delete/Rename,,,emacs, the Emacs Manual})."
msgstr ""

#. type: ifnottex
#: vc1-xtra.texi.orig:210
msgid "(@pxref{VC Delete/Rename})."
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:224
msgid ""
"If you are using SCCS, you must also update the records of the tag, to "
"mention the file by its new name (@code{vc-rename-file} does this, too).  An "
"old tag that refers to a master file that no longer exists under the "
"recorded name is invalid; VC can no longer retrieve it.  It would be beyond "
"the scope of this manual to explain enough about RCS and SCCS to explain how "
"to update the tags by hand.  Using @code{vc-rename-file} makes the tag "
"remain valid for retrieval, but it does not solve all problems.  For "
"example, some of the files in your program probably refer to others by "
"name.  At the very least, the makefile probably mentions the file that you "
"renamed.  If you retrieve an old tag, the renamed file is retrieved under "
"its new name, which is not the name that the makefile expects.  So the "
"program won't really work as retrieved."
msgstr ""

#. type: subsubsection
#: vc1-xtra.texi.orig:226
#, no-wrap
msgid "Inserting Version Control Headers"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:233
msgid ""
"On Subversion, CVS, RCS, and SCCS, you can put certain special strings "
"called @dfn{version headers} into a work file.  When the file is committed, "
"the version control system automatically puts the revision number, the name "
"of the user who made the commit, and other relevant information into the "
"version header."
msgstr ""

#. type: vindex
#: vc1-xtra.texi.orig:234 vc1-xtra.texi.orig:344
#, no-wrap
msgid "vc-consult-headers"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:240
msgid ""
"VC does not normally use the information in the version headers.  As an "
"exception, when using RCS, Emacs uses the version header, if there is one, "
"to determine the file version, since it is often more reliable than the RCS "
"master file.  To inhibit using the version header this way, change the "
"variable @code{vc-consult-headers} to @code{nil}."
msgstr ""

#. type: kindex
#: vc1-xtra.texi.orig:241
#, no-wrap
msgid "C-x v h"
msgstr ""

#. type: findex
#: vc1-xtra.texi.orig:242
#, no-wrap
msgid "vc-insert-headers"
msgstr ""

#. type: vindex
#: vc1-xtra.texi.orig:243
#, no-wrap
msgid "vc-@var{backend}-header"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:255
msgid ""
"To insert a suitable header string into the current buffer, type @kbd{C-x v "
"h} (@code{vc-insert-headers}).  This command works only on Subversion, CVS, "
"RCS, and SCCS@.  The variable @code{vc-@var{backend}-header} contains the "
"list of keywords to insert into the version header; for instance, CVS uses "
"@code{vc-cvs-header}, whose default value is @code{'(\"\\$Id\\$\")}.  (The "
"extra backslashes prevent the string constant from being interpreted as a "
"header, if the Emacs Lisp file defining it is maintained with version "
"control.)  The @kbd{C-x v h} command inserts each keyword in the list on a "
"new line at point, surrounded by tabs, and inside comment delimiters if "
"necessary."
msgstr ""

#. type: vindex
#: vc1-xtra.texi.orig:256
#, no-wrap
msgid "vc-static-header-alist"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:263
msgid ""
"The variable @code{vc-static-header-alist} specifies further strings to add "
"based on the name of the buffer.  Its value should be a list of elements of "
"the form @code{(@var{regexp} . @var{format})}.  Whenever @var{regexp} "
"matches the buffer name, @var{format} is also inserted as part of the "
"version header.  A @samp{%s} in @var{format} is replaced with the file's "
"version control type."
msgstr ""

#. type: subsection
#: vc1-xtra.texi.orig:264 vc1-xtra.texi.orig:265
#, no-wrap
msgid "Customizing VC"
msgstr ""

#. type: vindex
#: vc1-xtra.texi.orig:267
#, no-wrap
msgid "vc-handled-backends"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:274
msgid ""
"The variable @code{vc-handled-backends} determines which version control "
"systems VC should handle.  The default value is @code{(RCS CVS SVN SCCS Bzr "
"Git Hg Mtn Arch)}, so it contains all the version systems that are currently "
"supported.  If you want VC to ignore one or more of these systems, exclude "
"its name from the list.  To disable VC entirely, set this variable to "
"@code{nil}."
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:279
msgid ""
"The order of systems in the list is significant: when you visit a file "
"registered in more than one system, VC uses the system that comes first in "
"@code{vc-handled-backends} by default.  The order is also significant when "
"you register a file for the first time"
msgstr ""

#. type: iftex
#: vc1-xtra.texi.orig:281
msgid "(@pxref{Registering,,,emacs, the Emacs Manual})."
msgstr ""

#. type: ifnottex
#: vc1-xtra.texi.orig:284
msgid "(@pxref{Registering})."
msgstr ""

#. type: node
#: vc1-xtra.texi.orig:290 vc1-xtra.texi.orig:292
#, no-wrap
msgid "General VC Options"
msgstr ""

#. type: menuentry
#: vc1-xtra.texi.orig:290
msgid "Options that apply to multiple back ends."
msgstr ""

#. type: node
#: vc1-xtra.texi.orig:290 vc1-xtra.texi.orig:323
#, no-wrap
msgid "RCS and SCCS"
msgstr ""

#. type: menuentry
#: vc1-xtra.texi.orig:290
msgid "Options for RCS and SCCS."
msgstr ""

#. type: node
#: vc1-xtra.texi.orig:290 vc1-xtra.texi.orig:367
#, no-wrap
msgid "CVS Options"
msgstr ""

#. type: menuentry
#: vc1-xtra.texi.orig:290
msgid "Options for CVS."
msgstr ""

#. type: subsubsection
#: vc1-xtra.texi.orig:293
#, no-wrap
msgid "General Options"
msgstr ""

#. type: vindex
#: vc1-xtra.texi.orig:295
#, no-wrap
msgid "vc-make-backup-files"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:300
msgid ""
"Emacs normally does not save backup files for source files that are "
"maintained with version control.  If you want to make backup files even for "
"files that use version control, set the variable @code{vc-make-backup-files} "
"to a non-@code{nil} value."
msgstr ""

#. type: vindex
#: vc1-xtra.texi.orig:301
#, no-wrap
msgid "vc-follow-symlinks"
msgstr ""

#. type: cindex
#: vc1-xtra.texi.orig:302
#, no-wrap
msgid "symbolic links (and version control)"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:311
msgid ""
"Editing a version-controlled file through a symbolic link may cause "
"unexpected results, if you are unaware that the underlying file is "
"version-controlled.  The variable @code{vc-follow-symlinks} controls what "
"Emacs does if you try to visit a symbolic link pointing to a "
"version-controlled file.  If the value is @code{ask} (the default), Emacs "
"asks for confirmation.  If it is @code{nil}, Emacs just displays a warning "
"message.  If it is @code{t}, Emacs automatically follows the link and visits "
"the real file instead."
msgstr ""

#. type: vindex
#: vc1-xtra.texi.orig:312
#, no-wrap
msgid "vc-suppress-confirm"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:316
msgid ""
"If @code{vc-suppress-confirm} is non-@code{nil}, then @kbd{C-x v v} and "
"@kbd{C-x v i} can save the current buffer without asking, and @kbd{C-x v u} "
"also operates without asking for confirmation."
msgstr ""

#. type: vindex
#: vc1-xtra.texi.orig:317
#, no-wrap
msgid "vc-command-messages"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:322
msgid ""
"VC mode does much of its work by running the shell commands for the "
"appropriate version control system.  If @code{vc-command-messages} is "
"non-@code{nil}, VC displays messages to indicate which shell commands it "
"runs, and additional messages when the commands finish."
msgstr ""

#. type: subsubsection
#: vc1-xtra.texi.orig:324
#, no-wrap
msgid "Options for RCS and SCCS"
msgstr ""

#. type: cindex
#: vc1-xtra.texi.orig:326
#, no-wrap
msgid "non-strict locking (RCS)"
msgstr ""

#. type: cindex
#: vc1-xtra.texi.orig:327
#, no-wrap
msgid "locking, non-strict (RCS)"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:333
msgid ""
"By default, RCS uses locking to coordinate the activities of several users, "
"but there is a mode called @dfn{non-strict locking} in which you can "
"check-in changes without locking the file first.  Use @samp{rcs -U} to "
"switch to non-strict locking for a particular file, see the @code{rcs} "
"manual page for details."
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:343
msgid ""
"When deducing the version control state of an RCS file, VC first looks for "
"an RCS version header string in the file (@pxref{Version Headers}).  If "
"there is no header string, VC normally looks at the file permissions of the "
"work file; this is fast.  But there might be situations when the file "
"permissions cannot be trusted.  In this case the master file has to be "
"consulted, which is rather expensive.  Also the master file can only tell "
"you @emph{if} there's any lock on the file, but not whether your work file "
"really contains that locked version."
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:349
msgid ""
"You can tell VC not to use version headers to determine the file status by "
"setting @code{vc-consult-headers} to @code{nil}.  VC then always uses the "
"file permissions (if it is supposed to trust them), or else checks the "
"master file."
msgstr ""

#. type: vindex
#: vc1-xtra.texi.orig:350
#, no-wrap
msgid "vc-mistrust-permissions"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:361
msgid ""
"You can specify the criterion for whether to trust the file permissions by "
"setting the variable @code{vc-mistrust-permissions}.  Its value can be "
"@code{t} (always mistrust the file permissions and check the master file), "
"@code{nil} (always trust the file permissions), or a function of one "
"argument which makes the decision.  The argument is the directory name of "
"the @file{RCS} subdirectory.  A non-@code{nil} value from the function says "
"to mistrust the file permissions.  If you find that the file permissions of "
"work files are changed erroneously, set @code{vc-mistrust-permissions} to "
"@code{t}.  Then VC always checks the master file to determine the file's "
"status."
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:366
msgid ""
"VC determines the version control state of files under SCCS much as with "
"RCS@.  It does not consider SCCS version headers, though.  Thus, the "
"variable @code{vc-mistrust-permissions} affects SCCS use, but "
"@code{vc-consult-headers} does not."
msgstr ""

#. type: subsubsection
#: vc1-xtra.texi.orig:368
#, no-wrap
msgid "Options specific for CVS"
msgstr ""

#. type: vindex
#: vc1-xtra.texi.orig:370
#, no-wrap
msgid "vc-cvs-global-switches"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:375
msgid ""
"You can specify additional command line options to pass to all CVS "
"operations in the variable @code{vc-cvs-global-switches}.  These switches "
"are inserted immediately after the @code{cvs} command, before the name of "
"the operation to invoke."
msgstr ""

#. type: vindex
#: vc1-xtra.texi.orig:376
#, no-wrap
msgid "vc-stay-local"
msgstr ""

#. type: vindex
#: vc1-xtra.texi.orig:377
#, no-wrap
msgid "vc-cvs-stay-local"
msgstr ""

#. type: cindex
#: vc1-xtra.texi.orig:378
#, no-wrap
msgid "remote repositories (CVS)"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:386
msgid ""
"When using a CVS repository on a remote machine, VC can try keeping network "
"interactions to a minimum.  This is controlled by the variable "
"@code{vc-cvs-stay-local}.  There is another variable, @code{vc-stay-local}, "
"which enables the feature also for other back ends that support it, "
"including CVS@.  In the following, we will talk only about "
"@code{vc-cvs-stay-local}, but everything applies to @code{vc-stay-local} as "
"well."
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:393
msgid ""
"If @code{vc-cvs-stay-local} is @code{only-file} (the default), VC determines "
"the version control status of each file using only the entry in the local "
"CVS subdirectory and the information returned by previous CVS commands.  As "
"a consequence, if you have modified a file and somebody else has checked in "
"other changes, you will not be notified of the conflict until you try to "
"commit."
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:398
msgid ""
"If you change @code{vc-cvs-stay-local} to @code{nil}, VC queries the remote "
"repository @emph{before} it decides what to do in @code{vc-next-action} "
"(@kbd{C-x v v}), just as it does for local repositories."
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:402
msgid ""
"You can also set @code{vc-cvs-stay-local} to a regular expression that is "
"matched against the repository host name; VC then stays local only for "
"repositories from hosts that match the pattern."
msgstr ""

#. type: cindex
#: vc1-xtra.texi.orig:403
#, no-wrap
msgid "automatic version backups"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:409
msgid ""
"When using a remote repository, Emacs normally makes @dfn{automatic version "
"backups} of the original versions of each edited file.  These local backups "
"are made whenever you save the first changes to a file, and they are removed "
"after you commit your changes to the repository.  (Note that these are not "
"the same as ordinary Emacs backup files;"
msgstr ""

#. type: iftex
#: vc1-xtra.texi.orig:411
msgid "@pxref{Backup,,,emacs, the Emacs Manual}.)"
msgstr ""

#. type: ifnottex
#: vc1-xtra.texi.orig:414
msgid "@pxref{Backup}.)"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:417
msgid ""
"Commands like @kbd{C-x v =} and @kbd{C-x v u} make use of automatic version "
"backups, if possible, to avoid having to access the network."
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:420
msgid ""
"Setting @code{vc-cvs-stay-local} to @code{nil} disables the making of "
"automatic version backups."
msgstr ""

#. type: cindex
#: vc1-xtra.texi.orig:421
#, no-wrap
msgid "manual version backups"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:425
msgid ""
"Automatic version backups have names of the form "
"@w{@code{@var{file}.~@var{version}.~}}.  This is similar to the name that "
"@kbd{C-x v ~} saves old versions to"
msgstr ""

#. type: iftex
#: vc1-xtra.texi.orig:427
msgid "(@pxref{Old Revisions,,,emacs, the Emacs Manual}),"
msgstr ""

#. type: ifnottex
#: vc1-xtra.texi.orig:430
msgid "(@pxref{Old Revisions}),"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:435
msgid ""
"except for the additional dot (@samp{.}) after the version.  The relevant VC "
"commands can use both kinds of version backups.  The main difference is that "
"the ``manual'' version backups made by @kbd{C-x v ~} are not deleted "
"automatically when you commit."
msgstr ""

#. type: cindex
#: vc1-xtra.texi.orig:436
#, no-wrap
msgid "locking (CVS)"
msgstr ""

#. type: Plain text
#: vc1-xtra.texi.orig:442
msgid ""
"CVS does not use locking by default, but there are ways to enable "
"locking-like behavior using its @env{CVSREAD} or @dfn{watch} feature; see "
"the CVS documentation for details.  If that case, you can use @kbd{C-x v v} "
"in Emacs to toggle locking, as you would for a locking-based version control "
"system"
msgstr ""

#. type: iftex
#: vc1-xtra.texi.orig:444
msgid "(@pxref{VC With A Locking VCS,,,emacs, the Emacs Manual})."
msgstr ""

#. type: ifnottex
#: vc1-xtra.texi.orig:447
msgid "(@pxref{VC With A Locking VCS})."
msgstr ""
