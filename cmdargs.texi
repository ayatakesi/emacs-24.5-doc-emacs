@c ===========================================================================
@c
@c This file was generated with po4a. Translate the source file.
@c
@c ===========================================================================
@c This is part of the Emacs manual.
@c Copyright (C) 1985-1987, 1993-1995, 1997, 2001-2015 Free Software
@c Foundation, Inc.
@c See file emacs.texi for copying conditions.
@node Emacs Invocation
@appendix Emacs呼び出しにたいするコマンドライン引数
@cindex command line arguments
@cindex arguments (command line)
@cindex options (command line)
@cindex switches (command line)
@cindex startup (command line arguments)
@cindex invocation (command line arguments)
@c FIXME: Document `--smid'?  --xfq

  Emacsは、Emacsを開始するとき、様々な動作を要求するための、コマンドライン引数をサポートします。これらのコマンド引数の中には、他のエディターとの互換性のためのものや、高度な動作を指定するものがあります。通常の編集にこれらを使用することはお勧めしません(コマンドラインから既存のEmacsジョブにアクセスする方法は、@ref{Emacs
Server}を参照してください)。

  @samp{-}で始まる引数は@dfn{オプションで}、@samp{+@var{linenum}}もオプションです。Emacsは、スタートアップ時に指定されたファイルをvisitします。コマンドラインで最後に指定されたファイルがカレントバッファーになり、それ以外のファイルも別のバッファーでvisitされます。ほとんどのプログラムと同様に、特別な引数@samp{--}は、それ以降のすべての引数が、(名前が@samp{-}で始まっていても)オプションではなくファイル名であることを指定します。

  Emacsのコマンドオプションは、XウィンドウでEmacsが使用するウィンドウのサイズや位置、カラーなど、多くのことを指定できます。多くはありませんが、ファイルのLisp関数をバッチモードで実行するなど、高度な使い方をサポートするためのオプションもあります。このチャプターの各セクションでは、利用可能なオプションを、その目的に合わせて整理して説明します。

  オプションを記述するには2つの方法があります。それは1つの@samp{-}で始まる短い形式と、@samp{--}で始まる長い形式です。たとえば、短い形式が@samp{-d}で、それに対応する長い形式は@samp{--display}です。

  @samp{--}の長い形式は、覚えるのが簡単ですが、多くタイプしなければなりません。しかしオプション名全体を綴る必要はありません。あいまいさのない省略形で充分です。長いオプションが引数をとる場合、オプション名と、そのオプションにたいする引数を区切るには、スペースとイコール記号の両方を使用することができます。したがって@samp{--display
sugar-bombs:0.0}と@samp{--display=sugar-bombs:0.0}の、どちらでも記述することができます。関連性が明確になるのでイコール記号を推奨します。以下の表では、常にイコール記号で記すことにします。

@cindex initial options (command line)
@cindex action options (command line)
@vindex command-line-args
  ほとんどのオプションは、Emacsを初期化する方法や、Emacsセッションのパラメーターを指定します。これらを@dfn{初期化オプション(initial
options)}と呼びます。多くはありませんが、ライブラリーのロードや、Lisp関数の呼び出しなど、動作を指定するオプションもあります。これらを@dfn{動作オプション(action
options)}と呼びます。これらとファイル名を合わせたものを、@dfn{動作引数(action
arguments)}と呼びます。動作引数は、変数@code{command-line-args}に、文字列のリストとして保管されます(実際のところ、Emacsスタートアップ時には、コマンドラインで渡されたすべての引数が、@code{command-line-args}に含まれていますが、初期化を行なう間に、初期化引数は処理されるごとにこのリストから削除され、動作引数だけが残ります)。

@menu
* Action Arguments::         ファイルのvisit、ライブラリーのロード、関数を呼び出す引数。
* Initial Options::          Emacsの開始に影響する引数。
* Command Example::          コマンドライン引数の使用例。
* Environment::              Emacsが使用する環境変数。
* Display X::                デフォルトディスプレーの変更と、リモートログインの使用。
* Font X::                   Xでのテキストのフォント選択。
* Colors X::                 ディスプレーカラーの選択。
* Window Size X::            Xでのスタートアップウィンドウのサイズ。
* Borders X::                Xでの内枠ボーダーと外枠ボーダー。
* Title X::                  初期フレームのタイトルの指定。
* Icons X::                  Xで使用するアイコンの選択。
* Misc X::                   その他のディスプレーオプション。
@end menu

@node Action Arguments
@appendixsec 動作引数

  以下は動作引数の表です:

@table @samp
@item @var{file}
@opindex --file
@itemx --file=@var{file}
@opindex --find-file
@itemx --find-file=@var{file}
@opindex --visit
@itemx --visit=@var{file}
@cindex visiting files, command-line argument
@vindex inhibit-startup-buffer-menu
@code{find-file}を使用して、@var{file}をvisitします。@ref{Visiting}を参照してください。

Emacsスタートアップ時、1つのウィンドウでスタートアップバッファーを表示し、@var{file}をvisitするバッファーを別のウィンドウで表示します(@ref{Windows}を参照してください)。複数のファイル引数を与えた場合、コマンドラインの最後に指定されたファイルが表示され、他のファイルもvisitされますが、表示はされません。

スタートアップバッファーが無効(@ref{Entering
Emacs}を参照してください)の場合、ファイル引数が1つのときは1つのウィンドウだけで@var{file}がvisitされ、ファイル引数が2つのときは、Emacsはファイルを2つの別のウィンドウに表示します。ファイル引数が3つ以上の場合、Emacsは最後に指定されたファイルを1つのウィンドウに表示して、別のウィンドウにバッファーメニュー(@ref{Several
Buffers}を参照してください)を表示します。このバッファーメニューの使用を抑制するには、変数@code{inhibit-startup-buffer-menu}を@code{t}に変更してください。

@item +@var{linenum} @var{file}
@opindex +@var{linenum}
@code{find-file}を使用して@var{file}をvisitし、行番号@var{linenum}に移動します。

@item +@var{linenum}:@var{columnnum} @var{file}
@code{find-file}を使用して@var{file}をvisitし、行番号@var{linenum}に移動して、列番号@var{columnnum}にポイントを置きます。

@item -l @var{file}
@opindex -l
@itemx --load=@var{file}
@opindex --load
@cindex loading Lisp libraries, command-line argument
関数@code{load}で、@var{file}という名前のLispライブラリーをロードします。@var{file}が絶対ファイル名でない場合、Emacsは最初にカレントディレクトリーを探して、次に@code{load-path}
(@ref{Lisp Libraries}を参照してください)にリストされたディレクトリーを探します。

@strong{警告:
}前のコマンドライン引数にvisitされたファイルがある場合、カレントディレクトリーは最後にvisitされたファイルのディレクトリーになります。

@item -L @var{dir}
@opindex -L
@itemx --directory=@var{dir}
@opindex --directory
変数@code{load-path}にリストされたディレクトリーの前に、ディレクトリー@var{dir}を追加します。複数の@samp{-L}オプションを指定した場合、Emacsはその順番を保持します。たとえば@samp{-L
/foo -L /bar}を使用すると、@code{load-path}は@code{("/foo" "/bar"
@dots{})}となります。@var{dir}が@samp{:}で始まる場合、Emacsは@samp{:}を削除した残りを、@code{load-path}にリストされたディレクトリーの(前ではなく)後ろに追加します(MS
Windowsでは@samp{:}のかわりに、@code{path-separator}の値@samp{;}を使用します)。

@item -f @var{function}
@opindex -f
@itemx --funcall=@var{function}
@opindex --funcall
@cindex call Lisp functions, command-line argument
Lisp関数@var{function}を呼び出します。それがインタラクティブな関数(コマンド)の場合、同じ関数をキーシーケンスで呼び出したときのように、引数を対話的に読み取ります。そうでない場合は、その関数を引数なしで呼び出します。

@item --eval=@var{expression}
@opindex --eval
@itemx --execute=@var{expression}
@opindex --execute
@cindex evaluate expression, command-line argument
Lisp式@var{expression}を評価します。

@item --insert=@var{file}
@opindex --insert
@cindex insert file contents, command-line argument
@var{file}の内容を、コマンドライン引数が処理されるときにカレントのバッファーに挿入します。これは通常、@file{*scratch*}バッファー(@ref{Lisp
Interaction}を参照してください)ですが、コマンドラインの前の引数がファイルをvisitしたりバッファーを切り替えるときは、別のバッファーになるでしょう。このコマンドライン引数の効果は、@kbd{M-x
insert-file}が行なうのと同様です(@ref{Misc File Ops}を参照してください)。

@item --kill
@opindex --kill
確認なしでEmacsを終了します。

@item --help
@opindex --help
利用可能なすべてのオプションがリストされたUsageメッセージをプリントしてから、正常終了します。

@item --version
@opindex --version
Emacsのバージョンをプリントしてから、正常終了します。
@end table

@node Initial Options
@appendixsec 初期化オプション

  初期化オプションは、Emacsセッションにたいするパラメーターを指定します。このセクションでは、より一般的な初期化オプションを説明します。いくつかのオプションは、厳密には以降のセクションで説明するXウィンドウシステムに関連したオプションです。

  いくつかの初期化オプションは、初期化ファイルのロードに影響します。Emacsは通常、@file{site-start.el}が存在する場合は最初にそれをロードし、ユーザーの初期化ファイルが存在すれば次にそれをロードして、デフォルト初期化ファイル@file{default.el}が存在すれば最後にそれをロードします(@ref{Init
File}を参照してください)。それらのファイルのロードを抑制したり、それらのファイルを別のファイルで置き換えるオプションもあります。

@table @samp
@item -chdir @var{directory}
@opindex -chdir
@itemx --chdir=@var{directory}
@opindex --chdir
@cindex change Emacs directory
他のことを行なう前にまず、カレントディレクトリーを@var{directory}に変更します。これはEmacsが停止したのと同じディレクトリーで開始されるように、主にXでのセッション管理に使用されます。これによりデスクトップの保存と復元が簡単になります。

@item -t @var{device}
@opindex -t
@itemx --terminal=@var{device}
@opindex --terminal
@cindex device for Emacs terminal I/O
端末の入出力に@var{device}をデバイスとして使用します。このオプションは暗に@samp{--no-window-system}を含みます。

@item -d @var{display}
@opindex -d
@itemx --display=@var{display}
@opindex --display
@cindex display for Emacs frame
Emacs初期フレームを開くために、Xウィンドウシステムと@var{display}という名前のディスプレーを使用します。詳細は、@ref{Display
X}を参照してください。

@item -nw
@opindex -nw
@itemx --no-window-system
@opindex --no-window-system
@cindex disable window system
環境変数@env{DISPLAY}がセットされていても、ウィンドウシステムと直接やりとりしません。これはEmacsが、Emacsのすべての表示と出力のために、開始された端末を使用することを意味します。

@cindex batch mode
@item -batch
@opindex --batch
@itemx --batch
Emacsを@dfn{バッチモード(batch mode)}で実行します。バッチモードは、シェルスクリプトやmakeファイルから、Emacs
Lispで記述されたプログラムを実行するために使用されます。Lispプログラムを呼び出すには、@samp{-batch}オプションと併せて、1つ以上の@samp{-l}、@samp{-f}、@samp{--eval}を使用します(@ref{Action
Arguments}を参照してください)。使用例は、@ref{Command Example}を参照してください。

バッチモードでは、Emacsは編集されるテキストを表示せず、@kbd{C-z}や@kbd{C-c}のような、標準の端末割り込みが通常の効果をもちます。通常はエコーエリアにメッセージをプリントするEmacs関数は、かわりに標準出力ストリーム(@code{stdout})、または標準エラーストリーム(@code{stderr})にメッセージをプリントします(正確に言うと、@code{prin1}、@code{princ}、@code{print}のような関数は@code{stdout}にプリントし、@code{message}や@code{error}は@code{stderr}にプリントします)。通常はミニバッファーからキーボード入力を読み取る関数は、かわりに端末の標準入力ストリーム(@code{stdin})から入力を受け取ります。

@samp{--batch}は暗に@samp{-q}(初期化ファイルをロードしません)を含みますが、それでも@file{site-start.el}はロードされます。これはすべてのコマンドオプションを処理した後に、Emacsを終了します。それに加えて、自動保存が明示的に要求された場合を除き、自動保存を無効にします。また自動保存が要求されていない場合は、ファイルの保存での@code{fsync}システムコールを省略します。

@item --script @var{file}
@opindex --script
@cindex script mode
@samp{--batch}と同様に、Emacsをバッチモードで実行してから、@var{file}のLispコードを読み込み実行します。

このオプションは通常、Emacsを実行する実行可能スクリプトの中で使用します。これは以下のテキストを最初の行に記述します:

@example
#!/usr/bin/emacs --script
@end example

@noindent
これは@samp{--script}でEmacsを呼び出し、スクリプトファイル名は@var{file}です。それからEmacs
Lispは最初の行の@samp{#!}をコメント区切りとして扱います。

@item -q
@opindex -q
@itemx --no-init-file
@opindex --no-init-file
@cindex bypassing init and @file{default.el} file
@cindex init file, not loading
@cindex @file{default.el} file, not loading
初期化ファイルをロードしません(@ref{Init
File}を参照してください)。Emacsがこのオプションで呼び出された場合、Customize機能は、保存のオプションを受け付けません(@ref{Easy
Customization}を参照してください)。このオプションは@file{site-start.el}のロードは無効にしません。

@item --no-site-file
@opindex --no-site-file
@cindex @file{site-start.el} file, not loading
@file{site-start.el}をロードしません(@ref{Init
File}を参照してください)。@samp{-Q}オプションもこれを行ないますが、@samp{-q}のような他のオプションはこれを行ないません。

@item --no-site-lisp
@opindex --no-site-lisp
@cindex @file{site-start.el} file, not loading
@code{load-path}に@file{site-lisp}ディレクトリーを含めません(@ref{Init
File}を参照してください)。@samp{-Q}オプションもこれを行ないます。

@item --no-splash
@opindex --no-splash
@vindex inhibit-startup-screen
@cindex splash screen
@cindex startup message
スタートアップ画面を表示しません。初期化ファイルで変数@code{inhibit-startup-screen}を非@code{nil}にセットしても、この効果を得ることができます(@ref{Entering
Emacs}を参照してください)。

@item -Q
@opindex -Q
@itemx --quick
@opindex --quick
最小のカスタマイズでEmacsを開始します。これは@samp{-q}、@samp{--no-site-file}、@samp{--no-site-lisp}、@samp{--no-splash}を一緒に使用したのと同様です。これは@code{inhibit-x-resources}を@code{t}にセットすることにより、EmacsがXリソースの処理を行なうことも停止します(@ref{Resources}を参照してください)。

@item -daemon
@opindex -daemon
@itemx --daemon
@opindex --daemon
Emacsをデーモンとして開始します。これはフレームをオープンせずに、まずEmacsを開始した後、Emacsサーバーを開始してから、端末との接続を切断します。@command{emacsclient}コマンドを使用して、編集のためにEmacsに接続できます。デーモンとしてのEmacsの使用についての情報は、@ref{Emacs
Server}を参照してください。

@item -daemon=@var{SERVER-NAME}
バックグラウンドでEmacsをデーモンとして開始して、サーバー名には@var{SERVER-NAME}を使用します。

@item --no-desktop
@opindex --no-desktop
保存されたデスクトップをリロードしません。@ref{Saving Emacs Sessions}を参照してください。

@item -u @var{user}
@opindex -u
@itemx --user=@var{user}
@opindex --user
@cindex load init file of another user
あなたの初期化ファイルのかわりに、@var{user}の初期化ファイルをロードします。@footnote{このオプションはMS-Windowsでは効果がありません。}

@item --debug-init
@opindex --debug-init
@cindex errors in init file
initファイルのエラーにたいして、Emacs Lispデバッガーを有効にします。@ref{Error Debugging,, Entering the
Debugger on an Error, elisp, The GNU Emacs Lisp Reference Manual}を参照してください。
@end table

@node Command Example
@appendixsec コマンド引数の例

  以下は、引数とオプションを指定してEmacsを使用する例です。ここでは、ロードすることにより、Cプログラムをvisitしたカレントバッファーにたいして、何か便利な操作を行なう、@file{hack-c.el}という名前のLispプログラムファイルがあるとしましょう。

@example
emacs --batch foo.c -l hack-c -f save-buffer >& log
@end example

@noindent
これは@file{foo.c}をvisitしてから、@file{hack-c.el}(これはvisitされたファイルに何らかの変更を行ないます)をロードし、@file{foo.c}を保存(@code{save-buffer}は@kbd{C-x
C-s}にバインドされた関数であることに注意してください)した後に、(@samp{--batch}オプションなので)Emacsを終了してシェルに戻ります。@samp{--batch}は、出力を@file{log}にリダイレクトしても問題がないことが保証されます。なぜならEmacsは作業するためのディスプレー端末をもたないと想定されるからです。

@node Environment
@appendixsec 環境変数
@cindex environment variables

  @dfn{環境(environment)}とは、オペレーティングシステムの機能です。これは値と名前をもつ変数のコレクションからなります。それぞれの変数は@dfn{環境変数(environment
variable)}と呼ばれます。環境変数名は大文字小文字を区別し、慣習では大文字だけを使用します。値はすべてテキスト文字列です。

  何が環境を便利にしているかというと、それはサブプロセスが親プロセスから自動的に環境を継承できることです。これはログインシェルで環境変数をセットして、実行するすべて(Emacsを含む)のプログラムが、それを参照できることを意味します。Emacsのサブプロセス(シェル、コンパイラー、バージョンコントロールシステムなど)も、Emacsから環境を継承します。

@findex setenv
@findex getenv
@vindex initial-environment
  Emacsの中では、コマンド@kbd{M-x getenv}は環境変数の名前を読み取って、その値をエコーエリアにプリントします。@kbd{M-x
setenv}はEmacs環境で変数をセットし、@kbd{C-u M-x
setenv}は変数を削除します(@samp{$}による環境変数の置き換えは、ファイル名にたいする値と同様に機能します。@ref{File Names
with $}を参照してください)。変数@code{initial-environment}は、Emacsにより継承された初期環境を保管します。

  Emacsの外で環境変数をセットする方法は、オペレーティングシステム、特に使用しているシェルに依存します。たとえば以下はBashを使用して、環境変数@env{ORGANIZATION}に@samp{not
very much}をセットする例です:

@example
export ORGANIZATION="not very much"
@end example

@noindent
以下はcshまたはtcshでこれを行なう方法の例です:

@example
setenv ORGANIZATION "not very much"
@end example

  EmacsがXウィンドウシステムを使用している場合、Xを制御するさまざまな環境変数は、Emacsも同様に制御します。詳細は、Xのドキュメントを参照してください。

@menu
* General Variables::        すべてのバージョンのEmacsが使用する環境変数。
* Misc Variables::           システム固有の変数。
* MS-Windows Registry::      MS-Windowsでの環境の代用。
@end menu

@node General Variables
@appendixsubsec 一般的な変数

  以下は、Emacsで特別な意味をもつ環境変数の、アルファベット順のリストです。これらの変数のほとんどは、他のプログラムでも使用されます。Emacsはこれらの環境変数がセットされていることを要求しませんが、セットされている場合はその値を使用します。

@c This used to be @vtable, but that enters the variables alone into
@c the Variable Index, which in some cases, like ``HOME'', might be
@c confused with keys by that name, and other cases, like ``NAME'',
@c might be confused with general-purpose phrases.
@table @env
@item CDPATH
@vindex CDPATH, environment variable
相対ディレクトリー名を指定したときに、指定したディレクトリーを検索するために、@code{cd}コマンドにより使用されます。
@item DBUS_SESSION_BUS_ADDRESS
@vindex DBUS_SESSION_BUS_ADDRESS, environment variable
D-BusサポートつきでEmacsがコンパイルされている場合、D-Busにより使用されます。通常これを変更する必要はありません。@samp{unix:path=/dev/null}のようなダミーアドレスをセットすることにより、D-Busセッションバスとの接続を抑止し、同様にD-Busセッションバスがまだ実行されていないときは自動的に開始します。
@item EMACSDATA
@vindex EMACSDATA, environment variable
Emacsに含まれるアーキテクチャーに独立なファイルのディレクトリーです。これは変数@code{data-directory}の初期化に使用されます。
@item EMACSDOC
@vindex EMACSDOC, environment variable
ドキュメント文字列ファイルのディレクトリーで、Lisp変数@code{doc-directory}の初期化に使用されます。
@item EMACSLOADPATH
@vindex EMACSLOADPATH, environment variable
Emacs
Lispファイルを検索する、コロンで区切られたディレクトリーのリスト@footnote{これ以降、``コロンで区切られたディレクトリーのリスト''という場合は、UnixおよびGNU/Linuxシステムの場合を指します。MS-DOSおよびMS-Windowsでは、DOS/Windowsファイル名にはドライブ文字の後のコロンが含まれるので、かわりにセミコロンでディレクトリーが区切られます。}です。セットされている場合は、変数@code{load-path}の初期値です(@ref{Lisp
Libraries}を参照してください)。空の要素は、@code{load-path}のデフォルト値を意味します。たとえば@samp{EMACSLOADPATH="/tmp:"}を使用すると、デフォルトの@code{load-path}の前に@file{/tmp}を追加します。リストの中間に空の要素を指定するには、@samp{EMACSLOADPATH="/tmp::/foo"}のように、2つのコロンを続けます。
@item EMACSPATH
@vindex EMACSPATH, environment variable
実行可能ファイルを検索するための、コロンで区切られたディレクトリーのリストです。セットされている場合、Emacsは変数@code{exec-path}(@ref{Shell}を参照してください)を初期化するときに、@env{PATH}(以下参照)に加えてこれをを使用します。
@item EMAIL
@vindex EMAIL, environment variable
@vindex user-mail-address@r{, initialization}
メールアドレスです。Lisp変数@code{user-mail-address}を初期化するために使用されます。Emacsのメールインターフェースは、送信メッセージの@samp{From}ヘッダーにこれを使用します(@ref{Mail
Headers}を参照してください)。
@item ESHELL
@vindex ESHELL, environment variable
シェルモードで、環境変数@env{SHELL}をオーバーライドするために使用されます(@ref{Interactive
Shell}を参照してください)。
@item HISTFILE
@vindex HISTFILE, environment variable
ログインしている間のシェルコマンドが保存されるファイルの名前です。この変数のデフォルトは、Bashを使用している場合は@file{~/.bash_history}、kshのときは@file{~/.sh_history}、それ以外では@file{~/.history}です。
@item HOME
@vindex HOME, environment variable
ディレクトリーツリー上で、あなたのファイルがある場所です。チルダ(@file{~})で始まるファイル名の展開に使用されます。MS-DOSでは、この変数のデフォルトはEmacsが開始されたディレクトリーで、そのディレクトリー名が@samp{/bin}で終わる場合、@samp{/bin}は取り除かれます。Windowsでは、@env{HOME}のデフォルト値は、ユーザープロファイルディレクトリーの@file{Application
Data}サブディレクトリー(つまり通常は@file{C:/Documents and
Settings/@var{username}/Application
Data}。@var{username}はユーザー名)ですが、後方互換のため、@file{C:/}に@file{.emacs}がある場合は、かわりに@file{C:/}がデフォルト値になります。
@item HOSTNAME
@vindex HOSTNAME, environment variable
@c complete.el is obsolete since 24.1.
Emacsが実行されているホストの名前です。
@ignore
@item INCPATH
A colon-separated list of directories.  Used by the @code{complete} package
to search for files.
@end ignore
@item INFOPATH
@vindex INFOPATH, environment variable
コロンで区切られた、Infoファイルを検索するディレクトリーのリストです。
@item LC_ALL
@vindex LC_ALL, environment variable
@itemx LC_COLLATE
@vindex LC_COLLATE, environment variable
@itemx LC_CTYPE
@vindex LC_CTYPE, environment variable
@itemx LC_MESSAGES
@vindex LC_MESSAGES, environment variable
@itemx LC_MONETARY
@vindex LC_MONETARY, environment variable
@itemx LC_NUMERIC
@vindex LC_NUMERIC, environment variable
@itemx LC_TIME
@vindex LC_TIME, environment variable
@itemx LANG
@vindex LANG, environment variable
そのユーザーの優先されるlocaleです。localeには6つのカテゴリーがあり、それぞれ環境変数で指定されます。ソートは@env{LC_COLLATE}、文字エンコーディングは@env{LC_CTYPE}、システムメッセージは@env{LC_MESSAGES}、通貨形式は@env{LC_MONETARY}、数字は@env{LC_NUMERIC}、日時は@env{LC_TIME}でlocaleを指定します。これらの変数の1つがセットされていない場合、そのカテゴリーのデフォルトは環境変数@env{LANG}の値、@env{LANG}がセットされていない場合は@samp{C}
localeになります。しかし@env{LC_ALL}が指定された場合、これは他のすべてのlocale環境変数のセッティングをオーバーライドします。

MS-Windowsでは、Emacsを開始したとき環境で@env{LANG}がまだセットされていない場合、Emacsはシステムワイドなデフォルト言語にもとづき、@env{LANG}をセットします。MS-Windowsのいくつかのバージョンでは、これはコントロールパネルの@samp{Regional
Settings}でセットできます。

@env{LC_CTYPE}カテゴリーの値は、デフォルトの言語環境(language environment)とコーディングシステム(coding
system)を選択するために、@code{locale-language-names}、@code{locale-charset-language-names}、@code{locale-preferred-coding-systems}のエントリーにたいしてマッチされます。@ref{Language
Environments}を参照してください。
@item LOGNAME
@vindex LOGNAME, environment variable
ユーザーのログイン名です。@env{USER}も参照してください。
@item MAIL
@vindex MAIL, environment variable
システムのメールinbox名です。
@ifnottex
@item MH
@vindex MH, environment variable
mhシステムのセットアップファイル名です。@ref{Top,,MH-E,mh-e, The Emacs Interface to
MH}を参照してください。
@end ifnottex
@item NAME
@vindex NAME, environment variable
あなたの現実世界での名前です。これは変数@code{user-full-name}を初期化するために使用されます(@ref{Mail
Headers}を参照してください)。
@item NNTPSERVER
@vindex NNTPSERVER, environment variable
ニュースサーバーの名前です。Gnusパッケージで使用されます。
@item ORGANIZATION
@vindex ORGANIZATION, environment variable
あなたが属する組織の名前です。Gnusパッケージで、ポストの`Organization:'ヘッダーをセットするために使用されます。
@item PATH
@vindex PATH, environment variable
コロンで区切られた、実行可能ファイルを含むディレクトリーのリストです。これは変数@code{exec-path}を初期化するために使用されます(@ref{Shell}を参照してください)。
@item PWD
@vindex PWD, environment variable
セットされている場合、これはEmacsが開始されたときのデフォルトディレクトリーになるはずです。
@item REPLYTO
@vindex REPLYTO, environment variable
セットされている場合は、変数@code{mail-default-reply-to}の初期値になります(@ref{Mail
Headers}を参照してください)。
@item SAVEDIR
@vindex SAVEDIR, environment variable
新しいアーティクルがデフォルトで保存されるディレクトリーの名前です。Gnusパッケージにより使用されます。
@item SHELL
@vindex SHELL, environment variable
Emacsの中からプログラムのパースや実行に使用されるインタープリターの名前です。
@item SMTPSERVER
@vindex SMTPSERVER, environment variable
送信メールサーバーの名前です。これは変数@code{smtpmail-smtp-server}を初期化するために使用されます(@ref{Mail
Sending}を参照してください)。
@cindex background mode, on @command{xterm}
@item TERM
@vindex TERM, environment variable
Emacsが使用する端末タイプです。Emacsがバッチモードで実行されていないとき、この変数はセットされていなければなりません。MS-DOSでは、デフォルトは@samp{internal}で、これはその機種固有のディスプレーを扱う、ビルトインの端末エミュレーションを指定します。
@item TERMCAP
@vindex TERMCAP, environment variable
@env{TERM}で指定された端末をどのようにプログラムするかを記述する、termcapライブラリーファイルの名前です。デフォルトは@file{/etc/termcap}です。
@item TMPDIR
@vindex TMPDIR, environment variable
@itemx TMP
@vindex TMP, environment variable
@itemx TEMP
@vindex TEMP, environment variable
これらの環境変数は、変数@code{temporary-file-directory}を初期化するために使用されます。これは一時ファイルを置く場所を指定します(@ref{Backup}を参照してください)。Emacsは最初に@env{TMPDIR}の使用を試みます。これがセットされていない場合、通常Emacsは@file{/tmp}にフォールバックします。しかしMS-WindowsとMS-DOSでは、かわりに@env{TMP}、次に@env{TEMP}、最後に@file{c:/temp}にフォールバックします。
@item TZ
@vindex TZ, environment variable
これはカレントタイムゾーン(もしかしたらサマータイムの情報も)を指定します。MS-DOSでは、Emacsを開始したときの環境で@env{TZ}がセットされていない場合、EmacsはDOSが返す国コードにたいして、適切なデフォルト値を定義します。MS-Windowsでは、Emacsは@env{TZ}を使用しません。
@item USER
@vindex USER, environment variable
ユーザーのログイン名です。@env{LOGNAME}も参照してください。MS-DOSでは、デフォルトは@samp{root}です。
@item VERSION_CONTROL
@vindex VERSION_CONTROL, environment variable
変数@code{version-control}の初期化に使用されます(@ref{Backup Names}を参照してください)。
@end table

@node Misc Variables
@appendixsubsec その他の変数

これらの変数は、特定の設定だけにたいして使用されます:

@vtable @env
@item COMSPEC
MS-DOSとMS-Windowsで、バッチファイルとシェルの内部コマンドを呼び出すときに使用する、コマンドインタープリターの名前です。MS-DOSでは、環境変数@env{SHELL}のデフォルト値のためにも使用されます。

@item NAME
MS-DOSで、この変数は変数@env{USER}のデフォルト値として使用されます。

@item EMACSTEST
MS-DOSで、内部端末エミュレーターの操作ログに使用するファイルを指定します。この機能はバグレポートを送るときに便利です。

@item EMACSCOLORS
MS-DOSで、スクリーンカラーを指定します。Emacsは開始時の数瞬、デフォルトカラーを表示するので、それらの指定にこの方法が便利です。

この変数の値は2文字のエンコーディングで指定し、それぞれデフォルトフェイスにたいして、1文字目はフォアグラウンドカラー、2文字目はバックグラウンドカラーを指定します。それぞれの文字は、標準のPCテキストモードディスプレーのカラーを記述する、16進コードを指定します。たとえばlight
grayの背景色でblueのテキストを得たい場合は、@samp{EMACSCOLORS=17}を指定します。ここで1はカラーblue、7はカラーlight
grayを指定しています。

PCディスプレーは通常、8色のバックグラウンドカラーだけをサポートします。しかしバックグラウンドカラーにたいして、16色すべてを使用できるDOSディスプレーにモードを切り替えるので、実際には4ビットのバックグラウンドカラーすべてが使用されます。

@item PRELOAD_WINSOCK
MS-Windowsでこの変数をセットしている場合、Emacsは開始時に、最初に要求されたときまで待たずに、ネットワークライブラリーのロードと初期化を行ないます。

@item emacs_dir
MS-Windowsでは、@env{emacs_dir}は特別な環境変数で、これはEmacsがインストールされたディレクトリーのフルパスを指します。Emacsが標準的なディレクトリー構造にインストールされた場合、この変数の値は自動的に計算されます。他の環境変数とは異なり、これは開始時にEmacsによりオーバーライドされるので、標準的なインストールをした場合には、あなた自身がこの変数のセッティングを使用することは、あまりないでしょう。@env{EMACSLOADPATH}のような他の環境変数をセットするとき、絶対パスをハードコーディングするより、@env{emacs_dir}を使う法が便利だと気づくでしょう。これにより複数バージョンのEmacsが、同じ環境変数のセッティングを共有することが可能になり、環境やレジストリーのセッティングを変更せずに、Emacsのインストールディレクトリーを変更できるようになります。
@end vtable

@node MS-Windows Registry
@appendixsubsec MS-Windowsのシステムレジストリー
@pindex addpm, MS-Windows installation program
@cindex registry, setting environment variables (MS-Windows)

MS-Windowsでは、インストールプログラム@command{addpm.exe}が、システムレジストリーの@file{HKEY_LOCAL_MACHINE}セクションの、@file{/Software/GNU/Emacs}の下の@env{emacs_dir}、@env{EMACSLOADPATH}、@env{EMACSDATA}、@env{EMACSPATH}、@env{EMACSDOC}、@env{SHELL}、@env{TERM}の値を追加します。これを行なうのは、異なるバージョンのWindowsにたいして環境変数をセットする、標準的な場所がないからです。最近のバージョンのEmacsでは、@command{addpm.exe}の実行は絶対に必要ではなくなりましたが、古いバージョンからアップグレードする場合、@command{addpm.exe}は以前のインストールから、(おそらく最新のEmacsと互換性がない)古いレジストリーエントリーを取得しないことを保証します。

Emacsを開始したときは、環境のチェックと同様に、システムレジストリーの、これらの変数と@env{HOME}、@env{LANG}、@env{PRELOAD_WINSOCK}もチェックします。

これらの変数の値を決定するために、Emacsは次の手順にしたがいます。最初に環境がチェックされます。そこで変数が見つからない場合、Emacsは@file{/Software/GNU/Emacs}のレジストリーキーを名前で探します。最初にレジストリーの@file{HKEY_CURRENT_USER}セクション、そこで見つからなければ、@file{HKEY_LOCAL_MACHINE}セクションを探します。それでもなおEmacsが値を決定できない場合、コンパイルされたときのデフォルトが使用されます。

上記の環境変数に加えて、@file{/Software/GNU/Emacs}のレジストリーキーで、Xに属する@file{.Xdefaults}ファイル(@pxref{X
Resources})のセッティングの多くを追加することもできます。

@node Display X
@appendixsec ディスプレー名の指定
@cindex display name (X Window System)
@cindex @env{DISPLAY} environment variable

  環境変数@env{DISPLAY}は、Emacsを含むすべてのXクライアントに、ウィンドウをどこに表示するかを指定します。通常の状況では、この変数の値は、Xサーバーを開始してローカルでジョブを実行したとき、デフォルトにセットされます。ディスプレーを自分で指定することもできます。これを行なう理由の1つは、他のシステムにログインして、そこでEmacsを実行し、ウィンドウはローカル端末のウィンドウに表示させたい場合です。

  @env{DISPLAY}は、@samp{@var{host}:@var{display}.@var{screen}}という構文をもちます。ここで@var{host}はXウィンドウシステムのサーバー機のホスト名、@var{display}は、あなたのサーバー(Xサーバー)を、同一機種上の他のサーバーと区別するために任意に割り当てられる数字、そして@var{screen}フィールドは、Xサーバーが複数の端末スクリーンを制御することを可能にします。ピリオドと@var{screen}フィールドはオプションです。@var{screen}が含まれる場合、通常は0です。

  たとえば、あなたのホスト名が@samp{glasperle}で、あなたのサーバーが設定にリストされた最初の(もしかしたら唯一の)サーバーの場合、@env{DISPLAY}は@samp{glasperle:0.0}になります。

  Emacsを実行するとき、変数@env{DISPLAY}を変更するか、オプション@samp{-d
@var{display}}または@samp{--display=@var{display}}で、明示的にディスプレーを指定できます。以下は例です:

@smallexample
emacs --display=glasperle:0 &
@end smallexample

  @samp{-nw}オプションで、Xウィンドウシステムの使用を抑止できます。その場合、Emacsはディスプレーとして制御テキスト端末を使用します。@ref{Initial
Options}を参照してください。

  セキュリティーの規制により、リモートシステムのプログラムが、ローカルシステムで表示を行なうのを禁ずることがあります。この場合、Emacsは以下のようなメッセージを出力します:

@smallexample
Xlib:  connection to "glasperle:0.0" refused by server
@end smallexample

@noindent
ローカル機で@command{xhost}コマンドを使用することにより、リモート機からアクセスする権限を与えれば、この問題を解決できるでしょう。

@node Font X
@appendixsec フォント指定オプション
@cindex font name (X Window System)

デフォルトのフォントを指定するために、コマンドラインオプション@samp{-fn
@var{font}}(または@samp{--font}。これは@samp{-fn}のエイリアスです)を使用できます。

@table @samp
@item -fn @var{font}
@opindex -fn
@itemx --font=@var{font}
@opindex --font
@cindex specify default font from the command line
@var{font}をデフォルトフォントとして使用します。
@end table

コマンドラインでフォント名をEmacsに渡す場合、フォント名にシェルが特別に扱う文字(たとえばスペース)が含まれる場合は、クォーテーションマークで囲んで``クォート''する必要があるでしょう。たとえば:

@smallexample
emacs -fn "DejaVu Sans Mono-12"
@end smallexample

フォント名やデフォルトフォントを指定する別の方法についての詳細は、@ref{Fonts}を参照してください。

@node Colors X
@appendixsec ウィンドウカラーオプション
@cindex color of window, from command line
@cindex text colors, from command line

  Emacsディスプレーのさまざまな場所で使用するカラーを指定するために、以下のコマンドラインオプションを使用できます。カラーは、カラーネーム(color
names)か、RGBトリプレット(RGB triplets)のどちらかを使用して、指定します。

@table @samp
@item -fg @var{color}
@opindex -fg
@itemx --foreground-color=@var{color}
@opindex --foreground-color
@cindex foreground color, command-line argument
フォアグラウンドカラーを指定します。@code{default}フェイス(@ref{Faces}を参照してください)で指定されたカラーをオーバーライドします。
@item -bg @var{color}
@opindex -bg
@itemx --background-color=@var{color}
@opindex --background-color
@cindex background color, command-line argument
バックグラウンドカラーを指定します。@code{default}フェイスで指定されたカラーをオーバーライドします。
@item -bd @var{color}
@opindex -bd
@itemx --border-color=@var{color}
@opindex --border-color
@cindex border color, command-line argument
Xウィンドウのボーダーカラーを指定します。EmacsがGTK+サポートつきでンパイルされいてる場合、効果はありません。
@item -cr @var{color}
@opindex -cr
@itemx --cursor-color=@var{color}
@opindex --cursor-color
@cindex cursor color, command-line argument
ポイントがある位置を示すEmacsのカーソルカラーを指定します。
@item -ms @var{color}
@opindex -ms
@itemx --mouse-color=@var{color}
@opindex --mouse-color
@cindex mouse pointer color, command-line argument
Emacsウィンドウにマウスがあるときの、マウスカーソルカラーを指定します。
@item -r
@opindex -r
@itemx -rv
@opindex -rv
@itemx --reverse-video
@opindex --reverse-video
@cindex reverse video, command-line argument
フォアグラウンドカラーとバックグラウンドカラーを入れ替えて、反転表示します。
@item --color=@var{mode}
@opindex --color
@cindex standard colors on a character terminal
@cindex override character terminal color support
Emacsをテキスト端末で実行するときの、@dfn{カラーサポートモード(color support
mode)}をセットします。その文字端末の@code{terminfo}データベースまたは@code{termcap}で示される、いくつかのサポートされたカラーをオーバーライドします。パラメーター@var{mode}には、以下の1つを指定できます:
@table @samp
@item never
@itemx no
端末の能力がカラーをサポートすると指定していても、カラーを使用しません。
@item default
@itemx auto
@option{--color}を指定しないときと同じです。Emacsは開始時に端末がカラーをサポートするか検知して、もしサポートされていれば、カラーディスプレーをオンに切り替えます。
@item always
@itemx yes
@itemx ansi8
無条件にカラーサポートをオンに切り替えて、標準的な8カラーにたいするANSIエスケープシーケンスによるカラーコマンドを使用します。
@item @var{num}
@var{num}個のカラーにたいするカラーモードを使用します。@var{num}が-1の場合、カラーサポートをオフに切り替えます(@samp{never}と同じです)。0の場合、この端末にたいするデフォルトのカラーサポートを使用します(@samp{auto}と同じです)。そうでない場合、@var{num}個のカラーにたいする適切な標準モードを使用します。端末の能力により、@var{num}の値に応じて、Emacsは8色、16色、88色、256色のカラーモードに切り替えることができるでしょう。@var{num}カラーをサポートするモードが存在しない場合、Emacsはあたかも@var{num}に0が指定された場合のように、その端末のデフォルトのカラーサポートを使用します。
@end table
@var{mode}が省略された場合のデフォルトは、@var{ansi8}です。
@end table

  たとえばcoralのマウスカーソルと、slate blueのテキストカーソルを使用するには、以下のように入力します:

@example
emacs -ms coral -cr 'slate blue' &
@end example

  @samp{-rv}オプションを指定するか、Xリソースの@samp{reverseVideo}で、フォアグラウンドとバックグラウンドのカラーを反転できます。

  @samp{-fg}、@samp{-bg}、@samp{-rv}オプションの機能は、テキスト端末でも、グラフィカルなディスプレーと同様です。

@node Window Size X
@appendixsec ウィンドウのサイズと位置にたいするオプション
@cindex geometry of Emacs window
@cindex position and size of Emacs frame
@cindex width and height of Emacs frame
@cindex specifying fullscreen for Emacs frame

  以下は、Emacsの初期フレームのサイズと位置を指定する、コマンドラインオプションのリストです:

@table @samp
@item -g @var{width}x@var{height}@r{[@{}+-@r{@}}@var{xoffset}@r{@{}+-@r{@}}@var{yoffset}@r{]]}
@opindex -g
@itemx --geometry=@var{width}x@var{height}@r{[@{}+-@r{@}}@var{xoffset}@r{@{}+-@r{@}}@var{yoffset}@r{]]}
@opindex --geometry
@cindex geometry, command-line argument
サイズ@var{width}と@var{height}(文字の列数と行数)、および位置@var{xoffset}と@var{yoffset}(ピクセル)を指定します。パラメーター@var{width}と@var{height}はすべてのフレームに適用されますが、@var{xoffset}と@var{yoffset}は初期フレームだけに適用されます。

@item -fs
@opindex -fs
@itemx --fullscreen
@opindex --fullscreen
@cindex fullscreen, command-line argument
スクリーンのサイズになるように、幅と高さを指定します。通常は、ウィンドウマネージャーによる装飾は表示されません(Emacsを起動した後に、@key{F11}
@code{toggle-frame-fullscreen}を使用して、この状態を切り替えることができます)。

@item -mm
@opindex -mm
@itemx --maximized
@opindex --maximized
@cindex maximized, command-line argument
Emacsのフレームが最大化されるよう指定します。これは通常、そのフレームがウィンドウマネージャーによる装飾をもつことを意味します(Emacsを起動した後に、@kbd{M-F10}
@code{toggle-frame-maximized}を使用して、この状態を切り替えることができます)。

@item -fh
@opindex -fh
@itemx --fullheight
@opindex --fullheight
@cindex fullheight, command-line argument
高さがスクリーンの高さになるように指定します。

@item -fw
@opindex -fw
@itemx --fullwidth
@opindex --fullwidth
@cindex fullwidth, command-line argument
幅がスクリーンと同じ幅になるように指定します。
@end table

@noindent
@samp{--geometry}オプションでは、@code{@r{@{}+-@r{@}}}は、プラス記号かマイナス記号のどちらかを意味します。@var{xoffset}の前のプラス記号はスクリーンの左端からの距離、マイナス記号は右端からの距離を意味します。@var{yoffset}の前のプラス記号はスクリーンの上端からの距離、マイナス記号は下端からの距離を意味します。@var{xoffset}と@var{yoffset}の値自体に正または負の値を指定できますが、それはこれらの意味を変更するものではなく、方向だけを変更します。

  Emacsは、@command{xterm}がジオメトリーを解釈するのと同じ単位を使用します。@var{width}と@var{height}は文字で数えられるので、大きなフォントは、小さなフォントより大きなフレームを作成します(プロポーショナルフォントを指定した場合、Emacsは幅の単位として、そのプロポーショナルフォントの最大幅を使用します)。@var{xoffset}と@var{yoffset}はピクセルで数えます。

  ジオメトリー指定で、すべてのフィールドを指定する必要はありません。@var{xoffset}と@var{yoffset}の両方を省略した場合、ウィンドウマネージャーがEmacsフレームをどこに配置するかを決定するか、もしかしたらマウスでその場所を指定できるかもしれません。たとえば@samp{164x55}は、ウィンドウの幅が164(通常のウィンドウを横に2つ並べられる幅)で、55行分の高さを指定します。

  デフォルトのフレーム幅は80文字で、デフォルトの高さは40行です。幅と高さの、どちらか一方、または両方を省略できます。ジオメトリーが整数で開始される場合、Emacsはそれを幅と解釈します。ジオメトリーの開始が@samp{x}でその後に整数が続く場合、Emacsはそれを高さと解釈します。したがって@samp{81}は幅だけを指定し、@samp{x45}は高さだけを指定します。

  @samp{+}か@samp{-}で開始した場合、それはオフセットを示し、幅と高さの両方のサイズが省略されたことを意味します。したがって@samp{-3}は@var{xoffset}だけを指定します(オフセットを1つだけ与えたとき、それは常に@var{xoffset}になります)。@samp{+3-3}は@var{xoffset}と@var{yoffset}の両方を指定し、フレームをスクリーンの左下に配置します。

  Xリソースファイル(@ref{Resources}を参照してください)で、任意またはすべてのフィールドにたいするデフォルトを指定できます。それらにたいしてフィールドを選択して、@samp{--geometry}オプションでオーバーライドできます。

  モードラインとエコーエリアはフレームの2行を占めるので、初期のテキストウィンドウの高さは、ジオメトリーで指定した高さより、2つ少なくなります。非X-toolkitバージョンのEmacsでは、指定した数から、メニューバーの占める1行が引かれます。しかしX-toolkitバージョンでは、メニューバーは付加的で、指定された高さにたいして数えられません。ツールバーがある場合も、それは付加的です。

  メニューバーやツールバーを有効または無効にすることにより、通常のテキストが利用できるスペースが変わります。したがって、Emacsがツールバーつき(デフォルト)で開始しされ、ツールバーがあることを前提にジオメトリー指定を処理して、それを初期化ファイルでツールバーを無効にしていた場合、あなたが指定したのと異なるフレームジオメトリーになるでしょう。ツールバーがないサイズを得るには、Xリソースで``no
tool bar''を指定します(@ref{Table of
Resources}を参照してください)。そうすれば、Emacsは指定されたジオメトリーを処理するときに、ツールバーがないことを知ることができます。

  @samp{--fullscreen}、@samp{--maximized}、@samp{--fullwidth}、@samp{--fullheight}のどれか1つを使用するとき、フレームが本当に``最大化''または``フルスクリーン''に見えるようにするために、変数@code{frame-resize-pixelwise}を非@code{nil}値にすることを要求するウィンドウマネージャーがいくつかあります。

 位置にたいする、プログラム指定とユーザー指定の両方を無視するようにできるオプションをもつウィンドウマネージャーがいくつかあります。これらのオプションがセットされている場合、Emacsはウィンドウを正しく配置するのに失敗します。

@node Borders X
@appendixsec 内枠ボーダーと外枠ボーダー
@cindex borders (X Window System)

  Emacsフレームは内枠ボーダー(internal border)と、外枠ボーダー(external
border)をもちます。内枠ボーダーはフレームのテキスト部分の周囲にある、バックグラウンドカラーによる縁取りです。内枠ボーダーはEmacs自身が描画します。外枠ボーダーはフレームの外側にあり、ウィンドウマネージャーにより追加されます。使用しているウィンドウマネージャーにより、ウィンドウを移動させたりアイコン化する様々なボックスを含む場合があります。

@table @samp
@item -ib @var{width}
@opindex -ib
@itemx --internal-border=@var{width}
@opindex --internal-border
@cindex internal border width, command-line argument
内枠ボーダー(テキストと外枠ボーダーの間)の幅に、ピクセル単位で@var{width}を指定します。

@item -bw @var{width}
@opindex -bw
@itemx --border-width=@var{width}
@opindex --border-width
@cindex main border width, command-line argument
外枠ボーダーの幅に、ピクセル単位で@var{width}を指定します。
@end table

  フレームのサイズを指定するとき、ボーダーは含まれません。フレームの位置は、外枠ボーダーの縁端から測られます。

  ピクセル幅@var{n}の内枠ボーダーを指定するには、@samp{-ib
@var{n}}オプションを使用します。デフォルトは1です。外枠ボーダーの幅を指定するには、@samp{-bw
@var{n}}を使用します(ウィンドウマネージャーはその指定に注意を払わないかもしれませんが)。外枠ボーダーのデフォルト幅は2です。

@node Title X
@appendixsec フレームタイトル

  Emacshフレームが指定されたタイトルをもつ場合もあり、もたない場合もあります。フレームタイトルが指定された場合、それはウィンドウ装飾とアイコンに、フレームの名前として表示されます。Emacsフレームが指定されたタイトルをもたない場合、デフォルトのタイトルは@samp{@var{invocation-name}@@@var{machine}}という形式(フレームが1つだけのとき)か、選択されたウィンドウのバッファー名(複数のフレームがある場合)になります。

  コマンドラインオプションで、Emacsの初期フレームのタイトルを指定できます:

@table @samp
@item -T @var{title}
@opindex -T
@itemx --title=@var{title}
@opindex --title
@cindex frame title, command-line argument
Emacs初期フレームのタイトルとして@var{title}を指定します。
@end table

  @samp{--name}オプション(@ref{Resources}を参照してください)でも、Emacs初期フレームのタイトルを指定できます。

@node Icons X
@appendixsec アイコン
@cindex icons (X Window System)
@cindex minimizing a frame at startup

@table @samp
@item -iconic
@opindex --iconic
@itemx --iconic
@cindex start iconified, command-line argument
Emacsをアイコン化(``最小化'')した状態で開始します。

@item -nbi
@opindex -nbi
@itemx --no-bitmap-icon
@opindex --no-bitmap-icon
@cindex Emacs icon, a gnu
Emacsアイコンの使用を無効にします。
@end table

  ほとんどのウィンドウマネージャーでは、Emacsフレームを``アイコン化''(または``最小化'')して、見えなくすることができます。いくつかのウィンドウマネージャーでは、他のウィンドウマネージャーがアイコン化されたウィンドウを完全に見えなくするのにたいして、アイコン化されたウィンドウを小さな``アイコン''でおきかえるものもあります。@samp{-iconic}オプションは、フレームをすぐに表示するのではなく、アイコン化された状態で実行を開始するよう、Emacsに指示します。テキストフレームはアイコン化の解除(または``最小化の解除'')をするまで表示されません。

  デフォルトでは、EmacsはEmacsロゴを含むアイコンを使用します。Gnomeのようなデスクトップ環境では、このアイコンは他のコンテキスト、たとえばEmacsフレームに切り替えるときにも表示されます。@samp{-nbi}または@samp{--no-bitmap-icon}オプションは、使用するアイコンの種類をウィンドウマネージャーに選択させるよう、Emacsに指示します。通常これはフレームのタイトルを含んだ、ただの矩形です。

@node Misc X
@appendixsec その他のディスプレーオプション

@table @samp
@c @item -hb
@c @opindex -hb
@c @itemx --horizontal-scroll-bars
@c @opindex --horizontal-scroll-bars
@c @c @cindex horizontal scroll bars, command-line argument
@c Enable horizontal scroll bars.  Since horizontal scroll bars
@c are not yet implemented, this actually does nothing.

@item --parent-id @var{id}
XEmbedプロトコルを通じて、@var{id}を親XウィンドウIDとする、クライアントXウィンドウとして、Emacsを開始します。現在のところ、このオプションは開発者にとって有用です。

@item -vb
@opindex -vb
@itemx --vertical-scroll-bars
@opindex --vertical-scroll-bars
@cindex vertical scroll bars, command-line argument
垂直スクロールバーを有効にします。

@item -lsp @var{pixels}
@opindex -lsp
@itemx --line-spacing=@var{pixels}
@opindex --line-spacing
@cindex line spacing, command-line argument
行間の追加のスペース@var{pixels}を、ピクセルで指定します。

@item -nbc
@opindex -nbc
@itemx --no-blinking-cursor
@opindex --no-blinking-cursor
@cindex blinking cursor disable, command-line argument
グラフィカルなディスプレーで、点滅カーソルを無効にします。

@item -D
@opindex -D
@itemx --basic-display
@opindex --basic-display
メニューバー、ツールバー、スクロールバー、ツールチップを無効にして、点滅カーソルをオフに切り替えます。これは表示問題のデバッグするテストケースを簡単にするのに有用です。
@end table

  @samp{--xrm}オプション(@ref{Resources}を参照してください)は、追加のXリソース値を指定します。
