@c ===========================================================================
@c
@c This file was generated with po4a. Translate the source file.
@c
@c ===========================================================================
@c This is part of the Emacs manual.
@c Copyright (C) 1985-1987, 1993-1995, 1997, 2000-2015 Free Software
@c Foundation, Inc.
@c See file emacs.texi for copying conditions.
@node Packages
@chapter Emacs Lisp Packages
@cindex Package
@cindex Emacs Lisp package archive
@cindex Package archive
@cindex Emacs Lisp package

Emacsには、追加の機能を実装する@dfn{パッケージ(packages)}を、簡単にダウンロードしてインストールする機能が含まれています。それぞれのパッケージは個別のEmacs
Lispプログラムで、Infoマニュアルのような他の構成要素が含まれているときもあります。

  @kbd{M-x
list-packages}により、すべてのパッケージのリストを含む、@file{*Packages*}という名前のバッファーが表示されます。このバッファーを通じてパッケージをインストールしたりアンインストールできます。@ref{Package
Menu}を参照してください。

@findex describe-package
  コマンド@kbd{C-h P}
(@code{describe-package})はパッケージ名の入力を求め、そのパッケージの属性や、実装する機能を説明するヘルプバッファーを表示します。

  デフォルトでは、Emacsはemacs開発者により保守されGNUプロジェクトによりホスティングされる、@dfn{パッケージアーカイブ(package
archive)}からパッケージをダウンロードします。オプションでサードパーティーにより保守されるアーカイブから、パッケージをダウンロードすることもできます。@ref{Package
Installation}を参照してください。

  Emacs Lispプログラムをインストール可能なパッケージにチューニングする情報については、@ref{Packaging,,,elisp, The
Emacs Lisp Reference Manual}を参照してください。サードパーティーのパッケージや、その他のEmacs
Lisp拡張については、@ref{Packages that do not come with Emacs,,,efaq, GNU Emacs
FAQ}を参照してください。

@menu
* Package Menu::             パッケージを閲覧・管理するためのバッファー。
* Package Installation::     パッケージのインストールにたいするオプション。
* Package Files::            パッケージがインストールされる場所。
@end menu

@node Package Menu
@section The Package Menu Buffer
@cindex package menu
@cindex built-in package
@findex list-packages

コマンド@kbd{M-x list-packages}は、@dfn{パッケージメニュー(package
menu)}を立ち上げます。これはEmacsが把握するすべてのパッケージをリストするバッファーです。リストの各行には以下の情報が表示されます:

@itemize @bullet
@item
パッケージ名(例: @samp{auctex})。

@item
パッケージのバージョン番号(例: @samp{11.86})。

@item
@c @samp{unsigned} (installed, but not signed; @pxref{Package Signing}),
パッケージのステータス(status: 状態) ---
通常は、@samp{available}(利用可能。パッケージアーカイブからダウンロードできます)、@samp{installed}(インストール済み)、@samp{built-in}(ビルトイン、組み込み。デフォルトでEmacsに含まれます)のうちの1つです。

ステータスが@samp{new}のこともあります。これは@samp{available}と同じですが、最後に@kbd{M-x
list-packages}を呼び出した後に、そのパッケージがパッケージアーカイブで新たに利用可能になったことを意味します。他にもパッケージは@samp{held}、@samp{disabled}、@samp{obsolete}のステータスをもつかもしれません。@ref{Package
Installation}を参照してください。

@item
パッケージの短い説明。
@end itemize

@noindent
@code{list-packages}は、パッケージアーカイブサーバーから利用可能なパッケージのリストを取得するために、ネットワークにアクセスします。ネットワークが利用できない場合、一番最近取得したリストにフォールバックします。

パッケージメニューでは、以下のコマンドが利用可能です:

@table @kbd
@item h
パッケージメニューの使い方を要約した短いメッセージを表示します(@code{package-menu-quick-help})。

@item ?
@itemx @key{RET}
カレント行のパッケージにたいして、@kbd{C-h
P}コマンド(@ref{Packages}を参照してください)により表示されるヘルプウィンドウと同様の、ヘルプバッファーを表示します(@code{package-menu-describe-package})。

@item i
カレント行のパッケージをインストールのためにマークします(@code{package-menu-mark-install})。パッケージのステータスが@samp{available}の場合、行の先頭に文字@samp{I}を追加します。@kbd{x}とタイプすると、パッケージをダウンロードしてインストールします(以下参照)。

@item d
カレント行のパッケージを削除のためにマークします(@code{package-menu-mark-delete})。パッケージのステータスが@samp{installed}の場合、行の先頭に文字@samp{D}を追加します。@kbd{x}とタイプすると、パッケージを削除します(以下参照)。パッケージ削除の結果、何が起こるかについての情報は、@ref{Package
Files}を参照してください。

@item u
@kbd{i}や@kbd{d}コマンドにより、でカレント行に追加された、以前のインストールまたは削除のマークを外します。

@item U
新たに利用可能になったすべてのパッケージを、``更新''のためにマークします(@code{package-menu-mark-upgrades})。これは新たに利用可能になったバージョンにインストールのマークをつけ、インストール済みの古いバージョンに削除のマークをつけます。

@item x
@kbd{i}でマークされたすべてのパッケージをダウンロードしてインストールするとともに、@kbd{d}でマークされたすべてのパッケージを削除します(@code{package-menu-execute})。これによりマークは削除されます。

@item r
パッケージリストを更新します(@code{package-menu-refresh})。これは再度パッケージアーカイブから利用可能なパッケージのリストを取得して、パッケージリストを再計算します。

@item f
パッケージリストをフィルターします(@code{package-menu-filter})。これはキーワード(例:
@samp{games})の入力を求め、そのキーワードに関連するパッケージだけを表示します。完全なパッケージリストを復元するには、@kbd{q}をタイプします。
@end table

@noindent
たとえばパッケージをインストールするには、そのパッケージの行で@kbd{i}をタイプしてから、@kbd{x}をタイプします。

@node Package Installation
@section Package Installation

@findex package-install
  パッケージを一番便利にインストールするのはパッケージメニューを使う方法(@ref{Package
Menu}を参照してください)ですが、コマンド@kbd{M-x
package-install}を使用することもできます。これはステータスが@samp{available}のパッケージ名の入力を求め、それをダウンロードしてインストールします。

@cindex package requirements
  他のパッケージが提供する機能に依存するために、それらのパッケージがインストール済みであることを@dfn{必要(require)}とするパッケージもあるでしょう。Emacsがそのようなパッケージをインストールするときは、必要なパッケージがインストールされていなければ、それらのパッケージのダウンロードとインストールも自動に行ないます(必要なパッケージが何らかの理由で利用できない場合、Emacsはエラーをシグナルしてインストールを中止します)。パッケージの必要条件リスト(requirements
list)は、そのパッケージのヘルプバッファーに表示されます。

@vindex package-archives
  デフォルトでは、パッケージはEmacs開発者により保守される単一のパッケージアーカイブからダウンロードされます。これは変数@code{package-archives}により制御されます。この変数の値は、Emacsが認識するパッケージアーカイブのリストです。リストの各要素は@code{(@var{id}
.
@var{location})}という形式でなければなりません。ここで、@var{id}はパッケージアーカイブの名前、@var{location}はパッケージアーカイブの@acronym{HTTP}アドレスかディレクトリー名です。サードパーティーのアーカイブを使用したい場合はこのリストを変更できます
--- が、自己責任で行い、信用できるサードパーティーだけを使用してください!

@anchor{Package Signing}
@cindex package security
@cindex package signing
  パッケージアーカイブのメンテナーは、パッケージに@dfn{サイン(signing)}を付して、信頼度を増すことができます。これらはプライベートとパブリックの対になる暗号化キーにより生成されます。プライベートキーは各パッケージにたいする@dfn{署名ファイル(signature
file)}を作成するのに使用されます。パブリックキーにより、署名ファイルを使用してそのパッケージを作成したのが誰か、そしてそれが変更されていないかを検証できます。有効な署名であっても、それが悪意がないパッケージであることを厳正に保証する訳ではなく、用心するべきです。パッケージアーカイブは、パブリックキーの入手方法について、説明を提供するべきです。@url{http://pgp.mit.edu/}のようなサーバーからキーをダウンロードするのも1つの方法です。Emacsにキーをインポートするには、@kbd{M-x
package-import-keyring}を使用します。Emacsは@code{package-user-dir}のサブディレクトリー@file{gnupg}に、パッケージのキーを保管します。GNUパッケージアーカイブにたいするパブリックキーはEmacsと共に配布され、@file{etc/package-keyring.gpg}にあります。Emacsはこれを自動的に使用します。

@vindex package-check-signature
@vindex package-unsigned-archives
  ユーザーオプション@code{package-check-signature}が非@code{nil}の場合、Emacsはパッケージのインストール時に書名の検証を試みます。このオプションが値@code{allow-unsigned}をもつ場合、サインされていないパッケージのインストールができます。パッケージにサインしないアーカイブを使用する場合、それらを@code{package-unsigned-archives}に追加できます。

  暗号化キーとサインについての詳細は、@ref{Top,, Top, gnupg, The GNU Privacy Guard
Manual}を参照してください。EmacsのGNU Privacy Guardにたいするインターフェースについては、@ref{Top,,
EasyPG, epa, Emacs EasyPG Assistant Manual}を参照してください。

@vindex package-pinned-packages
  複数のパッケージアーカイブが有効で、同じパッケージにたいして異なるバージョンを提供する場合は、オプション@code{package-pinned-packages}が便利かもしれません。指定したパッケージが指定されたアーカイブだけからダウンロードされるように、このリストにパッケージとアーカイブのペアーを追加できます。

  1度パッケージをダウンロードしてインストールすると、そのパッケージはカレントEmacsセッションに@dfn{ロード}されます。パッケージのロードは、Lispライブラリーのロード(@ref{Lisp
Libraries}を参照してください)とまったく同一ではありません。その効果はパッケージごとにさまざまです。ほとんどのパッケージは、いくつかの新たなコマンドを利用可能にするだけですが、Emacsセッションにたいして広範な影響を及ぼすものもあります。この種の情報については、パッケージのヘルプバッファーを参照してください。

  デフォルトでは、インストールされたパッケージは、Emacsその後のはセッションで、自動的にロードされます。これはEmacs開始時、initファイル処理後(@ref{Init
File}を参照してください)に行なわれます。例外として、@samp{-q}または@samp{--no-init-file}オプション(@ref{Initial
Options}を参照してください)で呼び出されたときは、Emacs開始時のパッケージのロードは行なわれません。

@vindex package-enable-at-startup
  自動的なパッケージのロードを無効にするには、変数@code{package-enable-at-startup}を@code{nil}に変更してください。

@findex package-initialize
  自動的なパッケージのロードがinitファイルのロード後である理由は、(パッケージシステムに影響するものも含む)ユーザーオプションが、カスタマイズされた値を受けとるのがinitファイルののロード後だからです。initファイルの中で明示的にパッケージをロードしたい状況があるかもしれません(たいていは、initファイルの他のコードが、あるパッケージに依存する等の理由により)。そのような場合、initファイルで関数@code{package-initialize}を呼び出す必要があります。@code{package-initialize}の呼び出しの前に、@code{package-load-list}(以下参照)などの関連するユーザーオプションをセットアップするのは、あなたの責任です。initファイルを処理した後に、パッケージを重複してロードするのを避けるために、@code{package-enable-at-startup}も@code{nil}にセットするべきです。かわりに、開始時にパッケージのロードを完全に抑止して、後でコマンド@kbd{M-x
package-initialize}を呼び出して手動でパッケージをロードする方法を選択したいと思うかもしれません。

@vindex package-load-list
  パッケージのロードをより精密に制御するために、変数@code{package-load-list}を使用することができます。この変数の値にはリストを指定します。リストの要素は@code{(@var{name}
@var{version})}という形式で、これはEmacsにパッケージ名@var{name}のバージョン@var{version}をロードするよう指示します。ここで、@var{version}には、(そのパッケージの特定のバージョンに対応する)バージョン文字列か、@code{t}(これは任意のインストール済みのバージョンを意味します)、または@code{nil}(これはバージョンを意味しません。パッケージがロードされるのを防いで、そのパッケージを``無効''にします)を指定します。リストの要素にはシンボル@code{all}も指定でき、これは他のリスト要素で名前指定されていない、任意のパッケージのインストール済みバージョンをロードすることを意味します。デフォルト値は、単に@code{'(all)}となっています。

  たとえば@code{package-load-list}を@code{'((muse "3.20")
all)}にセットした場合、Emacsは@samp{muse}のバージョン3.20と、@samp{muse}以外のパッケージのインストール済みの任意のバージョンをロードします。@samp{muse}の他のバージョンがインストールされていたとしても、それらは無視されます。@samp{muse}パッケージは、@samp{held}というステータスでパッケージメニューにリストされるはずです。

@node Package Files
@section Package Files and Directory Layout
@cindex package directory

@cindex package file
@findex package-install-file
  各パッケージはパッケージアーカイブから単一ファイル形式 －－－ 1つのEmacs Lispソースファイル、または複数のEmacs
Lispソースと他のファイルを含むtarファイル ---
でダウンロードされます。パッケージファイルは、パッケージをインストールするEmacsコマンドにより自動的に取得、処理、配置されます。パッケージを作成する(@ref{Packaging,,,elisp,
The Emacs Lisp Reference
Manual}を参照してください)のでない限り、通常これらを直接扱う必要はないでしょう。パッケージファイルから直接パッケージをインストールする必要があるときは、コマンド@kbd{M-x
package-install-file}を使用してください。

@vindex package-user-dir
  1度インストールされると、パッケージの内容はそのサブディレクトリーに配置されます(変数@code{package-user-dir}を変更することにより、ディレクトリーの名前を変更できます)。パッケージのサブディレクトリーは@file{@var{name}-@var{version}}という名前で、@var{name}はパッケージ名、@var{version}はバージョン文字列です。

@cindex system-wide packages
@vindex package-directory-list
  @code{package-user-dir}に加えて、Emacsは@code{package-directory-list}にリストされたディレクトリーからインストール済みパッケージを探します。これらのディレクトリーはシステム管理者のためのディレクトリーで、Emacsパッケージをシステムワイドに利用可能にするためのものです。Emacs自身がこれらのディレクトリーにパッケージをインストールすることはありません。@code{package-directory-list}にたいするパッケージのサブディレクトリーは、@code{package-user-dir}と同じ方法で配置されます。

  パッケージの削除(@ref{Package
Menu}を参照してください)は、対応するパッケージのサブディレクトリーを削除します。これは@code{package-user-dir}にインストールされたパッケージだけに機能します。システムワイドなパッケージディレクトリーにたいして呼び出された場合、削除コマンドはエラーをシグナルします。
